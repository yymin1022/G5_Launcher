.class public Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;
.super Lcom/lge/mdm/manager/ILGMDMDevicePolicyManager$Stub;
.source "LGMDMDevicePolicyManagerService.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$1;
    }
.end annotation


# static fields
.field private static final DEVICE_LOCKNOW:I = 0x2

.field private static final MDMTAG:Ljava/lang/String; = "LGMDMDevicePolicyManagerService"

.field private static final NOT_SUPPORT_EAS_AND_KILLSWITCH:Z = true

.field private static final SUPPORT_EAS_AND_KILLSWITCH:Z

.field private static final SYNC_ATCLIENT:Ljava/lang/Object;


# instance fields
.field final mContext:Landroid/content/Context;

.field private mDevicePolicyManager:Landroid/app/admin/DevicePolicyManager;

.field private mHandlerThread:Landroid/os/HandlerThread;

.field final mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

.field final mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

.field final mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

.field final mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

.field final mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

.field final mLGMDMBrowserController:Lcom/lge/mdm/controller/LGMDMBrowserController;

.field final mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

.field final mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

.field final mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

.field final mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

.field final mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

.field final mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

.field final mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

.field final mLGMDMDualWindowController:Lcom/lge/mdm/controller/LGMDMDualWindowController;

.field final mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

.field final mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

.field final mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

.field final mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

.field final mLGMDMIMEIController:Lcom/lge/mdm/controller/LGMDMIMEIController;

.field final mLGMDMIRController:Lcom/lge/mdm/controller/LGMDMIRController;

.field final mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

.field final mLGMDMKeyCotroller:Lcom/lge/mdm/controller/LGMDMKeyController;

.field final mLGMDMMasterController:Lcom/lge/mdm/controller/LGMDMMasterController;

.field final mLGMDMMessageController:Lcom/lge/mdm/controller/LGMDMMessageController;

.field final mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

.field final mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

.field final mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

.field final mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

.field final mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

.field final mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

.field final mLGMDMPowerOffController:Lcom/lge/mdm/controller/LGMDMPowerOffController;

.field final mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

.field final mLGMDMSKTSSMController:Lcom/lge/mdm/controller/LGMDMSKTSSMController;

.field final mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

.field final mLGMDMShortcutKeyController:Lcom/lge/mdm/controller/LGMDMShortcutKeyController;

.field final mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

.field final mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

.field final mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

.field final mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

.field final mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

.field final mLGMDMWirelessStorageController:Lcom/lge/mdm/controller/LGMDMWirelessStorageController;

.field public final mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

.field final mPriviligedUserController:Lcom/lge/mdm/controller/LGMDMPriviligedUserController;

.field mReceiver:Landroid/content/BroadcastReceiver;

.field private final mReceiverHandler:Landroid/os/Handler;

.field private mReceiverHandlerThread:Landroid/os/HandlerThread;

.field final mUserManager:Landroid/os/UserManager;


# direct methods
.method static synthetic -wrap0(Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;)Landroid/app/admin/DevicePolicyManager;
    .registers 2

    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v0

    return-object v0
.end method

.method static synthetic -wrap1(Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;)Z
    .registers 2

    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    return v0
.end method

.method static synthetic -wrap2(Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;I)V
    .registers 2
    .param p1, "userHandle"    # I

    .prologue
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->adoptTetheringPolicyForNotOwner(I)V

    return-void
.end method

.method static constructor <clinit>()V
    .registers 1

    .prologue
    .line 120
    new-instance v0, Ljava/lang/Object;

    invoke-direct {v0}, Ljava/lang/Object;-><init>()V

    sput-object v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    .line 104
    return-void
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .registers 11
    .param p1, "context"    # Landroid/content/Context;

    .prologue
    const/4 v8, 0x0

    const/4 v7, 0x0

    .line 364
    invoke-direct {p0}, Lcom/lge/mdm/manager/ILGMDMDevicePolicyManager$Stub;-><init>()V

    .line 111
    iput-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mHandlerThread:Landroid/os/HandlerThread;

    .line 112
    iput-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandlerThread:Landroid/os/HandlerThread;

    .line 115
    iput-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mDevicePolicyManager:Landroid/app/admin/DevicePolicyManager;

    .line 196
    new-instance v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$1;

    invoke-direct {v0, p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$1;-><init>(Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;)V

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    .line 365
    iput-object p1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 367
    invoke-static {p1}, Lcom/lge/mdm/util/handler/LGMDMPostRunnable;->initialize(Landroid/content/Context;)V

    .line 368
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/os/UserManager;->get(Landroid/content/Context;)Landroid/os/UserManager;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    .line 370
    new-instance v0, Landroid/os/HandlerThread;

    const-string/jumbo v1, "LGMDMDevicePolicyManagerServiceReceiver"

    invoke-direct {v0, v1}, Landroid/os/HandlerThread;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandlerThread:Landroid/os/HandlerThread;

    .line 371
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandlerThread:Landroid/os/HandlerThread;

    invoke-virtual {v0}, Landroid/os/HandlerThread;->start()V

    .line 372
    new-instance v0, Landroid/os/Handler;

    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandlerThread:Landroid/os/HandlerThread;

    invoke-virtual {v1}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, v1}, Landroid/os/Handler;-><init>(Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandler:Landroid/os/Handler;

    .line 374
    new-instance v0, Landroid/os/HandlerThread;

    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    invoke-direct {v0, v1}, Landroid/os/HandlerThread;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mHandlerThread:Landroid/os/HandlerThread;

    .line 375
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mHandlerThread:Landroid/os/HandlerThread;

    invoke-virtual {v0}, Landroid/os/HandlerThread;->start()V

    .line 376
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mHandlerThread:Landroid/os/HandlerThread;

    invoke-virtual {v0}, Landroid/os/HandlerThread;->getLooper()Landroid/os/Looper;

    move-result-object v0

    invoke-static {p1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->init(Landroid/content/Context;Landroid/os/Looper;)V

    .line 379
    invoke-static {}, Lcom/lge/mdm/admin/LGMDMHardwareParser;->getInstance()Lcom/lge/mdm/admin/LGMDMHardwareParser;

    move-result-object v1

    invoke-static {}, Lcom/lge/mdm/admin/LGMDMGeneralParser;->getInstance()Lcom/lge/mdm/admin/LGMDMGeneralParser;

    move-result-object v2

    .line 380
    invoke-static {}, Lcom/lge/mdm/admin/LGMDMApplicationParser;->getInstance()Lcom/lge/mdm/admin/LGMDMApplicationParser;

    move-result-object v3

    invoke-static {}, Lcom/lge/mdm/admin/LGMDMAppListParser;->getInstance()Lcom/lge/mdm/admin/LGMDMAppListParser;

    move-result-object v4

    .line 381
    invoke-static {}, Lcom/lge/mdm/admin/LGMDMATClientParser;->getInstance()Lcom/lge/mdm/admin/LGMDMATClientParser;

    move-result-object v5

    invoke-static {}, Lcom/lge/mdm/admin/LGISGeneralParser;->getInstance()Lcom/lge/mdm/admin/LGISGeneralParser;

    move-result-object v6

    move-object v0, p1

    .line 378
    invoke-static/range {v0 .. v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getInstance(Landroid/content/Context;Lcom/lge/mdm/admin/ILGMDMXml;Lcom/lge/mdm/admin/ILGMDMXml;Lcom/lge/mdm/admin/ILGMDMXml;Lcom/lge/mdm/admin/ILGMDMXml;Lcom/lge/mdm/admin/ILGMDMXml;Lcom/lge/mdm/admin/ILGMDMXml;)Lcom/lge/mdm/admin/LGMDMadministrator;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 383
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->setAllUserInfoList()V

    .line 386
    invoke-static {p0}, Lcom/lge/mdm/controller/LGMDMWifiController;->getInstance(Ljava/lang/Object;)Lcom/lge/mdm/controller/LGMDMWifiController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    .line 387
    invoke-static {p0}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getInstance(Ljava/lang/Object;)Lcom/lge/mdm/controller/LGMDMBluetoothController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    .line 388
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getInstance()Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 389
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMGpsController;->getInstance()Lcom/lge/mdm/controller/LGMDMGpsController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    .line 390
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMIMEIController;->getInstance()Lcom/lge/mdm/controller/LGMDMIMEIController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIMEIController:Lcom/lge/mdm/controller/LGMDMIMEIController;

    .line 391
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getInstance()Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    .line 392
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMCameraController;->getInstance()Lcom/lge/mdm/controller/LGMDMCameraController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    .line 393
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMUsbController;->getInstance()Lcom/lge/mdm/controller/LGMDMUsbController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    .line 394
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMVpnController;->getInstance()Lcom/lge/mdm/controller/LGMDMVpnController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    .line 395
    invoke-static {p0}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getInstance(Ljava/lang/Object;)Lcom/lge/mdm/controller/LGMDMTetheringController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    .line 396
    invoke-static {p0}, Lcom/lge/mdm/controller/LGMDMNfcController;->getInstance(Ljava/lang/Object;)Lcom/lge/mdm/controller/LGMDMNfcController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    .line 397
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMApnController;->getInstance()Lcom/lge/mdm/controller/LGMDMApnController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

    .line 398
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMDeviceController;->getInstance()Lcom/lge/mdm/controller/LGMDMDeviceController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    .line 399
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMQuickCoverController;->getInstance()Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    .line 402
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getInstance()Lcom/lge/mdm/controller/LGMDMGeneralController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    .line 403
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMBrowserController;->getInstance()Lcom/lge/mdm/controller/LGMDMBrowserController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBrowserController:Lcom/lge/mdm/controller/LGMDMBrowserController;

    .line 404
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMessageController;->getInstance()Lcom/lge/mdm/controller/LGMDMMessageController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMessageController:Lcom/lge/mdm/controller/LGMDMMessageController;

    .line 405
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getInstance()Lcom/lge/mdm/controller/LGMDMNetworkController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 406
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getInstance()Lcom/lge/mdm/controller/LGMDMPasswordController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    .line 407
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getInstance()Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    .line 408
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMCCModeController;->getInstance()Lcom/lge/mdm/controller/LGMDMCCModeController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    .line 409
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getInstance()Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    .line 410
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getInstance()Lcom/lge/mdm/controller/LGMDMIptablesController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    .line 413
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getInstance()Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    .line 414
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMPermissionController;->getInstance()Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    .line 417
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMDualWindowController;->getInstance()Lcom/lge/mdm/controller/LGMDMDualWindowController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDualWindowController:Lcom/lge/mdm/controller/LGMDMDualWindowController;

    .line 420
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMPowerOffController;->getInstance()Lcom/lge/mdm/controller/LGMDMPowerOffController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPowerOffController:Lcom/lge/mdm/controller/LGMDMPowerOffController;

    .line 422
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMEmailController;->getInstance()Lcom/lge/mdm/controller/LGMDMEmailController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    .line 424
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMCryptoController;->getInstance()Lcom/lge/mdm/controller/LGMDMCryptoController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    .line 426
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMasterController;->getInstance()Lcom/lge/mdm/controller/LGMDMMasterController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMasterController:Lcom/lge/mdm/controller/LGMDMMasterController;

    .line 429
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMCertificateController;->getInstance()Lcom/lge/mdm/controller/LGMDMCertificateController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    .line 432
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMKeyController;->getInstance()Lcom/lge/mdm/controller/LGMDMKeyController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMKeyCotroller:Lcom/lge/mdm/controller/LGMDMKeyController;

    .line 435
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMWirelessStorageController;->getInstance()Lcom/lge/mdm/controller/LGMDMWirelessStorageController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWirelessStorageController:Lcom/lge/mdm/controller/LGMDMWirelessStorageController;

    .line 438
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->getInstance()Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    .line 441
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getInstance()Lcom/lge/mdm/controller/LGMDMMultiUserController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    .line 443
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->getInstance()Lcom/lge/mdm/controller/LGMDMAudioPortController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    .line 445
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->getInstance()Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    .line 447
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMSKTSSMController;->getInstance()Lcom/lge/mdm/controller/LGMDMSKTSSMController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSKTSSMController:Lcom/lge/mdm/controller/LGMDMSKTSSMController;

    .line 450
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMIRController;->getInstance()Lcom/lge/mdm/controller/LGMDMIRController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIRController:Lcom/lge/mdm/controller/LGMDMIRController;

    .line 453
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMShortcutKeyController;->getInstance()Lcom/lge/mdm/controller/LGMDMShortcutKeyController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMShortcutKeyController:Lcom/lge/mdm/controller/LGMDMShortcutKeyController;

    .line 456
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->getInstance()Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    move-result-object v0

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    .line 458
    sget-object v0, Lcom/lge/mdm/controller/LGMDMPriviligedUserController;->INSTANCE:Lcom/lge/mdm/controller/LGMDMPriviligedUserController;

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mPriviligedUserController:Lcom/lge/mdm/controller/LGMDMPriviligedUserController;

    .line 460
    new-instance v3, Landroid/content/IntentFilter;

    invoke-direct {v3}, Landroid/content/IntentFilter;-><init>()V

    .line 461
    .local v3, "filter":Landroid/content/IntentFilter;
    const-string/jumbo v0, "android.intent.action.BOOT_COMPLETED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 462
    const-string/jumbo v0, "com.android.server.ACTION_EXPIRED_PASSWORD_NOTIFICATION"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 463
    const-string/jumbo v0, "android.intent.action.USER_ADDED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 464
    const-string/jumbo v0, "android.intent.action.USER_REMOVED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 465
    const-string/jumbo v0, "android.intent.action.USER_STARTED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 466
    const-string/jumbo v0, "android.intent.action.USER_PRESENT"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 467
    const-string/jumbo v0, "android.intent.action.USER_SWITCHED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 469
    const-string/jumbo v0, "com.lge.intent.action.ACTION_ECBM_EXIT_FOR_VOLTE"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 471
    const-string/jumbo v0, "android.intent.action.EMERGENCY_CALLBACK_MODE_CHANGED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 472
    const-string/jumbo v0, "android.intent.action.PHONE_STATE"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 474
    const-string/jumbo v0, "com.lge.android.intent.action.ACCESSORY_COVER_EVENT"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 475
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandler:Landroid/os/Handler;

    move-object v0, p1

    move-object v4, v7

    invoke-virtual/range {v0 .. v5}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 477
    const-string/jumbo v0, "android.intent.action.PACKAGE_CHANGED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 478
    const-string/jumbo v0, "android.intent.action.PACKAGE_REMOVED"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 479
    const-string/jumbo v0, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 480
    const-string/jumbo v0, "package"

    invoke-virtual {v3, v0}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 481
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiver:Landroid/content/BroadcastReceiver;

    sget-object v2, Landroid/os/UserHandle;->ALL:Landroid/os/UserHandle;

    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mReceiverHandler:Landroid/os/Handler;

    move-object v0, p1

    move-object v4, v7

    invoke-virtual/range {v0 .. v5}, Landroid/content/Context;->registerReceiverAsUser(Landroid/content/BroadcastReceiver;Landroid/os/UserHandle;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;)Landroid/content/Intent;

    .line 483
    invoke-static {}, Lcom/lge/mdm/util/MDMLog;->loadDebugMode()V

    .line 484
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMSignatureKeyManageController;->getInstance()Lcom/lge/mdm/controller/LGMDMSignatureKeyManageController;

    move-result-object v1

    invoke-virtual {v1}, Lcom/lge/mdm/controller/LGMDMSignatureKeyManageController;->initializeSignaureData()Ljava/util/Map;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->setSignatureList(Ljava/util/Map;)V

    .line 487
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, v7, v8}, Lcom/lge/mdm/admin/LGMDMadministrator;->loadSettingsLocked(Lcom/lge/mdm/admin/LGMDMadministrator$DevicePolicyData;I)Z

    move-result v0

    if-eqz v0, :cond_203

    .line 488
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, v8}, Lcom/lge/mdm/controller/LGMDMWifiController;->syncWifiAutoConnectionPolicy(I)V

    .line 491
    :cond_203
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->setGoogleAccountObserver()V

    .line 364
    return-void
.end method

.method private adoptTetheringPolicyForNotOwner(I)V
    .registers 9
    .param p1, "userHandle"    # I

    .prologue
    const/4 v6, 0x0

    .line 1713
    const/4 v2, 0x1

    .line 1714
    .local v2, "allowTethering":Z
    const/4 v0, 0x1

    .line 1715
    .local v0, "allowBTTethering":Z
    const/4 v3, 0x1

    .line 1716
    .local v3, "allowUSBTethering":Z
    const/4 v1, 0x1

    .line 1717
    .local v1, "allowHotspotTethering":Z
    if-nez p1, :cond_8

    .line 1718
    return-void

    .line 1720
    :cond_8
    monitor-enter p0

    .line 1721
    :try_start_9
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p1}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowTethering(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 1722
    .local v2, "allowTethering":Z
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    .line 1723
    const/4 v5, 0x0

    .line 1722
    invoke-virtual {v4, v5, p1}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowBluetoothTethering(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 1724
    .local v0, "allowBTTethering":Z
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p1}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowUSBTethering(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1725
    .local v3, "allowUSBTethering":Z
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p1}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowHotspot(Landroid/content/ComponentName;I)Z
    :try_end_24
    .catchall {:try_start_9 .. :try_end_24} :catchall_38

    move-result v1

    .local v1, "allowHotspotTethering":Z
    monitor-exit p0

    .line 1727
    if-nez v2, :cond_3b

    .line 1728
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setBluetoothTetheringDisable()V

    .line 1729
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setUsbTetheringDisable()V

    .line 1730
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, v6}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setHotspotDisable(Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;)V

    .line 1731
    return-void

    .line 1720
    .end local v0    # "allowBTTethering":Z
    .end local v2    # "allowTethering":Z
    .end local v3    # "allowUSBTethering":Z
    .local v1, "allowHotspotTethering":Z
    :catchall_38
    move-exception v4

    monitor-exit p0

    throw v4

    .line 1733
    .restart local v0    # "allowBTTethering":Z
    .local v1, "allowHotspotTethering":Z
    .restart local v2    # "allowTethering":Z
    .restart local v3    # "allowUSBTethering":Z
    :cond_3b
    if-nez v0, :cond_42

    .line 1734
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setBluetoothTetheringDisable()V

    .line 1736
    :cond_42
    if-nez v3, :cond_49

    .line 1737
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setUsbTetheringDisable()V

    .line 1739
    :cond_49
    if-nez v1, :cond_50

    .line 1740
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, v6}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setHotspotDisable(Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;)V

    .line 1712
    :cond_50
    return-void
.end method

.method private afterRemoveActiveAdmin(Landroid/content/ComponentName;Lcom/lge/mdm/admin/LGMDMadminlist;I)V
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "admin"    # Lcom/lge/mdm/admin/LGMDMadminlist;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, 0x1

    .line 4773
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->resetGlobalValues(Landroid/content/ComponentName;I)V

    .line 4775
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->updateWatcherAndKeeper(I)V

    .line 4777
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->removeLockoutDescriptComponentList(Landroid/content/ComponentName;I)V

    .line 4778
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->updateAllowOSUpdate(I)V

    .line 4779
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->updateAllowBrowserProxySetup(I)V

    .line 4782
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, v1, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowWipeData(Landroid/content/ComponentName;ZI)V

    .line 4785
    invoke-direct {p0, p2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->sendBroadcastDisabledPolicyChange(Lcom/lge/mdm/admin/LGMDMadminlist;)V

    .line 4788
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(I)V

    .line 4789
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->sendBroadcastDeviceAdminDiabled(Landroid/content/ComponentName;)V

    .line 4792
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, v1}, Lcom/lge/mdm/controller/LGMDMWifiController;->enableWifiP2p(Z)V

    .line 4794
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->resetStatusBarExpansion(I)V

    .line 4798
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->fetchPolicies()V

    .line 4801
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMGpsController;->fetchPolicies()V

    .line 4804
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateGlobalWifiLists(I)V

    .line 4772
    return-void
.end method

.method private beforeRemoveActiveAdmin(Landroid/content/ComponentName;Lcom/lge/mdm/admin/LGMDMadminlist;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "admin"    # Lcom/lge/mdm/admin/LGMDMadminlist;
    .param p3, "userHandle"    # I

    .prologue
    .line 4760
    :try_start_0
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v2, 0x0

    invoke-virtual {v1, p1, v2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setApplicationState(Landroid/content/ComponentName;Ljava/util/List;I)V
    :try_end_6
    .catch Ljava/lang/SecurityException; {:try_start_0 .. :try_end_6} :catch_16

    .line 4765
    :goto_6
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v1, p2, p3}, Lcom/lge/mdm/controller/LGMDMIptablesController;->resetInternetAccessSetup(Lcom/lge/mdm/admin/LGMDMadminlist;I)V

    .line 4767
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v1, p2, p3}, Lcom/lge/mdm/controller/LGMDMIptablesController;->resetCommandInternetAccessSetup(Lcom/lge/mdm/admin/LGMDMadminlist;I)V

    .line 4769
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    invoke-virtual {v1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPermissionController;->clearPoliciesLocked(Lcom/lge/mdm/admin/LGMDMadminlist;I)V

    .line 4758
    return-void

    .line 4761
    :catch_16
    move-exception v0

    .line 4762
    .local v0, "se":Ljava/lang/SecurityException;
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    invoke-virtual {v0}, Ljava/lang/SecurityException;->getMessage()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_6
.end method

.method private checkComponentName(Landroid/content/ComponentName;)V
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Ljava/lang/NullPointerException;
        }
    .end annotation

    .prologue
    .line 4623
    if-nez p1, :cond_14

    .line 4624
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "[error] ComponentName NullPointerException  "

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->w(Ljava/lang/String;Ljava/lang/String;)V

    .line 4625
    new-instance v0, Ljava/lang/NullPointerException;

    const-string/jumbo v1, "ComponentName is null"

    invoke-direct {v0, v1}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4622
    :cond_14
    return-void
.end method

.method private checkRemoveATclinetAPIs(Landroid/content/ComponentName;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7680
    sget-object v2, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v2

    .line 7681
    :try_start_3
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v1}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->checkPortingATClient()Z

    move-result v1

    if-eqz v1, :cond_22

    .line 7682
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->getAllowDataTransmissionViaAudioPort(Landroid/content/ComponentName;I)Z

    move-result v1

    if-nez v1, :cond_22

    .line 7684
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    .line 7685
    const/4 v3, 0x1

    .line 7684
    invoke-virtual {v1, p1, v3, p2}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->checkDataTransmissionViaAudioPortPolicy(Landroid/content/ComponentName;ZI)Z

    move-result v0

    .line 7686
    .local v0, "changePolicy":Z
    if-eqz v0, :cond_22

    .line 7687
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    const/4 v3, 0x1

    invoke-virtual {v1, v3}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->setATClientDataTransmissionViaAudioPort(Z)I

    .line 7692
    .end local v0    # "changePolicy":Z
    :cond_22
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v1}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->checkPortingATClient()Z

    move-result v1

    if-eqz v1, :cond_41

    .line 7693
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->getAllowDownloadMode(Landroid/content/ComponentName;I)Z

    move-result v1

    if-nez v1, :cond_41

    .line 7694
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    .line 7695
    const/4 v3, 0x1

    .line 7694
    invoke-virtual {v1, p1, v3, p2}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->checkDownloadModePolicy(Landroid/content/ComponentName;ZI)Z

    move-result v0

    .line 7696
    .restart local v0    # "changePolicy":Z
    if-eqz v0, :cond_41

    .line 7697
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    const/4 v3, 0x1

    invoke-virtual {v1, v3}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->setATClinetDownloadMode(Z)I

    .line 7702
    .end local v0    # "changePolicy":Z
    :cond_41
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v1}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->checkPortingATClient()Z

    move-result v1

    if-eqz v1, :cond_60

    .line 7703
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->getAllowHardwareFactoryreset(Landroid/content/ComponentName;I)Z

    move-result v1

    if-nez v1, :cond_60

    .line 7705
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    .line 7706
    const/4 v3, 0x1

    .line 7705
    invoke-virtual {v1, p1, v3, p2}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->checkHardwareFactoryResetPolicy(Landroid/content/ComponentName;ZI)Z

    move-result v0

    .line 7707
    .restart local v0    # "changePolicy":Z
    if-eqz v0, :cond_60

    .line 7708
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    const/4 v3, 0x1

    invoke-virtual {v1, v3}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->setATClientHardwareFactoryReset(Z)I
    :try_end_60
    .catchall {:try_start_3 .. :try_end_60} :catchall_62

    .end local v0    # "changePolicy":Z
    :cond_60
    monitor-exit v2

    .line 7679
    return-void

    .line 7680
    :catchall_62
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method private getAllowMDMAplicationPolicy(Landroid/content/Context;Ljava/lang/String;I)Z
    .registers 11
    .param p1, "mContext"    # Landroid/content/Context;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v6, 0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    .line 4053
    invoke-virtual {p0, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getActiveAdminList(I)Ljava/util/List;

    move-result-object v0

    .line 4054
    .local v0, "cnList":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    if-nez v0, :cond_a

    .line 4055
    return v6

    .line 4057
    :cond_a
    const/4 v2, 0x0

    .line 4060
    .local v2, "rv":I
    invoke-virtual {p0, v4, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowBrowser(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_17

    .line 4061
    invoke-virtual {p0, v4, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowNonWebkitBrowser(Landroid/content/ComponentName;I)Z

    move-result v3

    if-nez v3, :cond_22

    .line 4062
    :cond_17
    invoke-static {}, Lcom/lge/mdm/util/LGMDMCheckApplication;->getInstance()Lcom/lge/mdm/util/LGMDMCheckApplication;

    move-result-object v3

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/util/LGMDMCheckApplication;->checkStartBrowserActivityLocked(Landroid/content/Context;Ljava/lang/String;I)I

    move-result v2

    .line 4064
    if-eqz v2, :cond_22

    .line 4065
    return v5

    .line 4070
    :cond_22
    invoke-virtual {p0, v4, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowSendingSMS(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_2e

    .line 4071
    invoke-virtual {p0, v4, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowReceivingSmsMms(Landroid/content/ComponentName;I)Z

    move-result v3

    if-nez v3, :cond_35

    .line 4072
    :cond_2e
    invoke-static {p2}, Lcom/lge/mdm/util/SpecificPackageName;->isMessageApp(Ljava/lang/String;)I

    move-result v2

    .line 4073
    if-eqz v2, :cond_35

    .line 4074
    return v5

    .line 4079
    :cond_35
    invoke-virtual {p0, v4, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUnsignedApplication(Landroid/content/ComponentName;I)Z

    move-result v3

    if-nez v3, :cond_46

    .line 4080
    invoke-static {}, Lcom/lge/mdm/util/LGMDMCheckApplication;->getInstance()Lcom/lge/mdm/util/LGMDMCheckApplication;

    move-result-object v3

    invoke-virtual {v3, p2, v0, p3}, Lcom/lge/mdm/util/LGMDMCheckApplication;->checkUnsignedApplicationEnable(Ljava/lang/String;Ljava/util/List;I)I

    move-result v2

    .line 4082
    if-eqz v2, :cond_46

    .line 4083
    return v5

    .line 4088
    :cond_46
    invoke-virtual {p0, p2, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkApplicationEnable(Ljava/lang/String;I)I

    move-result v2

    .line 4089
    if-eqz v2, :cond_4d

    .line 4090
    return v5

    .line 4094
    :cond_4d
    invoke-virtual {p0, p2, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isContainWatcherAndKeeperList(Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_5d

    .line 4095
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "LGMDM Block Exception list"

    invoke-static {v3, v4}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4096
    return v5

    .line 4100
    :cond_5d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v1

    .line 4101
    .local v1, "manager":Landroid/app/admin/DevicePolicyManager;
    if-eqz v1, :cond_79

    invoke-virtual {v1, v4, p3}, Landroid/app/admin/DevicePolicyManager;->getCameraDisabled(Landroid/content/ComponentName;I)Z

    move-result v3

    if-eqz v3, :cond_79

    .line 4102
    invoke-direct {p0, p2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isCameraApp(Ljava/lang/String;)I

    move-result v2

    .line 4103
    if-eqz v2, :cond_79

    .line 4104
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "LGMDM Block Camera"

    invoke-static {v3, v4}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4105
    return v5

    .line 4109
    :cond_79
    return v6
.end method

.method private getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;
    .registers 3

    .prologue
    .line 496
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mDevicePolicyManager:Landroid/app/admin/DevicePolicyManager;

    if-nez v0, :cond_11

    .line 497
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 498
    const-string/jumbo v1, "device_policy"

    .line 497
    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/admin/DevicePolicyManager;

    iput-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mDevicePolicyManager:Landroid/app/admin/DevicePolicyManager;

    .line 500
    :cond_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mDevicePolicyManager:Landroid/app/admin/DevicePolicyManager;

    return-object v0
.end method

.method private isAPILevelAllFeature()Z
    .registers 2

    .prologue
    .line 6335
    invoke-static {}, Lcom/lge/mdm/util/LGMDMVersionInfo;->getDeviceAPILevel()Z

    move-result v0

    return v0
.end method

.method private isAuthorizedCaller()Z
    .registers 6

    .prologue
    .line 5787
    const/4 v1, 0x0

    .line 5789
    .local v1, "bGranted":Z
    monitor-enter p0

    .line 5791
    :try_start_2
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const/4 v4, 0x0

    invoke-virtual {v3, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 5792
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    if-eqz v0, :cond_d

    .line 5793
    iget-boolean v1, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->apiAuth:Z
    :try_end_d
    .catch Ljava/lang/SecurityException; {:try_start_2 .. :try_end_d} :catch_1a
    .catchall {:try_start_2 .. :try_end_d} :catchall_25

    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v1    # "bGranted":Z
    :cond_d
    :goto_d
    monitor-exit p0

    .line 5800
    if-nez v1, :cond_28

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/16 v4, 0x3e8

    if-eq v3, v4, :cond_28

    .line 5801
    const/4 v3, 0x0

    return v3

    .line 5795
    .restart local v1    # "bGranted":Z
    :catch_1a
    move-exception v2

    .line 5796
    .local v2, "e":Ljava/lang/SecurityException;
    :try_start_1b
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "CallingUid is not administrator!!!"

    invoke-static {v3, v4}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_24
    .catchall {:try_start_1b .. :try_end_24} :catchall_25

    goto :goto_d

    .line 5789
    .end local v2    # "e":Ljava/lang/SecurityException;
    :catchall_25
    move-exception v3

    monitor-exit p0

    throw v3

    .line 5803
    .end local v1    # "bGranted":Z
    :cond_28
    const/4 v3, 0x1

    return v3
.end method

.method private isCameraApp(Ljava/lang/String;)I
    .registers 4
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 4113
    const-string/jumbo v0, "com.lge.camera"

    .line 4114
    .local v0, "cameraPackagename":Ljava/lang/String;
    if-eqz p1, :cond_e

    invoke-virtual {v0, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_e

    .line 4115
    const/16 v1, -0x6f

    return v1

    .line 4117
    :cond_e
    const/4 v1, 0x0

    return v1
.end method

.method private isWifiOnly()Z
    .registers 7

    .prologue
    const/4 v1, 0x0

    .line 6339
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 6340
    const-string/jumbo v5, "connectivity"

    .line 6339
    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/net/ConnectivityManager;

    .line 6341
    .local v0, "cm":Landroid/net/ConnectivityManager;
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6343
    .local v2, "identity":J
    const/4 v4, 0x0

    :try_start_11
    invoke-virtual {v0, v4}, Landroid/net/ConnectivityManager;->isNetworkSupported(I)Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_1c

    move-result v4

    if-nez v4, :cond_18

    const/4 v1, 0x1

    .line 6345
    :cond_18
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6343
    return v1

    .line 6344
    :catchall_1c
    move-exception v1

    .line 6345
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6344
    throw v1
.end method

.method private resetManualSyncWhenRoaming(Landroid/content/ComponentName;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4813
    const/4 v1, -0x1

    .line 4814
    .local v1, "retValue":I
    monitor-enter p0

    .line 4816
    :try_start_2
    invoke-virtual {p0, p1, p2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getManualSyncWhenRoaming(Landroid/content/ComponentName;I)Z

    move-result v2

    if-eqz v2, :cond_f

    .line 4817
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->setManualSyncWhenRoaming(Landroid/content/ComponentName;ZI)I
    :try_end_e
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_e} :catch_16
    .catchall {:try_start_2 .. :try_end_e} :catchall_21

    move-result v1

    :cond_f
    :goto_f
    monitor-exit p0

    .line 4823
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v2, v1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->handleSetManualSyncWhenRoaming(II)V

    .line 4812
    return-void

    .line 4819
    :catch_16
    move-exception v0

    .line 4820
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_17
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "fail recoveryAutoSync"

    invoke-static {v2, v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_20
    .catchall {:try_start_17 .. :try_end_20} :catchall_21

    goto :goto_f

    .line 4814
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_21
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method private sendBroadcastDeviceAdminDiabled(Landroid/content/ComponentName;)V
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;

    .prologue
    .line 4736
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v2, "com.lge.mdm.intent.ACTION_DEVICE_ADMIN_DISABLED"

    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4737
    .local v0, "intent":Landroid/content/Intent;
    new-instance v1, Landroid/content/ComponentName;

    const-string/jumbo v2, "com.lge.email"

    .line 4738
    const-string/jumbo v3, "com.lge.email.policy.mdm.MDMConfigReceiver"

    .line 4737
    invoke-direct {v1, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 4739
    .local v1, "receiver":Landroid/content/ComponentName;
    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 4740
    const-string/jumbo v2, "COMPONENT_NAME"

    invoke-virtual {v0, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 4741
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v2

    invoke-virtual {v2, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 4735
    return-void
.end method

.method private sendBroadcastDisabledPolicyChange(Lcom/lge/mdm/admin/LGMDMadminlist;)V
    .registers 8
    .param p1, "admin"    # Lcom/lge/mdm/admin/LGMDMadminlist;

    .prologue
    .line 4745
    if-eqz p1, :cond_8

    invoke-virtual {p1}, Lcom/lge/mdm/admin/LGMDMadminlist;->getDeviceAdminInfo()Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;

    move-result-object v1

    if-nez v1, :cond_12

    .line 4746
    :cond_8
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "sendBroadcastDisabledPolicyChange : admin is null"

    invoke-static {v1, v4}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 4747
    return-void

    .line 4750
    :cond_12
    invoke-virtual {p1}, Lcom/lge/mdm/admin/LGMDMadminlist;->getDeviceAdminInfo()Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;

    move-result-object v1

    invoke-virtual {v1}, Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;->getUsesPolices()J

    move-result-wide v2

    .line 4751
    .local v2, "usesPolices":J
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "sendBroadcastDisabledPolicyChange : getUsesPolices = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4752
    const-wide/16 v4, 0x0

    cmp-long v1, v2, v4

    if-lez v1, :cond_49

    .line 4753
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.DEVICE_ADMIN_DEACTIVATE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4754
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 4744
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_49
    return-void
.end method

.method private setBootCompleteIME(I)V
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 1437
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setBootCompleteIME(I)V

    .line 1436
    return-void
.end method

.method private setGoogleAccountObserver()V
    .registers 5

    .prologue
    .line 8379
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Landroid/accounts/AccountManager;->get(Landroid/content/Context;)Landroid/accounts/AccountManager;

    move-result-object v0

    new-instance v1, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$3;

    invoke-direct {v1, p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$3;-><init>(Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;)V

    .line 8404
    const/4 v2, 0x0

    const/4 v3, 0x1

    .line 8379
    invoke-virtual {v0, v1, v2, v3}, Landroid/accounts/AccountManager;->addOnAccountsUpdatedListener(Landroid/accounts/OnAccountsUpdateListener;Landroid/os/Handler;Z)V

    .line 8378
    return-void
.end method

.method private startApplicationInternal(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;IZI)Z
    .registers 14
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "subInfo"    # Ljava/lang/String;
    .param p4, "type"    # I
    .param p5, "showToast"    # Z
    .param p6, "userHandle"    # I

    .prologue
    .line 3899
    const/4 v6, 0x0

    .line 3900
    .local v6, "result":Z
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-object v1, p2

    move-object v2, p3

    move v3, p4

    move v4, p5

    move v5, p6

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMApplicationController;->startApplication(Ljava/lang/String;Ljava/lang/String;IZI)Z

    move-result v6

    .line 3901
    .local v6, "result":Z
    return v6
.end method


# virtual methods
.method public ExportCCauditLogFile(Landroid/content/ComponentName;ILandroid/os/IBinder;)Landroid/os/ParcelFileDescriptor;
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .param p3, "token"    # Landroid/os/IBinder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v3, 0x0

    .line 8360
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8361
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8362
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v2

    if-nez v2, :cond_10

    .line 8363
    return-object v3

    .line 8365
    :cond_10
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v2

    if-nez v2, :cond_17

    .line 8366
    return-object v3

    .line 8369
    :cond_17
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8371
    .local v0, "identity":J
    :try_start_1b
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2, v3, p3}, Lcom/lge/mdm/controller/LGMDMCCModeController;->ExportCCauditLogFile(Landroid/content/Context;Landroid/os/IBinder;)Landroid/os/ParcelFileDescriptor;
    :try_end_22
    .catchall {:try_start_1b .. :try_end_22} :catchall_30

    move-result-object v2

    .line 8373
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8374
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "ExportCCauditLogFile"

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 8371
    return-object v2

    .line 8372
    :catchall_30
    move-exception v2

    .line 8373
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8374
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "ExportCCauditLogFile"

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 8372
    throw v2
.end method

.method public activateApn(Landroid/content/ComponentName;II)I
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "id"    # I
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 5673
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5674
    monitor-enter p0

    .line 5675
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5676
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_43

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5677
    return v1

    .line 5679
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_43

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5680
    return v1

    .line 5682
    :cond_1a
    :try_start_1a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5683
    const/16 v1, 0x1e

    .line 5682
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_21
    .catchall {:try_start_1a .. :try_end_21} :catchall_43

    monitor-exit p0

    .line 5685
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "activateApn, id "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5686
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApnController;->activateApn(Landroid/content/ComponentName;II)I

    move-result v0

    return v0

    .line 5674
    :catchall_43
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public addApn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMApnConfiguration;I)I
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "config"    # Lcom/lge/mdm/config/LGMDMApnConfiguration;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, -0x1

    .line 5584
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5585
    monitor-enter p0

    .line 5586
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5587
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_47

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5588
    return v1

    .line 5590
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_47

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5591
    return v1

    .line 5593
    :cond_1a
    if-eqz p3, :cond_1e

    monitor-exit p0

    .line 5594
    return v1

    .line 5596
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5597
    const/16 v1, 0x1e

    .line 5596
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_25
    .catchall {:try_start_1e .. :try_end_25} :catchall_47

    monitor-exit p0

    .line 5599
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "addApn, config "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5600
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApnController;->addApn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMApnConfiguration;I)I

    move-result v0

    return v0

    .line 5585
    :catchall_47
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public addLGVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMLgVpnProfile;I)I
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "profile"    # Lcom/lge/mdm/config/LGMDMLgVpnProfile;
    .param p3, "userHandle"    # I

    .prologue
    .line 2137
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2138
    monitor-enter p0

    .line 2139
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2140
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2141
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2143
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2144
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2146
    :cond_25
    if-eqz p3, :cond_2f

    .line 2147
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2149
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2150
    const/4 v1, 0x7

    .line 2149
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2151
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->addLGVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMLgVpnProfile;I)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2138
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public addNetwork(Lcom/lge/mdm/config/LGMDMWifiConfiguration;I)I
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMWifiConfiguration;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, -0x1

    .line 4869
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4870
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 4871
    return v1

    .line 4873
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 4874
    return v1

    .line 4876
    :cond_15
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "addNetwork, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4877
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->addNetwork(Lcom/lge/mdm/config/LGMDMWifiConfiguration;I)I

    move-result v0

    return v0
.end method

.method public addVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "profile"    # Lcom/lge/mdm/config/LGMDMVpnProfile;
    .param p3, "userHandle"    # I

    .prologue
    .line 2036
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2037
    monitor-enter p0

    .line 2038
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2039
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_44

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2040
    return-void

    .line 2042
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_44

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 2043
    return-void

    .line 2045
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 2046
    return-void

    .line 2048
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2049
    const/4 v1, 0x7

    .line 2048
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2050
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->addVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;I)V

    .line 2051
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "addVpnProfile, profile : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_42
    .catchall {:try_start_1d .. :try_end_42} :catchall_44

    monitor-exit p0

    .line 2035
    return-void

    .line 2037
    :catchall_44
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkApplicationEnable(Ljava/lang/String;I)I
    .registers 11
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v7, 0x0

    .line 4921
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4926
    monitor-enter p0

    .line 4928
    :try_start_7
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowSpecificApplicationAll(Landroid/content/ComponentName;I)[Z

    move-result-object v2

    .line 4929
    .local v2, "mTotalSpecificApplicationList":[Z
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_21

    move-result v0

    .local v0, "allowDLNA":Z
    monitor-exit p0

    .line 4932
    invoke-static {}, Lcom/lge/mdm/util/LGMDMCheckApplication;->getInstance()Lcom/lge/mdm/util/LGMDMCheckApplication;

    move-result-object v5

    invoke-virtual {v5, p1, v2}, Lcom/lge/mdm/util/LGMDMCheckApplication;->checkSpecificApplication(Ljava/lang/String;[Z)I

    move-result v4

    .line 4934
    .local v4, "rv":I
    if-eqz v4, :cond_24

    .line 4935
    return v4

    .line 4926
    .end local v0    # "allowDLNA":Z
    .end local v2    # "mTotalSpecificApplicationList":[Z
    .end local v4    # "rv":I
    :catchall_21
    move-exception v5

    monitor-exit p0

    throw v5

    .line 4939
    .restart local v0    # "allowDLNA":Z
    .restart local v2    # "mTotalSpecificApplicationList":[Z
    .restart local v4    # "rv":I
    :cond_24
    const-string/jumbo v5, "com.lge.smartshare.dlna"

    .line 4938
    invoke-static {v5, p1}, Lcom/lge/mdm/util/SpecificPackageName;->isMatchSpecificApplication(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    .line 4940
    .local v1, "isSmartShareApp":Z
    if-nez v1, :cond_34

    .line 4942
    const-string/jumbo v5, "com.lge.smartshare"

    .line 4941
    invoke-static {v5, p1}, Lcom/lge/mdm/util/SpecificPackageName;->isMatchSpecificApplication(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    .line 4944
    :cond_34
    if-nez v0, :cond_3b

    if-eqz v1, :cond_3b

    .line 4945
    const/16 v5, -0x75

    return v5

    .line 4947
    :cond_3b
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v5, p1}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getPackageInfoForSignature(Ljava/lang/String;)Landroid/content/pm/PackageInfo;

    move-result-object v3

    .line 4948
    .local v3, "pi":Landroid/content/pm/PackageInfo;
    monitor-enter p0

    .line 4949
    :try_start_42
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v5, p1, v3, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->checkApplicationEnable(Ljava/lang/String;Landroid/content/pm/PackageInfo;I)Z
    :try_end_47
    .catchall {:try_start_42 .. :try_end_47} :catchall_50

    move-result v5

    if-nez v5, :cond_4e

    .line 4950
    const/16 v5, -0x68

    monitor-exit p0

    return v5

    :cond_4e
    monitor-exit p0

    .line 4952
    return v7

    .line 4948
    :catchall_50
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public checkBluetoothMacAddress(Ljava/lang/String;I)Z
    .registers 4
    .param p1, "address"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 953
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 954
    monitor-enter p0

    .line 955
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->checkBluetoothMacAddress(Ljava/lang/String;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 954
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkCameraPackageInWhitelist(Ljava/lang/String;I)Z
    .registers 4
    .param p1, "packagename"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 1810
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1811
    monitor-enter p0

    .line 1812
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCameraController;->checkCameraPackageInWhitelist(Ljava/lang/String;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1811
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkEncryptionAvailable(II)Z
    .registers 4
    .param p1, "policy"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 5167
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5169
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCryptoController;->checkEncryptionAvailable(II)Z

    move-result v0

    return v0
.end method

.method public checkEnforceMuteDuringCall(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 8108
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8109
    monitor-enter p0

    .line 8110
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->checkEnforceMuteDuringCall(I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8109
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkInstallAllowWithSignatureAndVersion(Landroid/content/ComponentName;Ljava/lang/String;[Landroid/content/pm/Signature;IILjava/lang/String;)Z
    .registers 14
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "pkgName"    # Ljava/lang/String;
    .param p3, "signature"    # [Landroid/content/pm/Signature;
    .param p4, "flag"    # I
    .param p5, "userHandle"    # I
    .param p6, "versionName"    # Ljava/lang/String;

    .prologue
    .line 3759
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3760
    monitor-enter p0

    .line 3761
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    move-object v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/lge/mdm/controller/LGMDMApplicationController;->checkInstallAllow(Landroid/content/ComponentName;Ljava/lang/String;[Landroid/content/pm/Signature;IILjava/lang/String;)Z
    :try_end_11
    .catchall {:try_start_6 .. :try_end_11} :catchall_14

    move-result v0

    monitor-exit p0

    return v0

    .line 3760
    :catchall_14
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkInstallByMDM(II)Z
    .registers 4
    .param p1, "flags"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 7014
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7015
    monitor-enter p0

    .line 7016
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->checkInstallByMDM(II)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7015
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkLockoutRecoveryKey(Ljava/lang/String;I)Z
    .registers 7
    .param p1, "strRecoveryKey"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 3434
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3435
    monitor-enter p0

    .line 3436
    :try_start_6
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->checkLockoutRecoveryKey(Ljava/lang/String;I)Z

    move-result v0

    .line 3437
    .local v0, "bRet":Z
    if-eqz v0, :cond_1d

    .line 3438
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_general_policies.xml"

    invoke-virtual {v1, v2, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3439
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    const/4 v2, 0x0

    const/4 v3, 0x2

    invoke-virtual {v1, v2, v3, p2}, Lcom/lge/mdm/controller/LGMDMDeviceController;->deviceMode(Landroid/content/ComponentName;II)V
    :try_end_1d
    .catchall {:try_start_6 .. :try_end_1d} :catchall_1f

    :cond_1d
    monitor-exit p0

    .line 3441
    return v0

    .line 3435
    .end local v0    # "bRet":Z
    :catchall_1f
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public checkMDMpermission(Landroid/content/ComponentName;Z)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "checkLeveing"    # Z

    .prologue
    const/4 v1, 0x0

    .line 7812
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7813
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_b

    .line 7814
    return v1

    .line 7816
    :cond_b
    if-eqz p2, :cond_14

    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 7817
    return v1

    .line 7819
    :cond_14
    const/4 v0, 0x1

    return v0
.end method

.method public checkMicPackageInWhitelist(Ljava/lang/String;I)Z
    .registers 4
    .param p1, "packagename"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 1402
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1403
    monitor-enter p0

    .line 1404
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->checkMicPackageInWhitelist(Ljava/lang/String;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1403
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public checkPackageNameFromPID(II)Ljava/lang/String;
    .registers 4
    .param p1, "pid"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 1446
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->checkPackageNameFromPID(II)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public checkPasswordRecovery(Ljava/lang/String;I)Z
    .registers 4
    .param p1, "password"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 3446
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3447
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->checkPasswordRecovery(Ljava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method public checkRootDetection(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5572
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5573
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5574
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_10

    .line 5575
    const/4 v0, -0x1

    return v0

    .line 5577
    :cond_10
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->checkRootDetection(Landroid/content/ComponentName;I)I

    move-result v0

    return v0
.end method

.method public checkUninstallAllowWithFlag(Landroid/content/ComponentName;Ljava/lang/String;II)Z
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "flag"    # I
    .param p4, "userHandle"    # I

    .prologue
    .line 3768
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3769
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getPackageInfoForSignature(Ljava/lang/String;)Landroid/content/pm/PackageInfo;

    move-result-object v4

    .line 3770
    .local v4, "pi":Landroid/content/pm/PackageInfo;
    monitor-enter p0

    .line 3771
    :try_start_c
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMApplicationController;->checkUninstallAllow(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/content/pm/PackageInfo;I)Z
    :try_end_15
    .catchall {:try_start_c .. :try_end_15} :catchall_18

    move-result v0

    monitor-exit p0

    return v0

    .line 3770
    :catchall_18
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public connectVpn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;Lcom/lge/mdm/config/LGMDMLgVpnProfile;I)I
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "nProfile"    # Lcom/lge/mdm/config/LGMDMVpnProfile;
    .param p3, "lProfile"    # Lcom/lge/mdm/config/LGMDMLgVpnProfile;
    .param p4, "userHandle"    # I

    .prologue
    .line 2395
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2397
    monitor-enter p0

    .line 2398
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2399
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2400
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->IPSEC_OPERATION_FAILED:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2402
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2403
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->IPSEC_OPERATION_FAILED:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2405
    :cond_25
    if-eqz p4, :cond_2f

    .line 2406
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->IPSEC_OPERATION_FAILED:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2408
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2409
    const/4 v1, 0x7

    .line 2408
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2410
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->connectVpn(Lcom/lge/mdm/config/LGMDMVpnProfile;Lcom/lge/mdm/config/LGMDMLgVpnProfile;)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2397
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public deleteApn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMApnConfiguration;I)Z
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "config"    # Lcom/lge/mdm/config/LGMDMApnConfiguration;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 5630
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5631
    monitor-enter p0

    .line 5632
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5633
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_47

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5634
    return v1

    .line 5636
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_47

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5637
    return v1

    .line 5639
    :cond_1a
    if-eqz p3, :cond_1e

    monitor-exit p0

    .line 5640
    return v1

    .line 5642
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5643
    const/16 v1, 0x1e

    .line 5642
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_25
    .catchall {:try_start_1e .. :try_end_25} :catchall_47

    monitor-exit p0

    .line 5645
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "deleteApn : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5646
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApnController;->deleteApn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMApnConfiguration;I)Z

    move-result v0

    return v0

    .line 5631
    :catchall_47
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public deleteLGVpnProfile(Landroid/content/ComponentName;Ljava/lang/String;I)I
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "pName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 2175
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2176
    monitor-enter p0

    .line 2177
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2178
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2179
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2181
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2182
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2184
    :cond_25
    if-eqz p3, :cond_2f

    .line 2185
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2187
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2188
    const/4 v1, 0x7

    .line 2187
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2189
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->deleteLGVpnProfile(Landroid/content/ComponentName;Ljava/lang/String;I)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2176
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public deleteVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "profile"    # Lcom/lge/mdm/config/LGMDMVpnProfile;
    .param p3, "userHandle"    # I

    .prologue
    .line 2076
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2077
    monitor-enter p0

    .line 2078
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2079
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_44

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2080
    return-void

    .line 2082
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_44

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 2083
    return-void

    .line 2085
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 2086
    return-void

    .line 2088
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2089
    const/4 v1, 0x7

    .line 2088
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2090
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->deleteVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;I)V

    .line 2091
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "deleteVpnProfile, profile : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_42
    .catchall {:try_start_1d .. :try_end_42} :catchall_44

    monitor-exit p0

    .line 2075
    return-void

    .line 2077
    :catchall_44
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public devicePowerOff(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "devicefunction"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 6796
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6797
    monitor-enter p0

    .line 6798
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6799
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_48

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6800
    return-void

    .line 6802
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_48

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6803
    return-void

    .line 6805
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6806
    const/16 v1, 0x26

    .line 6805
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_20
    .catchall {:try_start_19 .. :try_end_20} :catchall_48

    monitor-exit p0

    .line 6808
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "devicePowerOff, devicefunction : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, "(0:POWER_OFF, 1:DEVICE_REBOOT)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6809
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDeviceController;->deviceMode(Landroid/content/ComponentName;II)V

    .line 6795
    return-void

    .line 6797
    :catchall_48
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public disableNetwork(II)Z
    .registers 6
    .param p1, "netId"    # I
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 720
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 721
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 722
    return v1

    .line 724
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 725
    return v1

    .line 727
    :cond_15
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "disableNetwork, netId : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 728
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->disableNetwork(II)Z

    move-result v0

    return v0
.end method

.method public disconnect(I)Z
    .registers 4
    .param p1, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 732
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 733
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 734
    return v1

    .line 736
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 737
    return v1

    .line 739
    :cond_15
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "disconnect"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 740
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMWifiController;->disconnect(I)Z

    move-result v0

    return v0
.end method

.method public disconnectVpn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;Lcom/lge/mdm/config/LGMDMLgVpnProfile;I)I
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "nProfile"    # Lcom/lge/mdm/config/LGMDMVpnProfile;
    .param p3, "lProfile"    # Lcom/lge/mdm/config/LGMDMLgVpnProfile;
    .param p4, "userHandle"    # I

    .prologue
    .line 2416
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2418
    monitor-enter p0

    .line 2419
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2420
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2421
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->IPSEC_OPERATION_FAILED:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2423
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2424
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->IPSEC_OPERATION_FAILED:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2426
    :cond_25
    if-eqz p4, :cond_2f

    .line 2427
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->IPSEC_OPERATION_FAILED:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_IPSEC_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2429
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2430
    const/4 v1, 0x7

    .line 2429
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2431
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->disconnectVpn(Lcom/lge/mdm/config/LGMDMVpnProfile;Lcom/lge/mdm/config/LGMDMLgVpnProfile;)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2418
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public enableNetwork(IZI)Z
    .registers 7
    .param p1, "netId"    # I
    .param p2, "disableOthers"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 708
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 709
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 710
    return v1

    .line 712
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 713
    return v1

    .line 715
    :cond_15
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "enableNetwork, disableOthers : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", netId : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 716
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->enableNetwork(IZI)Z

    move-result v0

    return v0
.end method

.method public endDeclawingPolicies(J)V
    .registers 4
    .param p1, "identity"    # J

    .prologue
    .line 8463
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mPriviligedUserController:Lcom/lge/mdm/controller/LGMDMPriviligedUserController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPriviligedUserController;->endDeclawingPolicies(J)V

    .line 8462
    return-void
.end method

.method public enumCertificateId(Landroid/content/ComponentName;II)Ljava/util/List;
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "useType"    # I
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "II)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 4998
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4999
    monitor-enter p0

    .line 5000
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5001
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_35

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5002
    return-object v1

    .line 5004
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_35

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5005
    return-object v1

    .line 5007
    :cond_1a
    if-eqz p3, :cond_1e

    monitor-exit p0

    .line 5008
    return-object v1

    .line 5010
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5011
    const/4 v1, 0x6

    .line 5010
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5012
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "enumCertificatgeId, useType : LGMDMCERTIFICATE_TYPE_SYSTEM"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5013
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMCertificateController;->enumCertificateId(Landroid/content/ComponentName;II)Ljava/util/List;
    :try_end_32
    .catchall {:try_start_1e .. :try_end_32} :catchall_35

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 4999
    :catchall_35
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public enumCertificateInfo(Landroid/content/ComponentName;II)Ljava/util/List;
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "type"    # I
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "II)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMCredentials;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 4978
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4979
    monitor-enter p0

    .line 4980
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4981
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_4d

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 4982
    return-object v1

    .line 4984
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_4d

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 4985
    return-object v1

    .line 4987
    :cond_1a
    if-eqz p3, :cond_1e

    monitor-exit p0

    .line 4988
    return-object v1

    .line 4990
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4991
    const/4 v1, 0x6

    .line 4990
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4992
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "enumCertificateInfo, type : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " (0:ALL, 1:CACERT, 2:USRCERT)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 4993
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMCertificateController;->enumCertificateInfo(Landroid/content/ComponentName;II)Ljava/util/List;
    :try_end_4a
    .catchall {:try_start_1e .. :try_end_4a} :catchall_4d

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 4979
    :catchall_4d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public enumLGVpnAvailableCertificate(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 2271
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2272
    monitor-enter p0

    .line 2273
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2274
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_2c

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2275
    return-object v1

    .line 2277
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_2c

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2278
    return-object v1

    .line 2280
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2281
    return-object v1

    .line 2283
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2284
    const/4 v1, 0x7

    .line 2283
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2285
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->enumLGVpnAvailableCertificate(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_29
    .catchall {:try_start_1e .. :try_end_29} :catchall_2c

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2272
    :catchall_2c
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public enumLGVpnInstalledCertificate(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 2290
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2291
    monitor-enter p0

    .line 2292
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2293
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_2c

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2294
    return-object v1

    .line 2296
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_2c

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2297
    return-object v1

    .line 2299
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2300
    return-object v1

    .line 2302
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2303
    const/4 v1, 0x7

    .line 2302
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2304
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->enumLGVpnInstalledCertificate(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_29
    .catchall {:try_start_1e .. :try_end_29} :catchall_2c

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2291
    :catchall_2c
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public enumLGVpnProfile(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMLgVpnProfile;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 2194
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2195
    monitor-enter p0

    .line 2196
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2197
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_2c

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2198
    return-object v1

    .line 2200
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_2c

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2201
    return-object v1

    .line 2203
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2204
    return-object v1

    .line 2206
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2207
    const/4 v1, 0x7

    .line 2206
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2208
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->enumLGVpnProfile(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_29
    .catchall {:try_start_1e .. :try_end_29} :catchall_2c

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2195
    :catchall_2c
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public enumVpnProfile(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMVpnProfile;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 2096
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2097
    monitor-enter p0

    .line 2098
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2099
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_35

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2100
    return-object v1

    .line 2102
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_35

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2103
    return-object v1

    .line 2105
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2106
    return-object v1

    .line 2108
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2109
    const/4 v1, 0x7

    .line 2108
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2110
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "enumVpnProfile"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2111
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->enumVpnProfile(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_32
    .catchall {:try_start_1e .. :try_end_32} :catchall_35

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2097
    :catchall_35
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public eraseStorage(Landroid/content/ComponentName;I)V
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5976
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5977
    monitor-enter p0

    .line 5978
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5979
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_31

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 5980
    return-void

    .line 5982
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_31

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 5983
    return-void

    .line 5985
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5986
    const/16 v1, 0x11

    .line 5985
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_20
    .catchall {:try_start_19 .. :try_end_20} :catchall_31

    monitor-exit p0

    .line 5988
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "eraseStorage"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5989
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    const/4 v1, 0x0

    invoke-virtual {v0, p2, v1}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->eraseStorage(IZ)V

    .line 5975
    return-void

    .line 5977
    :catchall_31
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public forceStopPackage(Ljava/lang/String;II)V
    .registers 9
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "userHandle"    # I

    .prologue
    const/4 v3, 0x0

    .line 5264
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v2

    if-nez v2, :cond_3c

    .line 5265
    const/4 v0, 0x0

    .line 5266
    .local v0, "bGranted":Z
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v1

    .line 5268
    .local v1, "manager":Landroid/app/admin/DevicePolicyManager;
    invoke-virtual {p0, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getCameraStatus(I)Z

    move-result v2

    if-eqz v2, :cond_2c

    .line 5269
    if-eqz v1, :cond_1a

    invoke-virtual {v1, v3, p3}, Landroid/app/admin/DevicePolicyManager;->getCameraDisabled(Landroid/content/ComponentName;I)Z

    move-result v2

    if-nez v2, :cond_20

    .line 5270
    :cond_1a
    invoke-virtual {p0, v3, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowCameraWithWhitelist(Landroid/content/ComponentName;I)Z

    move-result v2

    if-nez v2, :cond_21

    .line 5271
    :cond_20
    const/4 v0, 0x1

    .line 5278
    :cond_21
    :goto_21
    if-nez v0, :cond_3c

    .line 5279
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "No active admin "

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5273
    :cond_2c
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->hasToStopMicrophone(I)Z

    move-result v2

    if-eqz v2, :cond_21

    .line 5274
    invoke-virtual {p0, v3, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowMicrophone(Landroid/content/ComponentName;I)Z

    move-result v2

    if-nez v2, :cond_21

    .line 5275
    const/4 v0, 0x1

    goto :goto_21

    .line 5283
    .end local v0    # "bGranted":Z
    .end local v1    # "manager":Landroid/app/admin/DevicePolicyManager;
    :cond_3c
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5284
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->forceStopPackage(Ljava/lang/String;II)V

    .line 5285
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "forceStopPackage, packageName : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, ", pid : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 5263
    return-void
.end method

.method public get3G4GDataUsageInformation(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)J
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "startDate"    # Ljava/lang/String;
    .param p4, "endDate"    # Ljava/lang/String;
    .param p5, "userHandle"    # I

    .prologue
    const-wide/16 v2, -0x1

    .line 5319
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5320
    monitor-enter p0

    .line 5321
    :try_start_8
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5322
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_e
    .catchall {:try_start_8 .. :try_end_e} :catchall_2f

    move-result v0

    if-nez v0, :cond_13

    monitor-exit p0

    .line 5323
    return-wide v2

    .line 5325
    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_16
    .catchall {:try_start_13 .. :try_end_16} :catchall_2f

    move-result v0

    if-nez v0, :cond_1b

    monitor-exit p0

    .line 5326
    return-wide v2

    .line 5328
    :cond_1b
    :try_start_1b
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5329
    const/16 v1, 0x1d

    .line 5328
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_22
    .catchall {:try_start_1b .. :try_end_22} :catchall_2f

    monitor-exit p0

    .line 5331
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMNetworkController;->get3G4GDataUsageInformation(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)J

    move-result-wide v0

    return-wide v0

    .line 5320
    :catchall_2f
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAPILevel()I
    .registers 2

    .prologue
    .line 6324
    invoke-static {}, Lcom/lge/mdm/util/LGMDMVersionInfo;->getTargetOperator()I

    move-result v0

    return v0
.end method

.method public getActiveAdminList(I)Ljava/util/List;
    .registers 8
    .param p1, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List",
            "<",
            "Landroid/content/ComponentName;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v5, 0x0

    .line 4827
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4828
    monitor-enter p0

    .line 4829
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getLGMDMAdminLists(I)Ljava/util/ArrayList;
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_3d

    move-result-object v2

    .line 4830
    .local v2, "mAdminList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/lge/mdm/admin/LGMDMadminlist;>;"
    if-nez v2, :cond_11

    monitor-exit p0

    .line 4831
    return-object v5

    .line 4833
    :cond_11
    :try_start_11
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getLGMDMAdminLists(I)Ljava/util/ArrayList;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
    :try_end_1a
    .catchall {:try_start_11 .. :try_end_1a} :catchall_3d

    move-result v0

    .line 4834
    .local v0, "N":I
    if-gtz v0, :cond_1f

    monitor-exit p0

    .line 4835
    return-object v5

    .line 4837
    :cond_1f
    :try_start_1f
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 4838
    .local v3, "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_25
    if-ge v1, v0, :cond_3b

    .line 4839
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/lge/mdm/admin/LGMDMadminlist;

    invoke-virtual {v4}, Lcom/lge/mdm/admin/LGMDMadminlist;->getDeviceAdminInfo()Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;

    move-result-object v4

    invoke-virtual {v4}, Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_38
    .catchall {:try_start_1f .. :try_end_38} :catchall_3d

    .line 4838
    add-int/lit8 v1, v1, 0x1

    goto :goto_25

    :cond_3b
    monitor-exit p0

    .line 4841
    return-object v3

    .line 4828
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "mAdminList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/lge/mdm/admin/LGMDMadminlist;>;"
    .end local v3    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :catchall_3d
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public getActiveSyncID(Landroid/content/ComponentName;II)Ljava/lang/String;
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "flags"    # I
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 4445
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4446
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4447
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_10

    .line 4448
    return-object v1

    .line 4450
    :cond_10
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_17

    .line 4451
    return-object v1

    .line 4453
    :cond_17
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->getActiveSyncID(Landroid/content/ComponentName;II)Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getAllowAirplaneModeOn(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5177
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5178
    monitor-enter p0

    .line 5179
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getAllowAirplaneModeOn(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5178
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowAndroidBeam(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5160
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5161
    monitor-enter p0

    .line 5162
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNfcController;->getAllowAndroidBeam(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5161
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowAutoRestore(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6635
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6636
    monitor-enter p0

    .line 6637
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowAutoRestore(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6636
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowAutoSync(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 6726
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6727
    monitor-enter p0

    .line 6728
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->getAllowAutoSync(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6727
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBackgroundProcessLimit(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6273
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6274
    monitor-enter p0

    .line 6275
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowBackgroundProcessLimit(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6274
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBluetooth(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 760
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 761
    monitor-enter p0

    .line 762
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetooth(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 761
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBluetoothPairing(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 910
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 911
    monitor-enter p0

    .line 912
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetoothPairing(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 911
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBluetoothProfiles(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 822
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 823
    monitor-enter p0

    .line 824
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetoothProfiles(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 823
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBluetoothTethering(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1706
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1707
    monitor-enter p0

    .line 1708
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowBluetoothTethering(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1707
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBluetoothVisible(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5733
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5734
    monitor-enter p0

    .line 5735
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetoothVisible(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5734
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBluetoothWithMACWhitelist(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 946
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 947
    monitor-enter p0

    .line 948
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetoothWithMACWhitelist(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 947
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBrowser(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2702
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2703
    monitor-enter p0

    .line 2704
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBrowserController:Lcom/lge/mdm/controller/LGMDMBrowserController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBrowserController;->getAllowBrowser(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2703
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowBrowserProxySetup(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5828
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5829
    monitor-enter p0

    .line 5830
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowBrowserProxySetup(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5829
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowCIDWithWhitelist(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1055
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1056
    monitor-enter p0

    .line 1057
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowCIDWithWhitelist(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1056
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowCallInRoaming(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6143
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6144
    monitor-enter p0

    .line 6145
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowCallInRoaming(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6144
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowCameraWithWhitelist(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1796
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1797
    monitor-enter p0

    .line 1798
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCameraController;->getAllowCameraWithWhitelist(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1797
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowChangeDateAndTime(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7371
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7372
    monitor-enter p0

    .line 7373
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getAllowChangeDateAndTime(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7372
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowChangeTimezone(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7415
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7416
    monitor-enter p0

    .line 7417
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getAllowChangeTimezone(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7416
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowChangingMobileDataUsageCycle(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7426
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7427
    monitor-enter p0

    .line 7428
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowChangingMobileDataUsageCycle(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7427
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowClipboard(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6353
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6354
    monitor-enter p0

    .line 6355
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowClipboard(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6354
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowCommandForInternetAccess(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5546
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5547
    monitor-enter p0

    .line 5548
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getAllowCommandForInternetAccess(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5547
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowCommandForInternetAccess_others(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5560
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5561
    monitor-enter p0

    .line 5562
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getAllowCommandForInternetAccess_others(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5561
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowConsumerEmail(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4318
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4319
    monitor-enter p0

    .line 4320
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->getAllowConsumerEmail(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4319
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowContactInfoAccess(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7857
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7858
    monitor-enter p0

    .line 7859
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowContactInfoAccess(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7858
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7967
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7968
    monitor-enter p0

    .line 7969
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7968
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowDataRoaming(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2862
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2863
    monitor-enter p0

    .line 2864
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowDataRoaming(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2863
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowDataTransmissionViaAudioPort(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7673
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7674
    sget-object v1, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v1

    .line 7675
    :try_start_8
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->getAllowDataTransmissionViaAudioPort(Landroid/content/ComponentName;I)Z
    :try_end_d
    .catchall {:try_start_8 .. :try_end_d} :catchall_10

    move-result v0

    monitor-exit v1

    return v0

    .line 7674
    :catchall_10
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public getAllowDeveloperMode(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7884
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7885
    monitor-enter p0

    .line 7886
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowDeveloperMode(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7885
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowDownloadMode(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7283
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7284
    sget-object v1, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v1

    .line 7285
    :try_start_8
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->getAllowDownloadMode(Landroid/content/ComponentName;I)Z
    :try_end_d
    .catchall {:try_start_8 .. :try_end_d} :catchall_10

    move-result v0

    monitor-exit v1

    return v0

    .line 7284
    :catchall_10
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public getAllowDualWindow(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8276
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8277
    monitor-enter p0

    .line 8278
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDualWindowController:Lcom/lge/mdm/controller/LGMDMDualWindowController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMDualWindowController;->getAllowDualWindow(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8277
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowExternalMemorySlotStatus(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 964
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 965
    monitor-enter p0

    .line 966
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowExternalMemorySlotStatus(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 965
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowGPSLocation(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1181
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1182
    monitor-enter p0

    .line 1183
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowGPSLocation(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1182
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowGoogleBackup(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6585
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6586
    monitor-enter p0

    .line 6587
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowGoogleBackup(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6586
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowGoogleErrorReport(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4289
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4290
    monitor-enter p0

    .line 4291
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowGoogleErrorReport(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4290
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowHardwareFactoryreset(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3007
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3008
    sget-object v1, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v1

    .line 3009
    :try_start_8
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->getAllowHardwareFactoryreset(Landroid/content/ComponentName;I)Z
    :try_end_d
    .catchall {:try_start_8 .. :try_end_d} :catchall_10

    move-result v0

    monitor-exit v1

    return v0

    .line 3008
    :catchall_10
    move-exception v0

    monitor-exit v1

    throw v0
.end method

.method public getAllowHotspot(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1623
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1624
    monitor-enter p0

    .line 1625
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowHotspot(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1624
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowIMEI(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1302
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1303
    monitor-enter p0

    .line 1304
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIMEIController:Lcom/lge/mdm/controller/LGMDMIMEIController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIMEIController;->getAllowIMEI(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1303
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowIMSI(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1325
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1326
    monitor-enter p0

    .line 1327
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIMEIController:Lcom/lge/mdm/controller/LGMDMIMEIController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIMEIController;->getAllowIMSI(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1326
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowInfraredPort(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8002
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8003
    monitor-enter p0

    .line 8004
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIRController:Lcom/lge/mdm/controller/LGMDMIRController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIRController;->getAllowInfraredPort(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8003
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowInstallApplication(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3664
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3665
    monitor-enter p0

    .line 3666
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowInstallApplication(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3665
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowListForInternetAccess(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .prologue
    .line 5439
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5440
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getAllowListForInternetAccess(Landroid/content/ComponentName;I)I

    move-result v0

    return v0
.end method

.method public getAllowListForInternetAccess_others(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .prologue
    .line 5445
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5446
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getAllowListForInternetAccess_others(Landroid/content/ComponentName;I)Z

    move-result v0

    return v0
.end method

.method public getAllowLockdownApps(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4005
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4006
    const/4 v0, 0x0

    .line 4007
    .local v0, "result":Z
    monitor-enter p0

    .line 4008
    :try_start_7
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowLockdownApps(Landroid/content/ComponentName;I)Z
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_f

    move-result v0

    .local v0, "result":Z
    monitor-exit p0

    .line 4010
    return v0

    .line 4007
    .local v0, "result":Z
    :catchall_f
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getAllowMaximumRepeatedPassword(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3046
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3047
    monitor-enter p0

    .line 3048
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getAllowMaximumRepeatedPassword(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3047
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowMaximumSequentialPassword(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3074
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3075
    monitor-enter p0

    .line 3076
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getAllowMaximumSequentialPassword(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3075
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowMicrophone(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1354
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1355
    monitor-enter p0

    .line 1356
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getAllowMicrophone(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1355
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowMiracast(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7245
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7246
    monitor-enter p0

    .line 7247
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowMiracast(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7246
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowMobileNetwork(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2765
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2766
    monitor-enter p0

    .line 2767
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowMobileNetwork(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2766
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowMockLocation(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1261
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1262
    monitor-enter p0

    .line 1263
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowMockLocation(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1262
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowMultiUser(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6940
    invoke-static {}, Lcom/lge/cappuccino/Mdm;->isSupportMultiUser()Z

    move-result v0

    if-nez v0, :cond_8

    .line 6941
    const/4 v0, 0x1

    return v0

    .line 6944
    :cond_8
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6945
    monitor-enter p0

    .line 6946
    :try_start_e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z
    :try_end_13
    .catchall {:try_start_e .. :try_end_13} :catchall_16

    move-result v0

    monitor-exit p0

    return v0

    .line 6945
    :catchall_16
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowNfc(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5120
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5121
    monitor-enter p0

    .line 5122
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNfcController;->getAllowNfc(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5121
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowNonWebkitBrowser(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7256
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7257
    monitor-enter p0

    .line 7258
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBrowserController:Lcom/lge/mdm/controller/LGMDMBrowserController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBrowserController;->getAllowNonWebkitBrowser(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7257
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowNotifySpecificProcessKillEvent(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4169
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4170
    const/4 v0, 0x0

    .line 4171
    .local v0, "result":Z
    monitor-enter p0

    .line 4172
    :try_start_7
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowNotifySpecificProcessKillEvent(Landroid/content/ComponentName;I)Z
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_f

    move-result v0

    .local v0, "result":Z
    monitor-exit p0

    .line 4175
    return v0

    .line 4171
    .local v0, "result":Z
    :catchall_f
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getAllowOSUpdate(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6047
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6048
    monitor-enter p0

    .line 6049
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowOSUpdate(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6048
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowOwnerInfo(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7124
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7125
    monitor-enter p0

    .line 7126
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowOwnerInfo(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7125
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowPOPIMAPEmail(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4369
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4370
    monitor-enter p0

    .line 4371
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->getAllowPOPIMAPEmail(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4370
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowPassiveProvider(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6916
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6917
    monitor-enter p0

    .line 6918
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowPassiveProvider(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6917
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowPasswordComplexForEAS(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3102
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3103
    monitor-enter p0

    .line 3104
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getAllowPasswordComplexForEAS(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3103
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowPasswordTypingVisible(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6643
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6644
    monitor-enter p0

    .line 6645
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowPasswordTypingVisible(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6644
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowPasswordVisible(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7022
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7023
    monitor-enter p0

    .line 7024
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowPasswordVisible(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7023
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowPowerOff(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8139
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8140
    monitor-enter p0

    .line 8141
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPowerOffController:Lcom/lge/mdm/controller/LGMDMPowerOffController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPowerOffController;->getAllowPowerOff(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8140
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowQuickCircle(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8176
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8177
    monitor-enter p0

    .line 8178
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMQuickCoverController;->getAllowQuickCircle(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8177
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowReadyToConnectInBluetooth(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8352
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8353
    monitor-enter p0

    .line 8354
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowReadyToConnectInBluetooth(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8353
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowReceivingSmsMms(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7751
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7752
    monitor-enter p0

    .line 7753
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMessageController:Lcom/lge/mdm/controller/LGMDMMessageController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMessageController;->getAllowReceivingSmsMms(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7752
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowRemoveDeviceAdmin(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3599
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3600
    monitor-enter p0

    .line 3601
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowRemoveDeviceAdmin(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3600
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowRemoveGoogleAccount(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6467
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6468
    monitor-enter p0

    .line 6469
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowRemoveGoogleAccount(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6468
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowSafeMode(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8303
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8304
    monitor-enter p0

    .line 8305
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMDeviceController;->getAllowSafeMode(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8304
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowScreenCapture(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2476
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2477
    monitor-enter p0

    .line 2478
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCapture(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2477
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowScreenCaptureBlacklistWithoutADB(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2549
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2550
    monitor-enter p0

    .line 2551
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCaptureBlacklistWithoutADB(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2550
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowScreenCaptureWhitelistWithoutADB(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2624
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2625
    monitor-enter p0

    .line 2626
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCaptureWhitelistWithoutADB(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2625
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowScreenCaptureWithBlacklist(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2542
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2543
    monitor-enter p0

    .line 2544
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCaptureBlacklist(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2543
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowScreenCaptureWithoutADB(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2483
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2484
    monitor-enter p0

    .line 2485
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCaptureWithoutADB(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2484
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowScreenPin(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7064
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7065
    monitor-enter p0

    .line 7066
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowScreenPin(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7065
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowSendingSMS(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2732
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2733
    monitor-enter p0

    .line 2734
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMessageController:Lcom/lge/mdm/controller/LGMDMMessageController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMessageController;->getAllowSendingSMS(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2733
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowShortcutKey(Landroid/content/ComponentName;I)Z
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2021
    const/4 v0, 0x0

    .line 2022
    .local v0, "ret":Z
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2024
    monitor-enter p0

    .line 2025
    :try_start_7
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMShortcutKeyController:Lcom/lge/mdm/controller/LGMDMShortcutKeyController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMShortcutKeyController;->getAllowShortcutKeyPolicy(Landroid/content/ComponentName;I)Z
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_46

    move-result v0

    .local v0, "ret":Z
    monitor-exit p0

    .line 2028
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "[getAllowShortcutKey][who="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "][userHandle="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "][ret="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, "]"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 2030
    return v0

    .line 2024
    .local v0, "ret":Z
    :catchall_46
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getAllowSignatureState(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3818
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3819
    monitor-enter p0

    .line 3820
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowSignatureState(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3819
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowSimplePasswordEx(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3017
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3018
    monitor-enter p0

    .line 3019
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getAllowSimplePasswordEx(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3018
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowSpecificApplication(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "applicationName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 4225
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4226
    monitor-enter p0

    .line 4227
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowSpecificApplication(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4226
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowSpecificApplicationAll(Landroid/content/ComponentName;I)[Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4232
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4233
    monitor-enter p0

    .line 4234
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowSpecificApplicationAll(Landroid/content/ComponentName;I)[Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 4233
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowSpecificKey(Landroid/content/ComponentName;II)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "keyType"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 6019
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6020
    monitor-enter p0

    .line 6021
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMKeyCotroller:Lcom/lge/mdm/controller/LGMDMKeyController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMKeyController;->getAllowSpecificKey(Landroid/content/ComponentName;II)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6020
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowStatusBarExpansion(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6736
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6737
    monitor-enter p0

    .line 6738
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowStatusBarExpansion(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6737
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowTethering(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1576
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1577
    monitor-enter p0

    .line 1578
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowTethering(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1577
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUSBDebugging(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2661
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2662
    monitor-enter p0

    .line 2663
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBDebugging(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2662
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUSBHostStorageStatus(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6856
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6857
    monitor-enter p0

    .line 6858
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowUSBHostStorageStatus(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6857
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUSBMtp(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6152
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6153
    monitor-enter p0

    .line 6154
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBMtp(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6153
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUSBPtp(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6190
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6191
    monitor-enter p0

    .line 6192
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBPtp(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6191
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUSBStorage(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6228
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6229
    monitor-enter p0

    .line 6230
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBStorage(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6229
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUSBTethering(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1664
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1665
    monitor-enter p0

    .line 1666
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowUSBTethering(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1665
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUninstallApplication(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3689
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3690
    monitor-enter p0

    .line 3691
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowUninstallApplication(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3690
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUnknownSourceInstallation(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 3489
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3490
    monitor-enter p0

    .line 3491
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowUnknownSourceInstallation(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3490
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUnsignedApplication(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3868
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3869
    monitor-enter p0

    .line 3870
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowUnsignedApplication(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3869
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUsb(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1823
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1824
    monitor-enter p0

    .line 1825
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUsb(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1824
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUsbData(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1866
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1867
    monitor-enter p0

    .line 1868
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUsbData(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1867
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUsbDrive(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1898
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1899
    monitor-enter p0

    .line 1900
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUsbDrive(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1899
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowUsbPort(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1930
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1931
    monitor-enter p0

    .line 1932
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUsbPort(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1931
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowVPNSplitTunneling(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2354
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2355
    monitor-enter p0

    .line 2356
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->getAllowVPNSplitTunneling(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2355
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowVerizonLocation(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6848
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6849
    monitor-enter p0

    .line 6850
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowVerizonLocation(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6849
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowVpn(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2311
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2312
    monitor-enter p0

    .line 2313
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->getAllowVpn(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2312
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWiFiMacAddressList(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 5921
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5922
    monitor-enter p0

    .line 5923
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWiFiMacAddressList(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 5922
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWiFiMacAddressListType(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5928
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5929
    monitor-enter p0

    .line 5930
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWiFiMacAddressListType(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5929
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWiFiProfileManagement(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6057
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6058
    monitor-enter p0

    .line 6059
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWiFiProfileManagement(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6058
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWiFiSSIDList(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 5881
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5882
    monitor-enter p0

    .line 5883
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWiFiSSIDList(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 5882
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWiFiSSIDListType(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5888
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5889
    monitor-enter p0

    .line 5890
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWiFiSSIDListType(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5889
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWifi(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 630
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 631
    monitor-enter p0

    .line 632
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifi(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 631
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWifiAutoConnection(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5955
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5956
    monitor-enter p0

    .line 5957
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifiAutoConnection(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5956
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWifiDirect(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6405
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6406
    monitor-enter p0

    .line 6407
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifiDirect(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6406
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWifiScan(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 686
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 687
    monitor-enter p0

    .line 688
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifiScan(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 687
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWipeData(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2937
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2938
    monitor-enter p0

    .line 2939
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowWipeData(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2938
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWipeDataMaster(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 620
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 621
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMasterController:Lcom/lge/mdm/controller/LGMDMMasterController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMMasterController;->getAllowWipeDataMaster(I)Z

    move-result v0

    return v0
.end method

.method public getAllowWirelessLocation(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1083
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1084
    monitor-enter p0

    .line 1085
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowWirelessLocation(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1084
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWirelessLocationWithWhitelist(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1164
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1165
    monitor-enter p0

    .line 1166
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->isAllowedLocationWithWhitelist(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1165
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAllowWirelessStorage(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6379
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6380
    monitor-enter p0

    .line 6381
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWirelessStorageController:Lcom/lge/mdm/controller/LGMDMWirelessStorageController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWirelessStorageController;->getAllowWirelessStorage(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6380
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getAppVersionCode(Ljava/lang/String;)I
    .registers 3
    .param p1, "packagename"    # Ljava/lang/String;

    .prologue
    .line 1526
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getAppVersionCode(Ljava/lang/String;)I

    move-result v0

    return v0
.end method

.method public getAppVersionState(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMAppVersionState;",
            ">;"
        }
    .end annotation

    .prologue
    .line 3751
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3752
    monitor-enter p0

    .line 3753
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAppVersionState(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 3752
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getApplicationState(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMApplicationState;",
            ">;"
        }
    .end annotation

    .prologue
    .line 3720
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3721
    monitor-enter p0

    .line 3722
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getApplicationState(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 3721
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getBlockingConsumerEmailList(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 4341
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4342
    monitor-enter p0

    .line 4343
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->getBlockingConsumerEmailList(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 4342
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getBluetoothMACWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 939
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 940
    monitor-enter p0

    .line 941
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getBluetoothMACWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 940
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getBluetoothMaxVisiblityTimeOut(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 860
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 861
    monitor-enter p0

    .line 862
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getBluetoothMaxVisiblityTimeOut(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 861
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getBluetoothSearchedDeviceType(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 885
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 886
    monitor-enter p0

    .line 887
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getBluetoothSearchedDeviceType(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 886
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getBrowserProxyIPAddress(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5835
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5836
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5837
    monitor-enter p0

    .line 5838
    :try_start_9
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5839
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getBrowserProxyIPAddress(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_13
    .catchall {:try_start_9 .. :try_end_13} :catchall_16

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 5837
    :catchall_16
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getBrowserProxyPortNumber(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5844
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5845
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5846
    monitor-enter p0

    .line 5847
    :try_start_9
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5848
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getBrowserProxyPortNumber(Landroid/content/ComponentName;I)I
    :try_end_13
    .catchall {:try_start_9 .. :try_end_13} :catchall_16

    move-result v0

    monitor-exit p0

    return v0

    .line 5846
    :catchall_16
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCIDWithWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 1062
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1063
    monitor-enter p0

    .line 1064
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getCIDWithWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 1063
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCameraPid(I)I
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 1760
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1761
    monitor-enter p0

    .line 1762
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMCameraController;->getCameraPid(I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1761
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCameraStatus(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 1746
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1747
    monitor-enter p0

    .line 1748
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMCameraController;->getCameraStatus(I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1747
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCameraWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 1803
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1804
    monitor-enter p0

    .line 1805
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCameraController;->getCameraWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 1804
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCommandListForInternetAccess(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 5553
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5554
    monitor-enter p0

    .line 5555
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getCommandListForInternetAccess(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 5554
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCommonCriteriaMode(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8024
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8025
    monitor-enter p0

    .line 8026
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCCModeController;->getCommonCriteriaMode(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8025
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getConfiguredApnList(Landroid/content/ComponentName;II)Ljava/util/List;
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "option"    # I
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "II)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMApnConfiguration;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 5654
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5655
    monitor-enter p0

    .line 5656
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5657
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_29

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5658
    return-object v1

    .line 5660
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_29

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5661
    return-object v1

    .line 5663
    :cond_1a
    :try_start_1a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5664
    const/16 v1, 0x1e

    .line 5663
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_21
    .catchall {:try_start_1a .. :try_end_21} :catchall_29

    monitor-exit p0

    .line 5666
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApnController;->getConfiguredApnList(Landroid/content/ComponentName;II)Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 5655
    :catchall_29
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getConfiguredNetworks(I)Ljava/util/List;
    .registers 4
    .param p1, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMWifiConfiguration;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 4858
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4859
    invoke-virtual {p0, v1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4860
    return-object v1

    .line 4862
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4863
    return-object v1

    .line 4865
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMWifiController;->getConfiguredNetworks(I)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getCountCommonCriteriaModeEnable(I)I
    .registers 4
    .param p1, "userHandle"    # I

    .prologue
    .line 8310
    const/4 v0, 0x0

    .line 8311
    .local v0, "counts":I
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    invoke-virtual {v1, p1}, Lcom/lge/mdm/controller/LGMDMCCModeController;->getCountCommonCriteriaModeEnable(I)I

    move-result v0

    .line 8313
    return v0
.end method

.method public getCurrIMEPackage(I)Ljava/lang/String;
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 1503
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1504
    monitor-enter p0

    .line 1505
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getCurrIMEPackage(I)Ljava/lang/String;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 1504
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCurrentConnectionLgVpn(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 2436
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2438
    monitor-enter p0

    .line 2439
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2440
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_26

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2441
    return-object v1

    .line 2443
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_26

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2444
    return-object v1

    .line 2446
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2447
    return-object v1

    .line 2450
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMVpnController;->getCurrentConnectionLgVpn()Ljava/lang/String;
    :try_end_23
    .catchall {:try_start_1e .. :try_end_23} :catchall_26

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2438
    :catchall_26
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCurrentConnectionVpn(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 2455
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2457
    monitor-enter p0

    .line 2458
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2459
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_26

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2460
    return-object v1

    .line 2462
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_26

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2463
    return-object v1

    .line 2465
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2466
    return-object v1

    .line 2469
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->getCurrentConnectionVpn(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_23
    .catchall {:try_start_1e .. :try_end_23} :catchall_26

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2457
    :catchall_26
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getCurrentUserID()I
    .registers 2

    .prologue
    .line 7008
    monitor-enter p0

    .line 7009
    :try_start_1
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->getCurrentUserID()I
    :try_end_6
    .catchall {:try_start_1 .. :try_end_6} :catchall_9

    move-result v0

    monitor-exit p0

    return v0

    .line 7008
    :catchall_9
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getDebugMode(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 523
    monitor-enter p0

    .line 524
    :try_start_1
    invoke-static {}, Lcom/lge/mdm/util/MDMLog;->getDebugmode()Z
    :try_end_4
    .catchall {:try_start_1 .. :try_end_4} :catchall_7

    move-result v0

    monitor-exit p0

    return v0

    .line 523
    :catchall_7
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getDisallowUSBType(II)Z
    .registers 4
    .param p1, "usbType"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 6265
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6266
    monitor-enter p0

    .line 6267
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getDisallowUSBType(II)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6266
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getDisallowWifiConnection(Ljava/lang/String;Ljava/lang/String;I)Z
    .registers 5
    .param p1, "ssid"    # Ljava/lang/String;
    .param p2, "bssid"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 5968
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5969
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getDisallowWifiConnection(Ljava/lang/String;Ljava/lang/String;I)Z

    move-result v0

    return v0
.end method

.method public getDisallowWifiSecurityLevel(Landroid/net/wifi/WifiConfiguration;II)Z
    .registers 5
    .param p1, "config"    # Landroid/net/wifi/WifiConfiguration;
    .param p2, "netID"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 5963
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5964
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getDisallowWifiSecurityLevel(Landroid/net/wifi/WifiConfiguration;II)Z

    move-result v0

    return v0
.end method

.method public getEmailAccountList(Landroid/content/ComponentName;II)Ljava/util/List;
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "flags"    # I
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "II)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMEmailAccountState;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v1, 0x0

    .line 4460
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4461
    monitor-enter p0

    .line 4462
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4463
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_27

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 4464
    return-object v1

    .line 4466
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_27

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 4467
    return-object v1

    .line 4469
    :cond_1a
    :try_start_1a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_1f
    .catchall {:try_start_1a .. :try_end_1f} :catchall_27

    monitor-exit p0

    .line 4471
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->getEmailAccountList(Landroid/content/ComponentName;II)Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 4461
    :catchall_27
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEmergencyCallStatus()Z
    .registers 2

    .prologue
    .line 7806
    monitor-enter p0

    .line 7807
    :try_start_1
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->getEmergencyCallStatus()Z
    :try_end_6
    .catchall {:try_start_1 .. :try_end_6} :catchall_9

    move-result v0

    monitor-exit p0

    return v0

    .line 7806
    :catchall_9
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEncryptionPolicy(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3202
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3203
    monitor-enter p0

    .line 3204
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCryptoController;->getEncryptionPolicy(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3203
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEncryptionPolicyForEas(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3244
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3245
    monitor-enter p0

    .line 3246
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCryptoController;->getEncryptionPolicyForEas(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3245
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceAirplaneMode(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5257
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5258
    monitor-enter p0

    .line 5259
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getEnforceAirplaneMode(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5258
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceAlertMobileDataUsage(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7538
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7539
    monitor-enter p0

    .line 7540
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceAlertMobileDataUsage(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7539
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceBackgroundDataRestricted(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6533
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6534
    monitor-enter p0

    .line 6535
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceBackgroundDataRestricted(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6534
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceEmergencyCallOnly(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6112
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6113
    monitor-enter p0

    .line 6114
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getEnforceEmergencyCallOnly(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6113
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceGPSLocationEnabled(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1219
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1220
    monitor-enter p0

    .line 1221
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getEnforceGPSLocationEnabled(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 1220
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceLimitMobileDataUsage(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7481
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7482
    monitor-enter p0

    .line 7483
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceLimitMobileDataUsage(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7482
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceMobileNetworkEnabled(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 2815
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2816
    monitor-enter p0

    .line 2817
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceMobileNetworkEnabled(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 2816
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceMuteDuringCall(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8101
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8102
    monitor-enter p0

    .line 8103
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getEnforceMuteDuringCall(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8102
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforcePasswordChange(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 3330
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3331
    monitor-enter p0

    .line 3332
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getEnforcePasswordChange(I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3331
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforcePowerButtonLocks(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7959
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7960
    monitor-enter p0

    .line 7961
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getEnforcePowerButtonLocks(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 7960
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getEnforceUsbModeAsNone(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8116
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8117
    monitor-enter p0

    .line 8118
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMUsbController;->getEnforceUsbModeAsNone(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8117
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getExternalMemoryCID(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1003
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1004
    monitor-enter p0

    .line 1006
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1007
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_14

    .line 1008
    const-string/jumbo v0, "-1"
    :try_end_12
    .catchall {:try_start_6 .. :try_end_12} :catchall_2e

    monitor-exit p0

    return-object v0

    .line 1010
    :cond_14
    :try_start_14
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_1f

    .line 1011
    const-string/jumbo v0, "-1"
    :try_end_1d
    .catchall {:try_start_14 .. :try_end_1d} :catchall_2e

    monitor-exit p0

    return-object v0

    .line 1013
    :cond_1f
    :try_start_1f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1014
    const/16 v1, 0x11

    .line 1013
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_26
    .catchall {:try_start_1f .. :try_end_26} :catchall_2e

    monitor-exit p0

    .line 1016
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getExternalMemoryCID()Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 1004
    :catchall_2e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getGranularControlOnCCMode(I)I
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 8052
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8053
    monitor-enter p0

    .line 8054
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMCCModeController;->getGranularControlOnCCMode()I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 8053
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getListForInternetAccess(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .prologue
    .line 5499
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5500
    monitor-enter p0

    .line 5501
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMIptablesController;->getListForInternetAccess(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 5500
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getLockdownAppsPackage(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4014
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4015
    const/4 v0, 0x0

    .line 4016
    .local v0, "packagename":Ljava/lang/String;
    monitor-enter p0

    .line 4017
    :try_start_7
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getLockdownAppsPackage(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_f

    move-result-object v0

    .local v0, "packagename":Ljava/lang/String;
    monitor-exit p0

    .line 4019
    return-object v0

    .line 4016
    .local v0, "packagename":Ljava/lang/String;
    :catchall_f
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getLockoutDescript(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3376
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3377
    monitor-enter p0

    .line 3378
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getLockoutDescript(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 3377
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getLockoutLevel(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3337
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3338
    monitor-enter p0

    .line 3339
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getLockoutLevel(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3338
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getLockoutNow(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3383
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3384
    monitor-enter p0

    .line 3385
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getLockoutNow(Landroid/content/ComponentName;I)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_f

    move-result v0

    monitor-exit p0

    return v0

    .line 3384
    :catchall_f
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getManualSyncWhenRoaming(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4428
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4429
    monitor-enter p0

    .line 4430
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->getManualSyncWhenRoaming(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4429
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getMicrophonePackage(ZI)Ljava/lang/String;
    .registers 4
    .param p1, "bSpeech"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 1481
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1482
    monitor-enter p0

    .line 1483
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getMicrophonePackage(ZI)Ljava/lang/String;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 1482
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getMicrophoneWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 1390
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1391
    monitor-enter p0

    .line 1392
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getMicrophoneWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 1391
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getMobileDataUsageInfo(Landroid/content/ComponentName;II)J
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "type"    # I
    .param p3, "userHandle"    # I
    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .prologue
    .line 7596
    invoke-virtual {p0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getMobileDataUsageInformation(Landroid/content/ComponentName;II)Ljava/util/List;

    move-result-object v0

    .line 7598
    .local v0, "list":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    if-eqz v0, :cond_d

    invoke-interface {v0}, Ljava/util/List;->size()I

    move-result v1

    const/4 v2, 0x1

    if-ge v1, v2, :cond_10

    .line 7599
    :cond_d
    const-wide/16 v2, 0x0

    return-wide v2

    .line 7601
    :cond_10
    const/4 v1, 0x0

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/lang/String;

    invoke-static {v1}, Ljava/lang/Long;->parseLong(Ljava/lang/String;)J

    move-result-wide v2

    return-wide v2
.end method

.method public getMobileDataUsageInformation(Landroid/content/ComponentName;II)Ljava/util/List;
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "type"    # I
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "II)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v2, 0x0

    .line 7609
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7610
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7611
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_10

    .line 7612
    return-object v2

    .line 7614
    :cond_10
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_17

    .line 7615
    return-object v2

    .line 7617
    :cond_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v0

    if-eqz v0, :cond_27

    .line 7618
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "can not control data policy becase of wifi only model"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 7619
    return-object v2

    .line 7621
    :cond_27
    monitor-enter p0

    .line 7622
    :try_start_28
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7623
    const/16 v1, 0x2c

    .line 7622
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_2f
    .catchall {:try_start_28 .. :try_end_2f} :catchall_37

    monitor-exit p0

    .line 7625
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getMobileDataUsageInformation(Landroid/content/ComponentName;II)Ljava/util/List;

    move-result-object v0

    return-object v0

    .line 7621
    :catchall_37
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getNotifyRemoveGoogleAccountDisabled(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 6786
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6787
    monitor-enter p0

    .line 6788
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getNotifyRemoveGoogleAccountDisabled(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 6787
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getNotifySpecificProcessKillEventList(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 4179
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4180
    const/4 v0, 0x0

    .line 4181
    .local v0, "packagelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    monitor-enter p0

    .line 4182
    :try_start_7
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getNotifySpecificProcessKillEventList(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_f

    move-result-object v0

    .local v0, "packagelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    monitor-exit p0

    .line 4185
    return-object v0

    .line 4181
    .local v0, "packagelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    :catchall_f
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public getOwnerInfo(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 7174
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7175
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getLockSettings()Lcom/android/internal/widget/ILockSettings;

    move-result-object v0

    if-nez v0, :cond_f

    .line 7176
    return-object v1

    .line 7178
    :cond_f
    monitor-enter p0

    .line 7179
    :try_start_10
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7180
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_16
    .catchall {:try_start_10 .. :try_end_16} :catchall_2b

    move-result v0

    if-nez v0, :cond_1b

    monitor-exit p0

    .line 7181
    return-object v1

    .line 7183
    :cond_1b
    :try_start_1b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1e
    .catchall {:try_start_1b .. :try_end_1e} :catchall_2b

    move-result v0

    if-nez v0, :cond_23

    monitor-exit p0

    .line 7184
    return-object v1

    :cond_23
    monitor-exit p0

    .line 7187
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getOwnerInfo(Landroid/content/ComponentName;I)Ljava/lang/String;

    move-result-object v0

    return-object v0

    .line 7178
    :catchall_2b
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPasswordMinimumChange(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3151
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3152
    monitor-enter p0

    .line 3153
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getPasswordMinimumChange(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3152
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPasswordRecoveryByEas(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 3275
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3276
    monitor-enter p0

    .line 3277
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getPasswordRecoveryByEas(I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3276
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPasswordRecoveryEnabled(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3306
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3307
    monitor-enter p0

    .line 3308
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->getPasswordRecoveryEnabled(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3307
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPossibleManageWiFiProfile()Z
    .registers 2

    .prologue
    .line 6082
    monitor-enter p0

    .line 6083
    :try_start_1
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0}, Lcom/lge/mdm/controller/LGMDMWifiController;->getPossibleManageWiFiProfile()Z
    :try_end_6
    .catchall {:try_start_1 .. :try_end_6} :catchall_9

    move-result v0

    monitor-exit p0

    return v0

    .line 6082
    :catchall_9
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getPreInstalledAppList(I)Ljava/util/List;
    .registers 3
    .param p1, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 3825
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3826
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getPreInstalledAppList(I)Ljava/util/List;

    move-result-object v0

    return-object v0
.end method

.method public getRecentApplicationToastView(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 7783
    monitor-enter p0

    .line 7784
    :try_start_1
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getRecentApplicationToastView(I)Z
    :try_end_6
    .catchall {:try_start_1 .. :try_end_6} :catchall_9

    move-result v0

    monitor-exit p0

    return v0

    .line 7783
    :catchall_9
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getRunningPackagesFromPid(II)[Ljava/lang/String;
    .registers 4
    .param p1, "pid"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 5289
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5290
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getRunningPackagesFromPid(II)[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getRuntimePermissionGrantState(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)I
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "permission"    # Ljava/lang/String;
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 530
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 531
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPermissionController;->getRuntimePermissionGrantState(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)I

    move-result v0

    return v0
.end method

.method public getScreenCaptureBlacklist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 2556
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2557
    monitor-enter p0

    .line 2558
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->getScreenCaptureBlacklist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2557
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getScreenCaptureWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 2631
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2632
    monitor-enter p0

    .line 2633
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->getScreenCaptureWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 2632
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getSignatureStateList(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMSignatureState;",
            ">;"
        }
    .end annotation

    .prologue
    .line 3811
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3812
    monitor-enter p0

    .line 3813
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getSignatureStateList(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 3812
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getStorageEncryptionStatus(II)I
    .registers 4
    .param p1, "flags"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 4584
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4585
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCryptoController;->getStorageEncryptionStatus(II)I

    move-result v0

    return v0
.end method

.method public getTopPackageName(I)Ljava/lang/String;
    .registers 5
    .param p1, "userHandle"    # I

    .prologue
    .line 1454
    const-string/jumbo v2, ""

    .line 1456
    .local v2, "packageName":Ljava/lang/String;
    :try_start_3
    new-instance v1, Lcom/lge/mdm/util/LGMDMActivityInfo;

    invoke-direct {v1}, Lcom/lge/mdm/util/LGMDMActivityInfo;-><init>()V

    .line 1457
    .local v1, "mLGMDMActivityInfo":Lcom/lge/mdm/util/LGMDMActivityInfo;
    invoke-virtual {v1, p1}, Lcom/lge/mdm/util/LGMDMActivityInfo;->getTopActivityPackageName(I)Ljava/lang/String;
    :try_end_b
    .catch Ljava/lang/SecurityException; {:try_start_3 .. :try_end_b} :catch_d

    move-result-object v2

    .line 1461
    .end local v1    # "mLGMDMActivityInfo":Lcom/lge/mdm/util/LGMDMActivityInfo;
    :goto_c
    return-object v2

    .line 1458
    :catch_d
    move-exception v0

    .line 1459
    .local v0, "e":Ljava/lang/SecurityException;
    const-string/jumbo v2, ""

    goto :goto_c
.end method

.method public getTrueRepartValue(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7738
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7739
    sget-object v2, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v2

    .line 7740
    :try_start_8
    const-string/jumbo v1, "ro.build.target_operator"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 7741
    .local v0, "mTargetOperator":Ljava/lang/String;
    const-string/jumbo v1, "SKT"

    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1d

    .line 7742
    const-string/jumbo v1, ""
    :try_end_1b
    .catchall {:try_start_8 .. :try_end_1b} :catchall_25

    monitor-exit v2

    return-object v1

    .line 7745
    :cond_1d
    :try_start_1d
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSKTSSMController:Lcom/lge/mdm/controller/LGMDMSKTSSMController;

    invoke-virtual {v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMSKTSSMController;->getATClientTrueRepartValue(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_22
    .catchall {:try_start_1d .. :try_end_22} :catchall_25

    move-result-object v1

    monitor-exit v2

    return-object v1

    .line 7739
    .end local v0    # "mTargetOperator":Ljava/lang/String;
    :catchall_25
    move-exception v1

    monitor-exit v2

    throw v1
.end method

.method public getWIFIDataUsageInformation(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)J
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "startDate"    # Ljava/lang/String;
    .param p4, "endDate"    # Ljava/lang/String;
    .param p5, "userHandle"    # I

    .prologue
    const-wide/16 v2, -0x1

    .line 5298
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5299
    monitor-enter p0

    .line 5300
    :try_start_8
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5301
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_e
    .catchall {:try_start_8 .. :try_end_e} :catchall_2f

    move-result v0

    if-nez v0, :cond_13

    monitor-exit p0

    .line 5302
    return-wide v2

    .line 5304
    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_16
    .catchall {:try_start_13 .. :try_end_16} :catchall_2f

    move-result v0

    if-nez v0, :cond_1b

    monitor-exit p0

    .line 5305
    return-wide v2

    .line 5307
    :cond_1b
    :try_start_1b
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5308
    const/16 v1, 0x1d

    .line 5307
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_22
    .catchall {:try_start_1b .. :try_end_22} :catchall_2f

    monitor-exit p0

    .line 5310
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getWIFIDataUsageInformation(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)J

    move-result-wide v0

    return-wide v0

    .line 5299
    :catchall_2f
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getWarningMsg(Landroid/content/ComponentName;I)Z
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3362
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3363
    monitor-enter p0

    .line 3364
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getWarningMsg(Landroid/content/ComponentName;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 3363
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getWarningMsgStr(Landroid/content/ComponentName;I)Ljava/lang/String;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3369
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3370
    monitor-enter p0

    .line 3371
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getWarningMsgStr(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 3370
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getWiFiSecurityLevel(Landroid/content/ComponentName;I)I
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5364
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5365
    monitor-enter p0

    .line 5366
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->getWiFiSecurityLevel(Landroid/content/ComponentName;I)I
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 5365
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public getWirelessLocationWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I)",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .prologue
    .line 1174
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1175
    monitor-enter p0

    .line 1176
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGpsController;->getLocationWhitelist(Landroid/content/ComponentName;I)Ljava/util/List;
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 1175
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public gotoOSUpdateActivity(Landroid/content/ComponentName;I)I
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, -0x1

    .line 5743
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5744
    monitor-enter p0

    .line 5745
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5746
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_30

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5747
    return v1

    .line 5749
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_30

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5750
    return v1

    .line 5752
    :cond_1a
    :try_start_1a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_1f
    .catchall {:try_start_1a .. :try_end_1f} :catchall_30

    monitor-exit p0

    .line 5754
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "gotoOSUpdateActivity"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5755
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->gotoOSUpdateActivity(I)I

    move-result v0

    return v0

    .line 5744
    :catchall_30
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public handleManualSync(Landroid/content/ComponentName;I)V
    .registers 4
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4418
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4420
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->handleManualSync(Landroid/content/ComponentName;I)V

    .line 4417
    return-void
.end method

.method public hasGrantedPolicy(Landroid/content/ComponentName;II)Z
    .registers 8
    .param p1, "adminReceiver"    # Landroid/content/ComponentName;
    .param p2, "policyId"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 4846
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4847
    monitor-enter p0

    .line 4848
    :try_start_6
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 4849
    .local v0, "administrator":Lcom/lge/mdm/admin/LGMDMadminlist;
    if-nez v0, :cond_2b

    .line 4850
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "No active admin "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_28
    .catchall {:try_start_6 .. :try_end_28} :catchall_28

    .line 4847
    .end local v0    # "administrator":Lcom/lge/mdm/admin/LGMDMadminlist;
    :catchall_28
    move-exception v1

    monitor-exit p0

    throw v1

    .line 4852
    .restart local v0    # "administrator":Lcom/lge/mdm/admin/LGMDMadminlist;
    :cond_2b
    :try_start_2b
    invoke-virtual {v0}, Lcom/lge/mdm/admin/LGMDMadminlist;->getDeviceAdminInfo()Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;

    move-result-object v1

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMDeviceAdminInfo;->usesPolicy(I)Z
    :try_end_32
    .catchall {:try_start_2b .. :try_end_32} :catchall_28

    move-result v1

    monitor-exit p0

    return v1
.end method

.method public hideVoiceIME(I)V
    .registers 4
    .param p1, "userHandle"    # I

    .prologue
    .line 1514
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1515
    monitor-enter p0

    .line 1516
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->hideVoiceIME(I)V

    .line 1517
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "hideVoiceIME"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_16

    monitor-exit p0

    .line 1513
    return-void

    .line 1515
    :catchall_16
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public initializeCertificate(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "password"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 4958
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4959
    monitor-enter p0

    .line 4960
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4961
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_46

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 4962
    return v1

    .line 4964
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_46

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 4965
    return v1

    .line 4967
    :cond_1a
    if-eqz p3, :cond_1e

    monitor-exit p0

    .line 4968
    return v1

    .line 4970
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4971
    const/4 v1, 0x6

    .line 4970
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4972
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "initializeCertificate, password "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 4973
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMCertificateController;->initializeCertificate(Landroid/content/ComponentName;Ljava/lang/String;I)Z
    :try_end_43
    .catchall {:try_start_1e .. :try_end_43} :catchall_46

    move-result v0

    monitor-exit p0

    return v0

    .line 4959
    :catchall_46
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public installApplication(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "path"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3606
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3607
    monitor-enter p0

    .line 3608
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3609
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_44

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3610
    return-void

    .line 3612
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_44

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3613
    return-void

    .line 3615
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 3616
    return-void

    .line 3618
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3619
    const/4 v1, 0x0

    .line 3618
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_23
    .catchall {:try_start_1d .. :try_end_23} :catchall_44

    monitor-exit p0

    .line 3621
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->installApplication(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 3622
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "installApplication, path : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3605
    return-void

    .line 3607
    :catchall_44
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public installCertificate(Landroid/content/ComponentName;[BLjava/lang/String;Ljava/lang/String;II)I
    .registers 14
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "certificate"    # [B
    .param p3, "password"    # Ljava/lang/String;
    .param p4, "certificateId"    # Ljava/lang/String;
    .param p5, "useType"    # I
    .param p6, "userHandle"    # I

    .prologue
    const/4 v1, -0x1

    .line 5019
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p6}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5020
    monitor-enter p0

    .line 5021
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5022
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_4c

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5023
    return v1

    .line 5025
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_4c

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5026
    return v1

    .line 5028
    :cond_1a
    if-eqz p6, :cond_1e

    monitor-exit p0

    .line 5029
    return v1

    .line 5031
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5032
    const/4 v1, 0x6

    .line 5031
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5033
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "installCertificate, certificateId : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5034
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/lge/mdm/controller/LGMDMCertificateController;->installCertificate(Landroid/content/ComponentName;[BLjava/lang/String;Ljava/lang/String;II)I
    :try_end_49
    .catchall {:try_start_1e .. :try_end_49} :catchall_4c

    move-result v0

    monitor-exit p0

    return v0

    .line 5020
    :catchall_4c
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public installLGVpnCertificate(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)I
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "password"    # Ljava/lang/String;
    .param p4, "userHandle"    # I

    .prologue
    .line 2214
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2215
    monitor-enter p0

    .line 2216
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2217
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2218
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2220
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2221
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2223
    :cond_25
    if-eqz p4, :cond_2f

    .line 2224
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2226
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2227
    const/4 v1, 0x7

    .line 2226
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2228
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMVpnController;->installLGVpnCertificate(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2215
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public isAdminActive(I)Z
    .registers 6
    .param p1, "userHandle"    # I

    .prologue
    const/4 v3, 0x0

    .line 6923
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6924
    monitor-enter p0

    .line 6925
    :try_start_7
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getLGMDMAdminLists(I)Ljava/util/ArrayList;
    :try_end_c
    .catchall {:try_start_7 .. :try_end_c} :catchall_22

    move-result-object v1

    .line 6927
    .local v1, "mAdminList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/lge/mdm/admin/LGMDMadminlist;>;"
    if-nez v1, :cond_11

    monitor-exit p0

    .line 6928
    return v3

    .line 6930
    :cond_11
    :try_start_11
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getLGMDMAdminLists(I)Ljava/util/ArrayList;

    move-result-object v2

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
    :try_end_1a
    .catchall {:try_start_11 .. :try_end_1a} :catchall_22

    move-result v0

    .line 6931
    .local v0, "N":I
    if-lez v0, :cond_20

    .line 6932
    const/4 v2, 0x1

    monitor-exit p0

    return v2

    :cond_20
    monitor-exit p0

    .line 6934
    return v3

    .line 6924
    .end local v0    # "N":I
    .end local v1    # "mAdminList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/lge/mdm/admin/LGMDMadminlist;>;"
    :catchall_22
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public isAppControlCheck()Z
    .registers 4

    .prologue
    .line 5776
    const/4 v0, 0x0

    .line 5778
    .local v0, "mAppControlRestricted":Z
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    if-eqz v1, :cond_e

    .line 5779
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mUserManager:Landroid/os/UserManager;

    .line 5780
    const-string/jumbo v2, "no_control_apps"

    .line 5779
    invoke-virtual {v1, v2}, Landroid/os/UserManager;->hasUserRestriction(Ljava/lang/String;)Z

    move-result v0

    .line 5783
    .end local v0    # "mAppControlRestricted":Z
    :cond_e
    return v0
.end method

.method public isAuthentecVpn(Landroid/content/ComponentName;I)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 2116
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2117
    monitor-enter p0

    .line 2118
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2119
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_35

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 2120
    return v1

    .line 2122
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_35

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 2123
    return v1

    .line 2125
    :cond_1a
    if-eqz p2, :cond_1e

    monitor-exit p0

    .line 2126
    return v1

    .line 2128
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2129
    const/4 v1, 0x7

    .line 2128
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2130
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "isAuthentecVpn"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2131
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/controller/LGMDMVpnController;->isAuthentecVpn(I)Z
    :try_end_32
    .catchall {:try_start_1e .. :try_end_32} :catchall_35

    move-result v0

    monitor-exit p0

    return v0

    .line 2117
    :catchall_35
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public isContainWatcherAndKeeperList(Ljava/lang/String;I)Z
    .registers 4
    .param p1, "pakcageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 4249
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4250
    monitor-enter p0

    .line 4251
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->isContainWatcherAndKeeperList(Ljava/lang/String;I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4250
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public isDeclawingPolicyMode(I)Z
    .registers 3
    .param p1, "userHandle"    # I

    .prologue
    .line 8459
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mPriviligedUserController:Lcom/lge/mdm/controller/LGMDMPriviligedUserController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMPriviligedUserController;->isDeclawingPolicyMode(I)Z

    move-result v0

    return v0
.end method

.method public isDeviceOwnerProvisioned(Landroid/content/ComponentName;I)Z
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 8408
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8409
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8410
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v4

    if-nez v4, :cond_10

    .line 8411
    return v1

    .line 8413
    :cond_10
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v4

    if-nez v4, :cond_17

    .line 8414
    return v1

    .line 8417
    :cond_17
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 8419
    .local v2, "identity":J
    :try_start_1b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v0

    .line 8420
    .local v0, "dpm":Landroid/app/admin/DevicePolicyManager;
    invoke-virtual {v0}, Landroid/app/admin/DevicePolicyManager;->getDeviceOwner()Ljava/lang/String;
    :try_end_22
    .catchall {:try_start_1b .. :try_end_22} :catchall_33

    move-result-object v4

    if-eqz v4, :cond_26

    const/4 v1, 0x1

    .line 8422
    :cond_26
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8423
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v5, "isDeviceOwnerActivated"

    invoke-static {v4, v5}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8420
    return v1

    .line 8421
    .end local v0    # "dpm":Landroid/app/admin/DevicePolicyManager;
    :catchall_33
    move-exception v1

    .line 8422
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8423
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v5, "isDeviceOwnerActivated"

    invoke-static {v4, v5}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8421
    throw v1
.end method

.method public isManualSyncCurrent(I)Z
    .registers 3
    .param p1, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4438
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4439
    monitor-enter p0

    .line 4440
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMEmailController;->isManualSyncCurrent(I)Z
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_e

    move-result v0

    monitor-exit p0

    return v0

    .line 4439
    :catchall_e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public isMdmAccountFromNewEmail(Landroid/accounts/Account;)Z
    .registers 3
    .param p1, "account"    # Landroid/accounts/Account;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4478
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMEmailController;->isMdmAccountFromNewEmail(Landroid/accounts/Account;)Z

    move-result v0

    return v0
.end method

.method public isProfileOwnerProvisioned(Landroid/content/ComponentName;I)Z
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v8, 0x0

    .line 8428
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v6, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8429
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8430
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v6

    if-nez v6, :cond_10

    .line 8431
    return v8

    .line 8433
    :cond_10
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v6

    if-nez v6, :cond_17

    .line 8434
    return v8

    .line 8437
    :cond_17
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 8439
    .local v2, "identity":J
    :try_start_1b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v0

    .line 8440
    .local v0, "dpm":Landroid/app/admin/DevicePolicyManager;
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getAllUsers()Ljava/util/List;

    move-result-object v5

    .line 8441
    .local v5, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v5}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .local v4, "ui$iterator":Ljava/util/Iterator;
    :cond_29
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_4b

    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/pm/UserInfo;

    .line 8442
    .local v1, "ui":Landroid/content/pm/UserInfo;
    iget v6, v1, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v0, v6}, Landroid/app/admin/DevicePolicyManager;->getProfileOwnerAsUser(I)Landroid/content/ComponentName;
    :try_end_3a
    .catchall {:try_start_1b .. :try_end_3a} :catchall_58

    move-result-object v6

    if-eqz v6, :cond_29

    .line 8443
    const/4 v6, 0x1

    .line 8448
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8449
    const-string/jumbo v7, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v8, "isProfileOwnerActivated"

    invoke-static {v7, v8}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8443
    return v6

    .line 8448
    .end local v1    # "ui":Landroid/content/pm/UserInfo;
    :cond_4b
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8449
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v7, "isProfileOwnerActivated"

    invoke-static {v6, v7}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8446
    return v8

    .line 8447
    .end local v0    # "dpm":Landroid/app/admin/DevicePolicyManager;
    .end local v4    # "ui$iterator":Ljava/util/Iterator;
    .end local v5    # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :catchall_58
    move-exception v6

    .line 8448
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8449
    const-string/jumbo v7, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v8, "isProfileOwnerActivated"

    invoke-static {v7, v8}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8447
    throw v6
.end method

.method public isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;

    .prologue
    .line 5759
    monitor-enter p0

    .line 5760
    :try_start_1
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 5761
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    if-nez v0, :cond_15

    .line 5762
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v2, "API Authentication failure. admin is null"

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_12
    .catchall {:try_start_1 .. :try_end_12} :catchall_30

    .line 5763
    const/4 v1, 0x0

    monitor-exit p0

    return v1

    .line 5765
    :cond_15
    :try_start_15
    iget-boolean v1, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->apiAuth:Z

    if-eqz v1, :cond_26

    .line 5766
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v2, "API Authentication successful"

    invoke-static {v1, v2}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 5770
    :goto_22
    iget-boolean v1, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->apiAuth:Z
    :try_end_24
    .catchall {:try_start_15 .. :try_end_24} :catchall_30

    monitor-exit p0

    return v1

    .line 5768
    :cond_26
    :try_start_26
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v2, "You do not have permissions to make this API call."

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2f
    .catchall {:try_start_26 .. :try_end_2f} :catchall_30

    goto :goto_22

    .line 5759
    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    :catchall_30
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public keyguardDone()V
    .registers 7

    .prologue
    const/4 v5, 0x1

    .line 8220
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v2

    if-nez v2, :cond_22

    .line 8221
    const-string/jumbo v2, "com.android.systemui"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    const/4 v4, 0x0

    invoke-virtual {p0, v3, v4}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkPackageNameFromPID(II)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_22

    .line 8222
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "No active admin "

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 8226
    :cond_22
    const-class v2, Landroid/view/WindowManagerPolicy;

    invoke-static {v2}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/view/WindowManagerPolicy;

    .line 8227
    .local v1, "mPolicy":Landroid/view/WindowManagerPolicy;
    if-eqz v1, :cond_4b

    .line 8228
    check-cast v1, Lcom/android/server/policy/PhoneWindowManagerEx;

    .end local v1    # "mPolicy":Landroid/view/WindowManagerPolicy;
    invoke-virtual {v1}, Lcom/android/server/policy/PhoneWindowManagerEx;->getKeyguardServiceDelegate()Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;

    move-result-object v0

    .line 8230
    .local v0, "mKeyguardDelegate":Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;
    if-nez v0, :cond_3e

    .line 8231
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "error : while getting keyguardservice!"

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->e(Ljava/lang/String;Ljava/lang/String;)V

    .line 8219
    .end local v0    # "mKeyguardDelegate":Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;
    :goto_3d
    return-void

    .line 8233
    .restart local v0    # "mKeyguardDelegate":Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;
    :cond_3e
    invoke-virtual {v0, v5, v5}, Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;->keyguardDone(ZZ)V

    .line 8234
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "keyguardDone"

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_3d

    .line 8237
    .end local v0    # "mKeyguardDelegate":Lcom/android/server/policy/keyguard/KeyguardServiceDelegate;
    .restart local v1    # "mPolicy":Landroid/view/WindowManagerPolicy;
    :cond_4b
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "error: mPolicy is null"

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->e(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_3d
.end method

.method public listen(Ljava/lang/String;Lcom/lge/mdm/config/ILGMDMEmailConfigStateListener;IZI)V
    .registers 12
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "callback"    # Lcom/lge/mdm/config/ILGMDMEmailConfigStateListener;
    .param p3, "events"    # I
    .param p4, "notifyNow"    # Z
    .param p5, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4483
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4484
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMEmailController;->listen(Ljava/lang/String;Lcom/lge/mdm/config/ILGMDMEmailConfigStateListener;IZI)V

    .line 4482
    return-void
.end method

.method public modifyApn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMApnConfiguration;I)I
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "config"    # Lcom/lge/mdm/config/LGMDMApnConfiguration;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v1, -0x1

    .line 5607
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5608
    monitor-enter p0

    .line 5609
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5610
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_47

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5611
    return v1

    .line 5613
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_47

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5614
    return v1

    .line 5616
    :cond_1a
    if-eqz p3, :cond_1e

    monitor-exit p0

    .line 5617
    return v1

    .line 5619
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5620
    const/16 v1, 0x1e

    .line 5619
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_25
    .catchall {:try_start_1e .. :try_end_25} :catchall_47

    monitor-exit p0

    .line 5622
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "modifyApn : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5623
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApnController:Lcom/lge/mdm/controller/LGMDMApnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApnController;->modifyApn(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMApnConfiguration;I)I

    move-result v0

    return v0

    .line 5608
    :catchall_47
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public modifyLGVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMLgVpnProfile;I)I
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "profile"    # Lcom/lge/mdm/config/LGMDMLgVpnProfile;
    .param p3, "userHandle"    # I

    .prologue
    .line 2156
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2157
    monitor-enter p0

    .line 2158
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2159
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2160
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2162
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2163
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2165
    :cond_25
    if-eqz p3, :cond_2f

    .line 2166
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_PROFILE_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2168
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2169
    const/4 v1, 0x7

    .line 2168
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2170
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->modifyLGVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMLgVpnProfile;I)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2157
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public modifyVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "profile"    # Lcom/lge/mdm/config/LGMDMVpnProfile;
    .param p3, "userHandle"    # I

    .prologue
    .line 2056
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2057
    monitor-enter p0

    .line 2058
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2059
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_44

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2060
    return-void

    .line 2062
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_44

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 2063
    return-void

    .line 2065
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 2066
    return-void

    .line 2068
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2069
    const/4 v1, 0x7

    .line 2068
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2070
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->modifyVpnProfile(Landroid/content/ComponentName;Lcom/lge/mdm/config/LGMDMVpnProfile;I)V

    .line 2071
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "modifyVpnProfile, profile : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_42
    .catchall {:try_start_1d .. :try_end_42} :catchall_44

    monitor-exit p0

    .line 2055
    return-void

    .line 2057
    :catchall_44
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public notificationCIDMountServiceWhitelist(Landroid/content/ComponentName;I)Z
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 1069
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1071
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v1

    if-nez v1, :cond_14

    .line 1072
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "No active admin "

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 1075
    :cond_14
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.EXTERNAL_STORAGE_POLICY_CHANGE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1076
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1077
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v2, "notificationCIDMountServiceWhitelist"

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1078
    const/4 v1, 0x1

    return v1
.end method

.method public notifyAddEXCHANGEConfig(Lcom/lge/mdm/config/LGMDMEXCHANGEConfig;I)V
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMEXCHANGEConfig;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4524
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4525
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4526
    return-void

    .line 4528
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4529
    return-void

    .line 4531
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyAddEXCHANGEConfig(Lcom/lge/mdm/config/LGMDMEXCHANGEConfig;I)V

    .line 4532
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyAddEXCHANGEConfig, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4523
    return-void
.end method

.method public notifyAddEmailCertConfig(Lcom/lge/mdm/config/LGMDMEmailCertConfig;I)V
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMEmailCertConfig;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4560
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4561
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4562
    return-void

    .line 4564
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4565
    return-void

    .line 4567
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyAddEmailCertConfig(Lcom/lge/mdm/config/LGMDMEmailCertConfig;I)V

    .line 4568
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyAddEmailCertConfig, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4559
    return-void
.end method

.method public notifyAddPOPIMAPConfig(Lcom/lge/mdm/config/LGMDMPOPIMAPConfig;I)V
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMPOPIMAPConfig;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4488
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4489
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4490
    return-void

    .line 4492
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4493
    return-void

    .line 4495
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyAddPOPIMAPConfig(Lcom/lge/mdm/config/LGMDMPOPIMAPConfig;I)V

    .line 4496
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyAddPOPIMAPConfig, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4487
    return-void
.end method

.method public notifyDeleteEXCHANGEConfig(Ljava/lang/String;I)V
    .registers 6
    .param p1, "accountName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4548
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4549
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4550
    return-void

    .line 4552
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4553
    return-void

    .line 4555
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyDeleteEXCHANGEConfig(Ljava/lang/String;I)V

    .line 4556
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyDeleteEXCHANGEConfig, accountName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4547
    return-void
.end method

.method public notifyDeleteEmailCertConfig(Ljava/lang/String;I)V
    .registers 6
    .param p1, "sEmailCertID"    # Ljava/lang/String;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4572
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4573
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4574
    return-void

    .line 4576
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4577
    return-void

    .line 4579
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyDeleteEmailCertConfig(Ljava/lang/String;I)V

    .line 4580
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyDeleteEmailCertConfig, accountName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4571
    return-void
.end method

.method public notifyDeletePOPIMAPConfig(Ljava/lang/String;II)V
    .registers 7
    .param p1, "accountName"    # Ljava/lang/String;
    .param p2, "accountType"    # I
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4512
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4513
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4514
    return-void

    .line 4516
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4517
    return-void

    .line 4519
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyDeletePOPIMAPConfig(Ljava/lang/String;II)V

    .line 4520
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyDeletePOPIMAPConfig, accountName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", accountType : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4511
    return-void
.end method

.method public notifyModifyEXCHANGEConfig(Lcom/lge/mdm/config/LGMDMEXCHANGEConfig;I)V
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMEXCHANGEConfig;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4536
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4537
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4538
    return-void

    .line 4540
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4541
    return-void

    .line 4543
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyModifyEXCHANGEConfig(Lcom/lge/mdm/config/LGMDMEXCHANGEConfig;I)V

    .line 4544
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyModifyEXCHANGEConfig, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4535
    return-void
.end method

.method public notifyModifyPOPIMAPConfig(Lcom/lge/mdm/config/LGMDMPOPIMAPConfig;I)V
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMPOPIMAPConfig;
    .param p2, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4500
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4501
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 4502
    return-void

    .line 4504
    :cond_d
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_14

    .line 4505
    return-void

    .line 4507
    :cond_14
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMEmailController;->notifyModifyPOPIMAPConfig(Lcom/lge/mdm/config/LGMDMPOPIMAPConfig;I)V

    .line 4508
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "notifyModifyPOPIMAPConfig, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4499
    return-void
.end method

.method public removeActiveAdmin(Landroid/content/ComponentName;I)V
    .registers 20
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 4661
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    move/from16 v0, p2

    invoke-virtual {v14, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4664
    invoke-direct/range {p0 .. p2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->resetManualSyncWhenRoaming(Landroid/content/ComponentName;I)V

    .line 4666
    invoke-direct/range {p0 .. p2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkRemoveATclinetAPIs(Landroid/content/ComponentName;I)V

    .line 4668
    monitor-enter p0

    .line 4669
    :try_start_10
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-virtual {v14, v0, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v3

    .line 4670
    .local v3, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    if-eqz v3, :cond_149

    .line 4671
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-virtual {v14, v0, v1}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->resetBluetoothProfile(Landroid/content/ComponentName;I)V

    .line 4672
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getInstance()Lcom/lge/mdm/controller/LGMDMMultiUserController;

    move-result-object v14

    .line 4673
    const/4 v15, 0x0

    .line 4672
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z

    move-result v8

    .line 4674
    .local v8, "oldAllowMultiuserPolicy":Z
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMWifiController;->getInstance()Lcom/lge/mdm/controller/LGMDMWifiController;

    move-result-object v14

    .line 4675
    const/4 v15, 0x0

    .line 4674
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z

    move-result v9

    .line 4676
    .local v9, "oldDLNAPolicy":Z
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMIRController;->getInstance()Lcom/lge/mdm/controller/LGMDMIRController;

    move-result-object v14

    .line 4677
    const/4 v15, 0x0

    .line 4676
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMIRController;->getAllowInfraredPort(Landroid/content/ComponentName;I)Z

    move-result v11

    .line 4678
    .local v11, "oldIRPolicy":Z
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    .line 4679
    const/4 v15, 0x0

    .line 4678
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getEnforceMuteDuringCall(Landroid/content/ComponentName;I)Z

    move-result v10

    .line 4680
    .local v10, "oldEnforceMuteDuringCall":Z
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMUsbController;->getInstance()Lcom/lge/mdm/controller/LGMDMUsbController;

    move-result-object v14

    .line 4681
    const/4 v15, 0x0

    .line 4680
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMUsbController;->getEnforceUsbModeAsNone(Landroid/content/ComponentName;I)Z

    move-result v13

    .line 4682
    .local v13, "oldUsbEnforcedPolicy":Z
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMessageController;->getInstance()Lcom/lge/mdm/controller/LGMDMMessageController;

    move-result-object v14

    .line 4683
    const/4 v15, 0x0

    .line 4682
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMMessageController;->getAllowReceivingSmsMms(Landroid/content/ComponentName;I)Z

    move-result v12

    .line 4685
    .local v12, "oldSmsReceivingPolicy":Z
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p2

    invoke-direct {v0, v1, v3, v2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->beforeRemoveActiveAdmin(Landroid/content/ComponentName;Lcom/lge/mdm/admin/LGMDMadminlist;I)V

    .line 4686
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-virtual {v14, v0, v3, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->removeActiveAdmin(Landroid/content/ComponentName;Lcom/lge/mdm/admin/LGMDMadminlist;I)Z

    move-result v14

    if-eqz v14, :cond_149

    .line 4687
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p2

    invoke-direct {v0, v1, v3, v2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->afterRemoveActiveAdmin(Landroid/content/ComponentName;Lcom/lge/mdm/admin/LGMDMadminlist;I)V

    .line 4689
    const-string/jumbo v14, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v15, "removeActiveAdmin"

    move-object/from16 v0, p1

    invoke-static {v14, v15, v0}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 4692
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    .line 4693
    const/4 v15, 0x0

    .line 4692
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 4694
    .local v4, "newAllowMultiuserPolicy":Z
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v14, v8, v4}, Lcom/lge/mdm/controller/LGMDMGeneralController;->updateUserSettingsIfNeed(ZZ)V

    .line 4698
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v15, 0x0

    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z

    move-result v5

    .line 4699
    .local v5, "newDLNAPolicy":Z
    if-eq v9, v5, :cond_c2

    .line 4700
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    move/from16 v0, p2

    invoke-virtual {v14, v5, v0}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateDLNADiscovery(ZI)V

    .line 4703
    :cond_c2
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMessageController;->getInstance()Lcom/lge/mdm/controller/LGMDMMessageController;

    move-result-object v14

    .line 4704
    const/4 v15, 0x0

    .line 4703
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMMessageController;->getAllowReceivingSmsMms(Landroid/content/ComponentName;I)Z

    move-result v7

    .line 4705
    .local v7, "newSmsReceivingPolicy":Z
    if-eq v12, v7, :cond_d7

    .line 4706
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMMessageController;->getInstance()Lcom/lge/mdm/controller/LGMDMMessageController;

    move-result-object v14

    const/4 v15, 0x1

    invoke-virtual {v14, v15}, Lcom/lge/mdm/controller/LGMDMMessageController;->setSmsReceptionBlocking(Z)V

    .line 4709
    :cond_d7
    if-nez v11, :cond_ee

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMIRController;->getInstance()Lcom/lge/mdm/controller/LGMDMIRController;

    move-result-object v14

    .line 4710
    const/4 v15, 0x0

    .line 4709
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMIRController;->getAllowInfraredPort(Landroid/content/ComponentName;I)Z

    move-result v14

    if-eqz v14, :cond_ee

    .line 4711
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIRController:Lcom/lge/mdm/controller/LGMDMIRController;

    const/4 v15, 0x1

    invoke-virtual {v14, v15}, Lcom/lge/mdm/controller/LGMDMIRController;->notifyIRPolicy(Z)V

    .line 4714
    :cond_ee
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    .line 4715
    const/4 v15, 0x0

    .line 4714
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->getEnforceMuteDuringCall(Landroid/content/ComponentName;I)Z

    move-result v6

    .line 4716
    .local v6, "newEnforceMuteDuringCall":Z
    if-eqz v10, :cond_105

    if-nez v6, :cond_105

    .line 4717
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    const/4 v15, 0x0

    invoke-virtual {v14, v15}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setMicrophoneMute(Z)V

    .line 4720
    :cond_105
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    const/4 v15, 0x0

    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getEnforceAirplaneMode(Landroid/content/ComponentName;I)Z

    move-result v14

    if-nez v14, :cond_12d

    .line 4721
    iget-boolean v14, v3, Lcom/lge/mdm/admin/LGMDMadminlist;->enforceAirplaneMode:Z

    .line 4720
    if-eqz v14, :cond_12d

    .line 4722
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    const/4 v14, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v14, v1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowAirplaneModeOn(Landroid/content/ComponentName;I)Z

    move-result v16

    .line 4723
    iget-boolean v14, v3, Lcom/lge/mdm/admin/LGMDMadminlist;->prestateAirplaneMode:Z

    if-eqz v14, :cond_14b

    const/4 v14, 0x1

    .line 4722
    :goto_128
    move/from16 v0, v16

    invoke-virtual {v15, v0, v14}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->changeAirplaneMode(ZI)V

    .line 4726
    :cond_12d
    if-eqz v13, :cond_149

    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMUsbController;->getInstance()Lcom/lge/mdm/controller/LGMDMUsbController;

    move-result-object v14

    .line 4727
    const/4 v15, 0x0

    .line 4726
    move/from16 v0, p2

    invoke-virtual {v14, v15, v0}, Lcom/lge/mdm/controller/LGMDMUsbController;->getEnforceUsbModeAsNone(Landroid/content/ComponentName;I)Z

    move-result v14

    if-nez v14, :cond_149

    .line 4728
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    iget-boolean v15, v3, Lcom/lge/mdm/admin/LGMDMadminlist;->preUsbAdbEnabled:Z

    invoke-virtual {v14, v15}, Lcom/lge/mdm/controller/LGMDMUsbController;->setUsbToChargeMode(Z)V
    :try_end_149
    .catchall {:try_start_10 .. :try_end_149} :catchall_14d

    .end local v4    # "newAllowMultiuserPolicy":Z
    .end local v5    # "newDLNAPolicy":Z
    .end local v6    # "newEnforceMuteDuringCall":Z
    .end local v7    # "newSmsReceivingPolicy":Z
    .end local v8    # "oldAllowMultiuserPolicy":Z
    .end local v9    # "oldDLNAPolicy":Z
    .end local v10    # "oldEnforceMuteDuringCall":Z
    .end local v11    # "oldIRPolicy":Z
    .end local v12    # "oldSmsReceivingPolicy":Z
    .end local v13    # "oldUsbEnforcedPolicy":Z
    :cond_149
    monitor-exit p0

    .line 4660
    return-void

    .line 4723
    .restart local v4    # "newAllowMultiuserPolicy":Z
    .restart local v5    # "newDLNAPolicy":Z
    .restart local v6    # "newEnforceMuteDuringCall":Z
    .restart local v7    # "newSmsReceivingPolicy":Z
    .restart local v8    # "oldAllowMultiuserPolicy":Z
    .restart local v9    # "oldDLNAPolicy":Z
    .restart local v10    # "oldEnforceMuteDuringCall":Z
    .restart local v11    # "oldIRPolicy":Z
    .restart local v12    # "oldSmsReceivingPolicy":Z
    .restart local v13    # "oldUsbEnforcedPolicy":Z
    :cond_14b
    const/4 v14, 0x0

    goto :goto_128

    .line 4668
    .end local v3    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v4    # "newAllowMultiuserPolicy":Z
    .end local v5    # "newDLNAPolicy":Z
    .end local v6    # "newEnforceMuteDuringCall":Z
    .end local v7    # "newSmsReceivingPolicy":Z
    .end local v8    # "oldAllowMultiuserPolicy":Z
    .end local v9    # "oldDLNAPolicy":Z
    .end local v10    # "oldEnforceMuteDuringCall":Z
    .end local v11    # "oldIRPolicy":Z
    .end local v12    # "oldSmsReceivingPolicy":Z
    .end local v13    # "oldUsbEnforcedPolicy":Z
    :catchall_14d
    move-exception v14

    monitor-exit p0

    throw v14
.end method

.method public removeCCmode(Landroid/content/ComponentName;I)V
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 8215
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCCModeController;->removeCCmode(Landroid/content/ComponentName;I)V

    .line 8216
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "removeCCmode"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 8214
    return-void
.end method

.method public removeNetwork(II)Z
    .registers 6
    .param p1, "netId"    # I
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 693
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 694
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 695
    return v1

    .line 697
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 698
    return v1

    .line 700
    :cond_15
    if-eqz p2, :cond_18

    .line 701
    return v1

    .line 703
    :cond_18
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "removeNetwork, netId : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 704
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->removeNetwork(II)Z

    move-result v0

    return v0
.end method

.method public reportLockdownApps(Ljava/lang/String;I)V
    .registers 9
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 4023
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4024
    const/4 v2, 0x0

    .line 4025
    .local v2, "retValue":Z
    const/4 v1, 0x0

    .line 4027
    .local v1, "lastwho":Landroid/content/ComponentName;
    monitor-enter p0

    .line 4028
    const/4 v0, 0x0

    .line 4029
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_start_9
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getLastLockdownAppsCompnentName(I)Landroid/content/ComponentName;
    :try_end_e
    .catchall {:try_start_9 .. :try_end_e} :catchall_78

    move-result-object v1

    .line 4030
    .local v1, "lastwho":Landroid/content/ComponentName;
    if-nez v1, :cond_13

    monitor-exit p0

    .line 4031
    return-void

    .line 4033
    :cond_13
    :try_start_13
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 4034
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    if-eqz v0, :cond_55

    .line 4035
    iget v3, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationMaxCrashNum:I

    iget v4, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationReportCrashNum:I

    if-lt v3, v4, :cond_55

    .line 4036
    iget v3, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationReportCrashNum:I

    add-int/lit8 v3, v3, 0x1

    iput v3, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationReportCrashNum:I

    .line 4037
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "[reportLockdownApps] crash count  = "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 4038
    iget v5, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationReportCrashNum:I

    .line 4037
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    .line 4038
    const-string/jumbo v5, " packageName = "

    .line 4037
    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4040
    iget v3, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationMaxCrashNum:I

    iget v4, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationReportCrashNum:I
    :try_end_52
    .catchall {:try_start_13 .. :try_end_52} :catchall_78

    if-ne v3, v4, :cond_55

    .line 4041
    const/4 v2, 0x1

    :cond_55
    monitor-exit p0

    .line 4046
    if-eqz v2, :cond_77

    .line 4047
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v3, v1, p1, p2}, Lcom/lge/mdm/controller/LGMDMApplicationController;->reportLockdownApps(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 4048
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "reportLockDownApps, packageName : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4022
    :cond_77
    return-void

    .line 4027
    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v1    # "lastwho":Landroid/content/ComponentName;
    :catchall_78
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public resetCredentials(Landroid/content/ComponentName;I)V
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 5040
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5041
    monitor-enter p0

    .line 5042
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5043
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_33

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 5044
    return-void

    .line 5046
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_33

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 5047
    return-void

    .line 5049
    :cond_19
    if-eqz p2, :cond_1d

    monitor-exit p0

    .line 5050
    return-void

    .line 5052
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5053
    const/4 v1, 0x6

    .line 5052
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5054
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "resetCredentials"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5055
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCertificateController;->resetCredentials(Landroid/content/ComponentName;I)Z
    :try_end_31
    .catchall {:try_start_1d .. :try_end_31} :catchall_33

    monitor-exit p0

    .line 5039
    return-void

    .line 5041
    :catchall_33
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public resetDeveloperOptions(Landroid/content/ComponentName;I)V
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 7864
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7865
    monitor-enter p0

    .line 7866
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7867
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_34

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 7868
    return-void

    .line 7870
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_34

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 7871
    return-void

    .line 7873
    :cond_19
    if-eqz p2, :cond_1d

    monitor-exit p0

    .line 7874
    return-void

    .line 7876
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7877
    const/16 v1, 0x2e

    .line 7876
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7878
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->resetDeveloperOptions(Landroid/content/ComponentName;I)V

    .line 7879
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "resetDeveloperOption"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_32
    .catchall {:try_start_1d .. :try_end_32} :catchall_34

    monitor-exit p0

    .line 7863
    return-void

    .line 7865
    :catchall_34
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public saveConfiguration(I)Z
    .registers 4
    .param p1, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 744
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 745
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 746
    return v1

    .line 748
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 749
    return v1

    .line 751
    :cond_15
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "saveConfiguration"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 752
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMWifiController;->saveConfiguration(I)Z

    move-result v0

    return v0
.end method

.method public sendBroadcastNotifyProcessKillEvent(Ljava/lang/String;I)V
    .registers 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 4189
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4191
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v1

    if-nez v1, :cond_14

    .line 4192
    new-instance v1, Ljava/lang/SecurityException;

    const-string/jumbo v2, "No active admin "

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 4195
    :cond_14
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "[sendBroadcastNotifyProcessKillEvent] packageName = "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4197
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.NOTIFY_SPECIFIC_PROCESS_KILLED"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4198
    .local v0, "broadcastIntent":Landroid/content/Intent;
    const-string/jumbo v1, "PACKAGE_NAME"

    invoke-virtual {v0, v1, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 4199
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 4200
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "sendBroadcastNotifyProcessKillEvent, packageName : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4188
    return-void
.end method

.method public sendToastMessageId(II)V
    .registers 5
    .param p1, "resid"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 4898
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4900
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1, p1}, Landroid/content/Context;->getString(I)Ljava/lang/String;

    move-result-object v0

    .line 4901
    .local v0, "message":Ljava/lang/String;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0, p2}, Lcom/lge/mdm/controller/LGMDMHandler;->sendToastMessage(Ljava/lang/String;I)V

    .line 4897
    return-void
.end method

.method public sendToastMessageId2(III)V
    .registers 9
    .param p1, "resid"    # I
    .param p2, "resid2"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 4912
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4914
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v2

    invoke-virtual {v2, p2}, Landroid/content/res/Resources;->getString(I)Ljava/lang/String;

    move-result-object v1

    .line 4915
    .local v1, "str1":Ljava/lang/String;
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object v1, v3, v4

    invoke-virtual {v2, p1, v3}, Landroid/content/Context;->getString(I[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    .line 4916
    .local v0, "message":Ljava/lang/String;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v2

    invoke-virtual {v2, v0, p3}, Lcom/lge/mdm/controller/LGMDMHandler;->sendToastMessage(Ljava/lang/String;I)V

    .line 4911
    return-void
.end method

.method public setActiveAdmin(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "refreshing"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 4635
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setActiveAdmin who:"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {p1}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", refreshing: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4636
    const-string/jumbo v2, ", userHandle: "

    .line 4635
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 4637
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4647
    monitor-enter p0

    .line 4648
    :try_start_3a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->setActiveAdmin(Landroid/content/ComponentName;ZI)V

    .line 4649
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setActiveAdmin : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_59
    .catchall {:try_start_3a .. :try_end_59} :catchall_5b

    monitor-exit p0

    .line 4634
    return-void

    .line 4647
    :catchall_5b
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowAirplaneModeOn(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v6, 0x0

    .line 5184
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5185
    const/4 v1, 0x0

    .line 5186
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 5187
    :try_start_8
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getAllowAirplaneModeOn(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 5190
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5191
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_78

    move-result v4

    if-nez v4, :cond_1a

    monitor-exit p0

    .line 5192
    return-void

    .line 5194
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_78

    move-result v4

    if-nez v4, :cond_22

    monitor-exit p0

    .line 5195
    return-void

    .line 5197
    :cond_22
    :try_start_22
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5198
    const/16 v5, 0x19

    .line 5197
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5199
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->setAllowAirplaneModeOn(Landroid/content/ComponentName;ZI)V

    .line 5200
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5202
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getAllowAirplaneModeOn(Landroid/content/ComponentName;I)Z
    :try_end_3c
    .catchall {:try_start_22 .. :try_end_3c} :catchall_78

    move-result v2

    .line 5204
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_76

    const/4 v1, 0x1

    :goto_40
    monitor-exit p0

    .line 5206
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    .line 5207
    invoke-virtual {p0, v6, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getEnforceAirplaneMode(Landroid/content/ComponentName;I)Z

    move-result v5

    .line 5206
    invoke-virtual {v4, p2, v5}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->changeAirplaneModeSystemSetting(ZZ)V

    .line 5209
    if-eqz v1, :cond_75

    .line 5211
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.AIRPLANE_MODE_ON_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5212
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 5213
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowAirplaneModeOn : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5183
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_75
    return-void

    .line 5204
    :cond_76
    const/4 v1, 0x0

    goto :goto_40

    .line 5186
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_78
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowAndroidBeam(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 5130
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5131
    const/4 v1, 0x0

    .line 5132
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 5133
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMNfcController;->getAllowAndroidBeam(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 5135
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5136
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6e

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 5137
    return-void

    .line 5139
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6e

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 5140
    return-void

    .line 5142
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5143
    const/16 v5, 0x18

    .line 5142
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5144
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNfcController;->setAllowAndroidBeam(Landroid/content/ComponentName;ZI)V

    .line 5145
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5147
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMNfcController;->getAllowAndroidBeam(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_6e

    move-result v2

    .line 5148
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6c

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 5151
    if-eqz v1, :cond_6b

    .line 5153
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.NFC_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5154
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 5155
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowAndroidBeam : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5129
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6b
    return-void

    .line 5148
    :cond_6c
    const/4 v1, 0x0

    goto :goto_3f

    .line 5132
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6e
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowAutoRestore(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6595
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6596
    const/4 v0, 0x0

    .line 6597
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    const/4 v2, 0x0

    .line 6598
    .local v2, "needChangeIntent":Z
    const/4 v4, 0x0

    .line 6599
    .local v4, "oldGlobalPolicy":Z
    const/4 v3, 0x0

    .line 6600
    .local v3, "newGlobalPolicy":Z
    monitor-enter p0

    .line 6601
    :try_start_a
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowAutoRestore(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 6602
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6603
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6604
    const/16 v6, 0x25

    .line 6603
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6605
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_1e
    .catchall {:try_start_a .. :try_end_1e} :catchall_7e

    move-result v5

    if-nez v5, :cond_23

    monitor-exit p0

    .line 6606
    return-void

    .line 6608
    :cond_23
    :try_start_23
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_7e

    move-result v5

    if-nez v5, :cond_2b

    monitor-exit p0

    .line 6609
    return-void

    .line 6611
    :cond_2b
    :try_start_2b
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAllowAutoRestore(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 6612
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6614
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowAutoRestore(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_2b .. :try_end_3f} :catchall_7e

    move-result v3

    .line 6615
    .local v3, "newGlobalPolicy":Z
    if-eq v4, v3, :cond_7c

    const/4 v2, 0x1

    :goto_43
    monitor-exit p0

    .line 6618
    if-eqz v0, :cond_50

    .line 6619
    iget-boolean v5, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->allowAutoRestore:Z

    if-eqz v5, :cond_81

    .line 6620
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v0, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAutoRestore(Lcom/lge/mdm/admin/LGMDMadminlist;ZI)V

    .line 6626
    :cond_50
    :goto_50
    if-eqz v2, :cond_7b

    .line 6628
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.AUTO_RESTORE_POLICY_CHANGE"

    invoke-direct {v1, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6629
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6630
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowAutoRestore : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6594
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_7b
    return-void

    .line 6615
    :cond_7c
    const/4 v2, 0x0

    goto :goto_43

    .line 6600
    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v4    # "oldGlobalPolicy":Z
    .local v3, "newGlobalPolicy":Z
    :catchall_7e
    move-exception v5

    monitor-exit p0

    throw v5

    .line 6622
    .restart local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .local v3, "newGlobalPolicy":Z
    .restart local v4    # "oldGlobalPolicy":Z
    :cond_81
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x1

    invoke-virtual {v5, v0, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAutoRestore(Lcom/lge/mdm/admin/LGMDMadminlist;ZI)V

    goto :goto_50
.end method

.method public setAllowAutoSync(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 6687
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6689
    const/4 v2, 0x0

    .line 6690
    .local v2, "needChangeIntent":Z
    const/4 v0, -0x1

    .line 6692
    .local v0, "autoSyncPolicyChange":I
    monitor-enter p0

    .line 6693
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->getAllowAutoSync(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 6695
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6696
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_7e

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 6697
    return-void

    .line 6699
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_7e

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 6700
    return-void

    .line 6703
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6704
    const/16 v6, 0xb

    .line 6703
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6706
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setAllowAutoSync(Landroid/content/ComponentName;ZI)I

    move-result v0

    .line 6707
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_application_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6709
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->getAllowAutoSync(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_7e

    move-result v3

    .line 6710
    .local v3, "newGlobalPolicy":Z
    if-eq v4, v3, :cond_7c

    const/4 v2, 0x1

    :goto_41
    monitor-exit p0

    .line 6713
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v5, v0, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setMasterSyncAutomatically(II)V

    .line 6715
    if-eqz v2, :cond_7b

    .line 6717
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.MANUAL_SYNC_POLICY_CHANGE"

    invoke-direct {v1, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6718
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v1, p3}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcastAsUser(Landroid/content/Intent;I)V

    .line 6720
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowAutoSync "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6721
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v6, "LGMDM sends an intent to Settings to update Auto-sync data."

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 6686
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_7b
    return-void

    .line 6710
    :cond_7c
    const/4 v2, 0x0

    goto :goto_41

    .line 6692
    .end local v3    # "newGlobalPolicy":Z
    .end local v4    # "oldGlobalPolicy":Z
    :catchall_7e
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowBackgroundProcessLimit(Landroid/content/ComponentName;ZI)V
    .registers 15
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6280
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v8, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6281
    const/4 v7, -0x1

    .line 6282
    .local v7, "standard_limit":I
    const/4 v4, 0x0

    .line 6283
    .local v4, "needChangeIntent":Z
    monitor-enter p0

    .line 6284
    :try_start_8
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v9, 0x0

    invoke-virtual {v8, v9, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowBackgroundProcessLimit(Landroid/content/ComponentName;I)Z

    move-result v6

    .line 6287
    .local v6, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6288
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_7f

    move-result v8

    if-nez v8, :cond_1a

    monitor-exit p0

    .line 6289
    return-void

    .line 6291
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_7f

    move-result v8

    if-nez v8, :cond_22

    monitor-exit p0

    .line 6292
    return-void

    .line 6294
    :cond_22
    :try_start_22
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6295
    const/4 v9, 0x2

    .line 6294
    invoke-virtual {v8, p1, v9}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6296
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v8, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowBackgroundProcessLimit(Landroid/content/ComponentName;ZI)V

    .line 6297
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v9, "lgmdm_general_policies.xml"

    invoke-virtual {v8, v9, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6299
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v9, 0x0

    invoke-virtual {v8, v9, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowBackgroundProcessLimit(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_22 .. :try_end_3b} :catchall_7f

    move-result v5

    .line 6301
    .local v5, "newGlobalPolicy":Z
    if-eq v6, v5, :cond_7d

    const/4 v4, 0x1

    :goto_3f
    monitor-exit p0

    .line 6304
    if-nez p2, :cond_51

    .line 6305
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6307
    .local v2, "identity":J
    :try_start_46
    invoke-static {}, Landroid/app/ActivityManagerNative;->getDefault()Landroid/app/IActivityManager;

    move-result-object v8

    const/4 v9, -0x1

    invoke-interface {v8, v9}, Landroid/app/IActivityManager;->setProcessLimit(I)V
    :try_end_4e
    .catch Landroid/os/RemoteException; {:try_start_46 .. :try_end_4e} :catch_82
    .catchall {:try_start_46 .. :try_end_4e} :catchall_90

    .line 6311
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6315
    .end local v2    # "identity":J
    :cond_51
    :goto_51
    if-eqz v4, :cond_7c

    .line 6317
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v8, "com.lge.mdm.intent.action.ACTION_PROCESS_LIMIT_POLICY_CHANGE"

    invoke-direct {v1, v8}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6318
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v8

    invoke-virtual {v8, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6319
    const-string/jumbo v8, "LGMDMDevicePolicyManagerService"

    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v10, "setAllowBackgroundProcessLimit : "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-static {v8, v9, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6279
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_7c
    return-void

    .line 6301
    :cond_7d
    const/4 v4, 0x0

    goto :goto_3f

    .line 6283
    .end local v5    # "newGlobalPolicy":Z
    .end local v6    # "oldGlobalPolicy":Z
    :catchall_7f
    move-exception v8

    monitor-exit p0

    throw v8

    .line 6308
    .restart local v2    # "identity":J
    .restart local v5    # "newGlobalPolicy":Z
    .restart local v6    # "oldGlobalPolicy":Z
    :catch_82
    move-exception v0

    .line 6309
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_83
    const-string/jumbo v8, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v9, "Failed talking with LGMDM controller"

    invoke-static {v8, v9, v0}, Lcom/lge/mdm/util/MDMLog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    :try_end_8c
    .catchall {:try_start_83 .. :try_end_8c} :catchall_90

    .line 6311
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_51

    .line 6310
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_90
    move-exception v8

    .line 6311
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6310
    throw v8
.end method

.method public setAllowBluetooth(Landroid/content/ComponentName;II)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 770
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 771
    const/4 v1, 0x0

    .line 772
    .local v1, "needChangeIntent":Z
    const/4 v2, 0x0

    .line 773
    .local v2, "needToBTAudioOnly":Z
    monitor-enter p0

    .line 774
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetooth(Landroid/content/ComponentName;I)I

    move-result v4

    .line 776
    .local v4, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 777
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_81

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 778
    return-void

    .line 780
    :cond_1a
    :try_start_1a
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 781
    const/16 v6, 0xf

    .line 780
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 782
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setAllowBluetooth(Landroid/content/ComponentName;II)Z

    move-result v2

    .line 783
    .local v2, "needToBTAudioOnly":Z
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 785
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetooth(Landroid/content/ComponentName;I)I
    :try_end_35
    .catchall {:try_start_1a .. :try_end_35} :catchall_81

    move-result v3

    .line 786
    .local v3, "newGlobalPolicy":I
    if-eq v4, v3, :cond_7f

    const/4 v1, 0x1

    :goto_39
    monitor-exit p0

    .line 789
    if-eqz v2, :cond_41

    .line 790
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v5}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setBluetoothAudioOnly()V

    .line 793
    :cond_41
    if-eqz v1, :cond_7e

    .line 795
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.BLUETOOTH_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 796
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 797
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowBluetooth("

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, ") : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    .line 798
    const-string/jumbo v7, " (0:DISALLOW, 1:ALLOW_AUDIOONLY, 2:ALLOW)"

    .line 797
    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 769
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_7e
    return-void

    .line 786
    :cond_7f
    const/4 v1, 0x0

    goto :goto_39

    .line 773
    .end local v2    # "needToBTAudioOnly":Z
    .end local v3    # "newGlobalPolicy":I
    .end local v4    # "oldGlobalPolicy":I
    :catchall_81
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowBluetoothPairing(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "bAllow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 892
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 893
    monitor-enter p0

    .line 894
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 895
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 896
    return-void

    .line 898
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 899
    return-void

    .line 901
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 902
    const/16 v1, 0xf

    .line 901
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 903
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setAllowBluetoothPairing(Landroid/content/ComponentName;ZI)V

    .line 904
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 905
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowBluetoothPairing : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 891
    return-void

    .line 893
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowBluetoothProfiles(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "nBluetoothProfile"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 803
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 804
    monitor-enter p0

    .line 805
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 806
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_41

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 807
    return-void

    .line 809
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_41

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 810
    return-void

    .line 812
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 813
    const/16 v1, 0xf

    .line 812
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 814
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setAllowBluetoothProfiles(Landroid/content/ComponentName;II)V

    .line 815
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowBluetoothProfiles :"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3f
    .catchall {:try_start_19 .. :try_end_3f} :catchall_41

    monitor-exit p0

    .line 802
    return-void

    .line 804
    :catchall_41
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowBluetoothTethering(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1672
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1673
    const/4 v2, 0x1

    .line 1674
    .local v2, "oldGlobalPolicy":Z
    const/4 v1, 0x1

    .line 1675
    .local v1, "newGlobalPolicy":Z
    monitor-enter p0

    .line 1676
    :try_start_8
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v4, 0x0

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowBluetoothTethering(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 1679
    .local v2, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1680
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_71

    move-result v3

    if-nez v3, :cond_1a

    monitor-exit p0

    .line 1681
    return-void

    .line 1683
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_71

    move-result v3

    if-nez v3, :cond_22

    monitor-exit p0

    .line 1684
    return-void

    .line 1686
    :cond_22
    :try_start_22
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1687
    const/16 v4, 0x10

    .line 1686
    invoke-virtual {v3, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1688
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setAllowBluetoothTethering(Landroid/content/ComponentName;ZI)V

    .line 1689
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_hardware_policies.xml"

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1691
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v4, 0x0

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowBluetoothTethering(Landroid/content/ComponentName;I)Z
    :try_end_3c
    .catchall {:try_start_22 .. :try_end_3c} :catchall_71

    move-result v1

    .local v1, "newGlobalPolicy":Z
    monitor-exit p0

    .line 1694
    if-nez v1, :cond_45

    .line 1695
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setBluetoothTetheringDisable()V

    .line 1697
    :cond_45
    if-eq v2, v1, :cond_70

    .line 1699
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v3, "com.lge.mdm.intent.action.TETHER_POLICY_CHANGE"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1700
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v3

    invoke-virtual {v3, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1701
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowBluetoothTethering : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1671
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_70
    return-void

    .line 1675
    .end local v2    # "oldGlobalPolicy":Z
    .local v1, "newGlobalPolicy":Z
    :catchall_71
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public setAllowBluetoothVisible(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 5693
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5694
    const/4 v1, 0x0

    .line 5695
    .local v1, "needChangeIntent":Z
    const/4 v3, 0x0

    .line 5696
    .local v3, "oldGlobalPolicy":Z
    const/4 v2, 0x0

    .line 5697
    .local v2, "newGlobalPolicy":Z
    monitor-enter p0

    .line 5698
    :try_start_9
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetoothVisible(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 5700
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5701
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_16
    .catchall {:try_start_9 .. :try_end_16} :catchall_79

    move-result v4

    if-nez v4, :cond_1b

    monitor-exit p0

    .line 5702
    return-void

    .line 5704
    :cond_1b
    :try_start_1b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1e
    .catchall {:try_start_1b .. :try_end_1e} :catchall_79

    move-result v4

    if-nez v4, :cond_23

    monitor-exit p0

    .line 5705
    return-void

    .line 5707
    :cond_23
    :try_start_23
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5708
    const/16 v5, 0xf

    .line 5707
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5709
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setAllowBluetoothVisible(Landroid/content/ComponentName;ZI)V

    .line 5710
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5712
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getAllowBluetoothVisible(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_23 .. :try_end_3d} :catchall_79

    move-result v2

    .line 5714
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_77

    const/4 v1, 0x1

    :goto_41
    monitor-exit p0

    .line 5717
    if-nez v2, :cond_4b

    if-eqz v1, :cond_4b

    .line 5718
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setScanMode()V

    .line 5721
    :cond_4b
    if-eqz v1, :cond_76

    .line 5723
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.BLUETOOTH_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5724
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 5725
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowBluetoothVisible : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5692
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_76
    return-void

    .line 5714
    :cond_77
    const/4 v1, 0x0

    goto :goto_41

    .line 5697
    .end local v3    # "oldGlobalPolicy":Z
    .local v2, "newGlobalPolicy":Z
    :catchall_79
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowBluetoothWithMACWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 919
    .local p3, "wMaclist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 920
    monitor-enter p0

    .line 921
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 922
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 923
    return-void

    .line 925
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 926
    return-void

    .line 928
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 929
    const/16 v1, 0xf

    .line 928
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 930
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setAllowBluetoothWithMACWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 933
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 934
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowBluetoothWithMACWhitelist : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_19 .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 918
    return-void

    .line 920
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowBrowser(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2712
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2713
    monitor-enter p0

    .line 2714
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2715
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2716
    return-void

    .line 2718
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2719
    const/4 v1, 0x4

    .line 2718
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2720
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBrowserController:Lcom/lge/mdm/controller/LGMDMBrowserController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBrowserController;->setAllowBrowser(Landroid/content/ComponentName;ZI)V

    .line 2721
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_24
    .catchall {:try_start_11 .. :try_end_24} :catchall_49

    monitor-exit p0

    .line 2723
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getInstance()Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-result-object v0

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->updateWatcherAndKeeper(I)V

    .line 2724
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowBrowser : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2711
    return-void

    .line 2713
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowBrowserProxySetup(Landroid/content/ComponentName;ZLjava/lang/String;II)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "ip"    # Ljava/lang/String;
    .param p4, "port"    # I
    .param p5, "userHandle"    # I

    .prologue
    .line 5810
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5811
    monitor-enter p0

    .line 5812
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5813
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_63

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 5814
    return-void

    .line 5816
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_63

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 5817
    return-void

    .line 5819
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5820
    const/4 v1, 0x4

    .line 5819
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5821
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowBrowserProxySetup(Landroid/content/ComponentName;ZLjava/lang/String;II)V

    .line 5822
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5823
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowBrowserProxySetup : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", ip : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", port : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_61
    .catchall {:try_start_19 .. :try_end_61} :catchall_63

    monitor-exit p0

    .line 5809
    return-void

    .line 5811
    :catchall_63
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowCIDWithWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 13
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 1021
    .local p3, "whitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1022
    const/4 v1, 0x0

    .line 1023
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 1024
    .local v4, "value":I
    monitor-enter p0

    .line 1025
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 1026
    const/4 v6, 0x0

    .line 1025
    invoke-virtual {v5, v6, p4}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowCIDWithWhitelist(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1028
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1029
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_80

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 1030
    return-void

    .line 1032
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_80

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 1033
    return-void

    .line 1035
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1036
    const/16 v6, 0x11

    .line 1035
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1037
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v5, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->setAllowCIDWithWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)I

    move-result v4

    .line 1039
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1041
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 1042
    const/4 v6, 0x0

    .line 1041
    invoke-virtual {v5, v6, p4}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowCIDWithWhitelist(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_80

    move-result v2

    .line 1043
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_7e

    const/4 v1, 0x1

    :goto_41
    monitor-exit p0

    .line 1045
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v5, v4, p4}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->checkCID(II)V

    .line 1046
    if-eqz v1, :cond_7d

    .line 1048
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.EXTERNAL_STORAGE_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1049
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1050
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowCIDWithWhitelist : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, ", list : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1020
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_7d
    return-void

    .line 1043
    :cond_7e
    const/4 v1, 0x0

    goto :goto_41

    .line 1024
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_80
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowCallInRoaming(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6122
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6123
    monitor-enter p0

    .line 6124
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6125
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6126
    return-void

    .line 6128
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6129
    return-void

    .line 6131
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6132
    const/16 v1, 0x23

    .line 6131
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6133
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowCallInRoaming(Landroid/content/ComponentName;ZI)V

    .line 6134
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6135
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowCallInRoaming : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6121
    return-void

    .line 6123
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowCameraWithWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 1777
    .local p3, "whitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1778
    monitor-enter p0

    .line 1779
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1780
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_5d

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 1781
    return-void

    .line 1783
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_5d

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 1784
    return-void

    .line 1786
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1787
    const/16 v1, 0x8

    .line 1786
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1788
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMCameraController;->setAllowCameraWithWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 1789
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_2d
    .catchall {:try_start_19 .. :try_end_2d} :catchall_5d

    monitor-exit p0

    .line 1791
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getInstance()Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-result-object v0

    invoke-virtual {v0, p4}, Lcom/lge/mdm/controller/LGMDMApplicationController;->updateWatcherAndKeeper(I)V

    .line 1792
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowCameraWithWhitelist : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1776
    return-void

    .line 1778
    :catchall_5d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowChangeDateAndTime(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7337
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7338
    const/4 v1, 0x0

    .line 7339
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 7340
    .local v4, "value":I
    monitor-enter p0

    .line 7341
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, p1, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getAllowChangeDateAndTime(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 7344
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7345
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_8 .. :try_end_14} :catchall_73

    move-result v5

    if-nez v5, :cond_19

    monitor-exit p0

    .line 7346
    return-void

    .line 7348
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_73

    move-result v5

    if-nez v5, :cond_21

    monitor-exit p0

    .line 7349
    return-void

    .line 7351
    :cond_21
    :try_start_21
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7352
    const/16 v6, 0x2a

    .line 7351
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7353
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->setAllowChangeDateAndTime(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 7354
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7356
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, p1, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getAllowChangeDateAndTime(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_73

    move-result v2

    .line 7358
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_71

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 7361
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->changeDateAndTime(II)V

    .line 7362
    if-eqz v1, :cond_70

    .line 7364
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.ACTION_SYSTEM_TIME_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7365
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7366
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowChangeDateAndTime : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7336
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_70
    return-void

    .line 7358
    :cond_71
    const/4 v1, 0x0

    goto :goto_3f

    .line 7340
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_73
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowChangeTimezone(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7381
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7382
    const/4 v1, 0x0

    .line 7383
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 7384
    .local v4, "value":I
    monitor-enter p0

    .line 7385
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, p1, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getAllowChangeTimezone(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 7388
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7389
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_8 .. :try_end_14} :catchall_73

    move-result v5

    if-nez v5, :cond_19

    monitor-exit p0

    .line 7390
    return-void

    .line 7392
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_73

    move-result v5

    if-nez v5, :cond_21

    monitor-exit p0

    .line 7393
    return-void

    .line 7395
    :cond_21
    :try_start_21
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7396
    const/16 v6, 0x2a

    .line 7395
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7397
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->setAllowChangeTimezone(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 7398
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7400
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, p1, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->getAllowChangeTimezone(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_73

    move-result v2

    .line 7402
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_71

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 7405
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSystemTimeController:Lcom/lge/mdm/controller/LGMDMSystemTimeController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMSystemTimeController;->changeTimezone(II)V

    .line 7406
    if-eqz v1, :cond_70

    .line 7408
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.ACTION_SYSTEM_TIME_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7409
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7410
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowChangeTimezone : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7380
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_70
    return-void

    .line 7402
    :cond_71
    const/4 v1, 0x0

    goto :goto_3f

    .line 7384
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_73
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowChangingMobileDataUsageCycle(Landroid/content/ComponentName;ZII)V
    .registers 15
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "cycleDate"    # I
    .param p4, "userHandle"    # I

    .prologue
    const/4 v9, 0x0

    .line 7434
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7435
    const/4 v7, 0x0

    .line 7436
    .local v7, "needChangeIntent":Z
    const/4 v8, 0x1

    .line 7437
    .local v8, "newGlobalPolicy":Z
    monitor-enter p0

    .line 7438
    :try_start_9
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 7439
    const/4 v1, 0x0

    .line 7438
    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowChangingMobileDataUsageCycle(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 7441
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7442
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_16
    .catchall {:try_start_9 .. :try_end_16} :catchall_8f

    move-result v0

    if-nez v0, :cond_1b

    monitor-exit p0

    .line 7443
    return-void

    .line 7445
    :cond_1b
    :try_start_1b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1e
    .catchall {:try_start_1b .. :try_end_1e} :catchall_8f

    move-result v0

    if-nez v0, :cond_23

    monitor-exit p0

    .line 7446
    return-void

    .line 7448
    :cond_23
    :try_start_23
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v0

    if-eqz v0, :cond_34

    .line 7449
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "can not control data policy becase of wifi only model"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_32
    .catchall {:try_start_23 .. :try_end_32} :catchall_8f

    monitor-exit p0

    .line 7450
    return-void

    .line 7452
    :cond_34
    if-eqz p4, :cond_38

    monitor-exit p0

    .line 7453
    return-void

    .line 7455
    :cond_38
    :try_start_38
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7456
    const/16 v1, 0x2c

    .line 7455
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7457
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v5, p4

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAllowChangingMobileDataUsageCycle(Landroid/content/ComponentName;ZIZI)V

    .line 7459
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7461
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v1, 0x0

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowChangingMobileDataUsageCycle(Landroid/content/ComponentName;I)Z
    :try_end_56
    .catchall {:try_start_38 .. :try_end_56} :catchall_8f

    move-result v8

    .line 7463
    .local v8, "newGlobalPolicy":Z
    if-eq v4, v8, :cond_8d

    const/4 v7, 0x1

    :goto_5a
    monitor-exit p0

    .line 7466
    if-eqz v7, :cond_8c

    .line 7467
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 7468
    int-to-long v2, p3

    .line 7467
    invoke-virtual {v0, v9, v8, v2, v3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setMobileDataUsageInfo(IZJ)V

    .line 7470
    new-instance v6, Landroid/content/Intent;

    const-string/jumbo v0, "com.lge.mdm.intent.action.CHANGING_MOBILE_DATAUSAGE_CYCLE"

    invoke-direct {v6, v0}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7471
    .local v6, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v0

    invoke-virtual {v0, v6}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7472
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowChangingMobileDataUsageCycle : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7433
    .end local v6    # "intent":Landroid/content/Intent;
    :cond_8c
    return-void

    .line 7463
    :cond_8d
    const/4 v7, 0x0

    goto :goto_5a

    .line 7437
    .end local v4    # "oldGlobalPolicy":Z
    .local v8, "newGlobalPolicy":Z
    :catchall_8f
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowClipboard(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6360
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6361
    monitor-enter p0

    .line 6362
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6363
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6364
    return-void

    .line 6366
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6367
    return-void

    .line 6369
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6370
    const/16 v1, 0x1f

    .line 6369
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6371
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowClipboard(Landroid/content/ComponentName;ZI)V

    .line 6372
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6373
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowClipboard : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6359
    return-void

    .line 6361
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowCommandForInternetAccess(Landroid/content/ComponentName;ZLjava/util/List;I)Z
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)Z"
        }
    .end annotation

    .prologue
    .local p3, "commandList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v5, 0x0

    .line 5508
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5510
    const/4 v0, 0x0

    .line 5512
    .local v0, "oldPolicy":Z
    if-eqz p4, :cond_a

    .line 5513
    return v5

    .line 5516
    :cond_a
    invoke-virtual {p0, p1, p4}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowCommandForInternetAccess_others(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 5517
    .local v0, "oldPolicy":Z
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "oldPolicy is "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5518
    if-nez v0, :cond_34

    .line 5519
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "setAllowCommandForInternetAccess is locked"

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5520
    return v5

    .line 5522
    :cond_34
    monitor-enter p0

    .line 5523
    :try_start_35
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5524
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_3b
    .catchall {:try_start_35 .. :try_end_3b} :catchall_9f

    move-result v2

    if-nez v2, :cond_40

    monitor-exit p0

    .line 5525
    return v5

    .line 5527
    :cond_40
    :try_start_40
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_43
    .catchall {:try_start_40 .. :try_end_43} :catchall_9f

    move-result v2

    if-nez v2, :cond_48

    monitor-exit p0

    .line 5528
    return v5

    .line 5530
    :cond_48
    :try_start_48
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5531
    const/4 v3, 0x4

    .line 5530
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5532
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v2, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMIptablesController;->setAllowCommandForInternetAccess(Landroid/content/ComponentName;ZLjava/util/List;I)Z

    move-result v1

    .line 5534
    .local v1, "ret":Z
    if-eqz v1, :cond_5e

    .line 5535
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v3, "lgmdm_cmdlist_policies.xml"

    invoke-virtual {v2, v3, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_5e
    .catchall {:try_start_48 .. :try_end_5e} :catchall_9f

    :cond_5e
    monitor-exit p0

    .line 5540
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAllowCommandForInternetAccess : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, ", list : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5541
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAllowCommandForInternetAccess ret : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5542
    return v1

    .line 5522
    .end local v1    # "ret":Z
    :catchall_9f
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public setAllowConsumerEmail(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4300
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4301
    monitor-enter p0

    .line 4302
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4303
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_41

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 4304
    return-void

    .line 4306
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4307
    const/16 v1, 0x9

    .line 4306
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4308
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setAllowConsumerEmail(Landroid/content/ComponentName;ZI)V

    .line 4309
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4310
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowConsumerEmail : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3f
    .catchall {:try_start_11 .. :try_end_3f} :catchall_41

    monitor-exit p0

    .line 4299
    return-void

    .line 4301
    :catchall_41
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowContactInfoAccess(Landroid/content/ComponentName;II)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "mode"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 7823
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7824
    const/4 v1, 0x0

    .line 7825
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 7826
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowContactInfoAccess(Landroid/content/ComponentName;I)I

    move-result v3

    .line 7829
    .local v3, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7830
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_75

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 7831
    return-void

    .line 7833
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_75

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 7834
    return-void

    .line 7837
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7838
    const/16 v5, 0x2d

    .line 7837
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7839
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowContactInfoAccess(Landroid/content/ComponentName;II)V

    .line 7840
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_application_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7842
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowContactInfoAccess(Landroid/content/ComponentName;I)I
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_75

    move-result v2

    .line 7844
    .local v2, "newGlobalPolicy":I
    if-eq v3, v2, :cond_73

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 7847
    if-eqz v1, :cond_72

    .line 7849
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_CONTACT_INFO_ACCESS_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7850
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7851
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowContactInfoAccess, mode : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 7852
    const-string/jumbo v6, " (0:ALLOW, 1:DISALLOW_WITH_NOTI, 2:DISALLOW_WITHOUT_NOTI)"

    .line 7851
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7822
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_72
    return-void

    .line 7844
    :cond_73
    const/4 v1, 0x0

    goto :goto_3f

    .line 7825
    .end local v2    # "newGlobalPolicy":I
    .end local v3    # "oldGlobalPolicy":I
    :catchall_75
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowDLNADiscovery(Landroid/content/ComponentName;ZI)V
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7974
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7975
    monitor-enter p0

    .line 7976
    :try_start_6
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z

    move-result v1

    .line 7977
    .local v1, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7978
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_13
    .catchall {:try_start_6 .. :try_end_13} :catchall_62

    move-result v2

    if-nez v2, :cond_18

    monitor-exit p0

    .line 7979
    return-void

    .line 7981
    :cond_18
    :try_start_18
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1b
    .catchall {:try_start_18 .. :try_end_1b} :catchall_62

    move-result v2

    if-nez v2, :cond_20

    monitor-exit p0

    .line 7982
    return-void

    .line 7984
    :cond_20
    if-eqz p3, :cond_24

    monitor-exit p0

    .line 7985
    return-void

    .line 7987
    :cond_24
    :try_start_24
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7988
    const/16 v3, 0x12

    .line 7987
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7989
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowDLNADiscovery(Landroid/content/ComponentName;ZI)V

    .line 7990
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v3, "lgmdm_hardware_policies.xml"

    invoke-virtual {v2, v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7992
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowDLNADiscovery(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 7993
    .local v0, "newGlobalPolicy":Z
    if-eq v1, v0, :cond_60

    .line 7994
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v2, v0, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateDLNADiscovery(ZI)V

    .line 7995
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAllowDLNADiscovery : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_60
    .catchall {:try_start_24 .. :try_end_60} :catchall_62

    :cond_60
    monitor-exit p0

    .line 7973
    return-void

    .line 7975
    .end local v0    # "newGlobalPolicy":Z
    .end local v1    # "oldGlobalPolicy":Z
    :catchall_62
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public setAllowDataRoaming(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2869
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2870
    const/4 v2, 0x0

    .line 2871
    .local v2, "needChangeIntent":Z
    const/4 v1, 0x0

    .line 2872
    .local v1, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    monitor-enter p0

    .line 2873
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowDataRoaming(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 2875
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2876
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_86

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 2877
    return-void

    .line 2879
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_86

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 2880
    return-void

    .line 2882
    :cond_22
    :try_start_22
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v5

    if-eqz v5, :cond_33

    .line 2883
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v6, "can not control data policy becase of wifi only model"

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_31
    .catchall {:try_start_22 .. :try_end_31} :catchall_86

    monitor-exit p0

    .line 2884
    return-void

    .line 2887
    :cond_33
    :try_start_33
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2888
    const/16 v6, 0xd

    .line 2887
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2889
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAllowDataRoaming(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v1

    .line 2890
    .local v1, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2892
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowDataRoaming(Landroid/content/ComponentName;I)Z
    :try_end_4e
    .catchall {:try_start_33 .. :try_end_4e} :catchall_86

    move-result v3

    .line 2893
    .local v3, "newGlobalPolicy":Z
    if-eq v4, v3, :cond_84

    const/4 v2, 0x1

    :goto_52
    monitor-exit p0

    .line 2896
    if-eqz v2, :cond_83

    .line 2897
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p3, v1}, Lcom/lge/mdm/controller/LGMDMNetworkController;->settingDataRoaming(Landroid/content/ComponentName;ILcom/lge/mdm/admin/LGMDMadminlist;)V

    .line 2899
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.DATA_ROAMING_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2900
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2901
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowDataRoaming : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2868
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_83
    return-void

    .line 2893
    :cond_84
    const/4 v2, 0x0

    goto :goto_52

    .line 2872
    .end local v1    # "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v3    # "newGlobalPolicy":Z
    .end local v4    # "oldGlobalPolicy":Z
    :catchall_86
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowDataTransmissionViaAudioPort(Landroid/content/ComponentName;ZI)I
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v6, 0x0

    const/4 v5, -0x1

    .line 7634
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7635
    invoke-virtual {p0, p1, v6}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkMDMpermission(Landroid/content/ComponentName;Z)Z

    move-result v2

    if-nez v2, :cond_e

    .line 7636
    return v5

    .line 7638
    :cond_e
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7639
    const/16 v3, 0x2b

    .line 7638
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7641
    sget-object v3, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v3

    .line 7642
    :try_start_18
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v2}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->checkPortingATClient()Z

    move-result v2

    if-nez v2, :cond_2b

    .line 7643
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "The device doesn\'t support DataTransmissionViaAudioPort api"

    invoke-static {v2, v4}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_29
    .catchall {:try_start_18 .. :try_end_29} :catchall_7c

    monitor-exit v3

    .line 7644
    return v6

    .line 7647
    :cond_2b
    if-nez p2, :cond_40

    :try_start_2d
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v2}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->checkAllUserDataTransmissionViaAudioPortPolicy()Z

    move-result v2

    if-nez v2, :cond_40

    .line 7649
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "another admin or user has locked DataTransmissionViaAudioPort."

    invoke-static {v2, v4}, Lcom/lge/mdm/util/MDMLog;->w(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3e
    .catchall {:try_start_2d .. :try_end_3e} :catchall_7c

    monitor-exit v3

    .line 7650
    return v5

    .line 7653
    :cond_40
    :try_start_40
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->checkDataTransmissionViaAudioPortPolicy(Landroid/content/ComponentName;ZI)Z

    move-result v0

    .line 7656
    .local v0, "changePolicy":Z
    if-eqz v0, :cond_7a

    .line 7657
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v2, p2}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->setATClientDataTransmissionViaAudioPort(Z)I

    move-result v1

    .line 7658
    .local v1, "result":I
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowDataTransmissionViaAudioPort : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7663
    :goto_68
    const/4 v2, 0x1

    if-ne v1, v2, :cond_78

    .line 7664
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAudioPortController:Lcom/lge/mdm/controller/LGMDMAudioPortController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMAudioPortController;->setAllowDataTransmissionViaAudioPort(Landroid/content/ComponentName;ZI)V

    .line 7666
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_atclient_policies.xml"

    invoke-virtual {v2, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_78
    .catchall {:try_start_40 .. :try_end_78} :catchall_7c

    :cond_78
    monitor-exit v3

    .line 7669
    return v1

    .line 7660
    .end local v1    # "result":I
    :cond_7a
    const/4 v1, 0x1

    .restart local v1    # "result":I
    goto :goto_68

    .line 7641
    .end local v0    # "changePolicy":Z
    .end local v1    # "result":I
    :catchall_7c
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public setAllowDeveloperMode(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7891
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7892
    const/4 v1, 0x0

    .line 7893
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 7894
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowDeveloperMode(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 7897
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7898
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_72

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 7899
    return-void

    .line 7901
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_72

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 7902
    return-void

    .line 7904
    :cond_21
    if-eqz p3, :cond_25

    monitor-exit p0

    .line 7905
    return-void

    .line 7907
    :cond_25
    :try_start_25
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7908
    const/16 v5, 0x2e

    .line 7907
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7909
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowDeveloperMode(Landroid/content/ComponentName;ZI)V

    .line 7910
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7912
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowDeveloperMode(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_25 .. :try_end_3f} :catchall_72

    move-result v2

    .line 7914
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_70

    const/4 v1, 0x1

    :goto_43
    monitor-exit p0

    .line 7917
    if-eqz v1, :cond_6f

    .line 7919
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_DEVELOPER_MODE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7920
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7921
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowDeveloperMode : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7890
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6f
    return-void

    .line 7914
    :cond_70
    const/4 v1, 0x0

    goto :goto_43

    .line 7893
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_72
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowDownloadMode(Landroid/content/ComponentName;ZI)I
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v6, 0x0

    const/4 v5, -0x1

    .line 7293
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7296
    invoke-virtual {p0, p1, v6}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkMDMpermission(Landroid/content/ComponentName;Z)Z

    move-result v2

    if-nez v2, :cond_e

    .line 7297
    return v5

    .line 7300
    :cond_e
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7301
    const/4 v3, 0x2

    .line 7300
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7303
    sget-object v3, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v3

    .line 7304
    :try_start_17
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v2}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->checkPortingATClient()Z

    move-result v2

    if-nez v2, :cond_2a

    .line 7305
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "The device doesn\'t support downloadmode api"

    invoke-static {v2, v4}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_28
    .catchall {:try_start_17 .. :try_end_28} :catchall_7b

    monitor-exit v3

    .line 7306
    return v6

    .line 7309
    :cond_2a
    if-nez p2, :cond_3f

    .line 7310
    :try_start_2c
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v2}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->checkAllUserDownloadModePolicy()Z

    move-result v2

    if-nez v2, :cond_3f

    .line 7311
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "another admin or user has locked downloadmode."

    invoke-static {v2, v4}, Lcom/lge/mdm/util/MDMLog;->w(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3d
    .catchall {:try_start_2c .. :try_end_3d} :catchall_7b

    monitor-exit v3

    .line 7312
    return v5

    .line 7315
    :cond_3f
    :try_start_3f
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->checkDownloadModePolicy(Landroid/content/ComponentName;ZI)Z

    move-result v0

    .line 7318
    .local v0, "changePolicy":Z
    if-eqz v0, :cond_79

    .line 7319
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v2, p2}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->setATClinetDownloadMode(Z)I

    move-result v1

    .line 7320
    .local v1, "result":I
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowDownloadMode : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7325
    :goto_67
    const/4 v2, 0x1

    if-ne v1, v2, :cond_77

    .line 7326
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDownloadModeController:Lcom/lge/mdm/controller/LGMDMDownloadModeController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDownloadModeController;->setAllowDownloadMode(Landroid/content/ComponentName;ZI)V

    .line 7327
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_atclient_policies.xml"

    invoke-virtual {v2, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_77
    .catchall {:try_start_3f .. :try_end_77} :catchall_7b

    :cond_77
    monitor-exit v3

    .line 7330
    return v1

    .line 7322
    .end local v1    # "result":I
    :cond_79
    const/4 v1, 0x1

    .restart local v1    # "result":I
    goto :goto_67

    .line 7303
    .end local v0    # "changePolicy":Z
    .end local v1    # "result":I
    :catchall_7b
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public setAllowDualWindow(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8243
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8244
    const/4 v1, 0x0

    .line 8245
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 8246
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDualWindowController:Lcom/lge/mdm/controller/LGMDMDualWindowController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMDualWindowController;->getAllowDualWindow(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 8249
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8250
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_77

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 8251
    return-void

    .line 8253
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_77

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 8254
    return-void

    .line 8257
    :cond_21
    :try_start_21
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v5, "setAllowDualWindow : LGMDMDevPolicyMngrService"

    invoke-static {v4, v5}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8258
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8259
    const/16 v5, 0x32

    .line 8258
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8260
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDualWindowController:Lcom/lge/mdm/controller/LGMDMDualWindowController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDualWindowController;->setAllowDualWindow(Landroid/content/ComponentName;ZI)V

    .line 8261
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_application_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8263
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDualWindowController:Lcom/lge/mdm/controller/LGMDMDualWindowController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMDualWindowController;->getAllowDualWindow(Landroid/content/ComponentName;I)Z
    :try_end_44
    .catchall {:try_start_21 .. :try_end_44} :catchall_77

    move-result v2

    .line 8265
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_75

    const/4 v1, 0x1

    :goto_48
    monitor-exit p0

    .line 8268
    if-eqz v1, :cond_74

    .line 8269
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_DUAL_WINDOW_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8270
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 8271
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowDualWindow : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 8242
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_74
    return-void

    .line 8265
    :cond_75
    const/4 v1, 0x0

    goto :goto_48

    .line 8245
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_77
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowExternalMemorySlot(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 974
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 975
    const/4 v1, 0x0

    .line 976
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 977
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 978
    const/4 v5, 0x0

    .line 977
    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowExternalMemorySlotStatus(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 980
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 981
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 982
    return-void

    .line 984
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 985
    const/16 v5, 0x11

    .line 984
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 986
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->setAllowExternalMemorySlot(Landroid/content/ComponentName;ZI)V

    .line 987
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 989
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 990
    const/4 v5, 0x0

    .line 989
    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowExternalMemorySlotStatus(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 991
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 994
    if-eqz v1, :cond_63

    .line 996
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.EXTERNAL_STORAGE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 997
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 998
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowExternalMemorySlot : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 973
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 991
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 976
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowGPSLocation(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1188
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1189
    const/4 v1, 0x0

    .line 1190
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 1191
    .local v4, "value":I
    monitor-enter p0

    .line 1192
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowGPSLocation(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1194
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1195
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_75

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 1196
    return-void

    .line 1198
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_75

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 1199
    return-void

    .line 1201
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1202
    const/16 v6, 0x14

    .line 1201
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1203
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->setAllowGPSLocation(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 1204
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1206
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowGPSLocation(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_75

    move-result v2

    .line 1207
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_73

    const/4 v1, 0x1

    :goto_41
    monitor-exit p0

    .line 1209
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->settingGPSLocation(II)V

    .line 1210
    if-eqz v1, :cond_72

    .line 1212
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.LOCATION_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1213
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1214
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowGPSLocation : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1187
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_72
    return-void

    .line 1207
    :cond_73
    const/4 v1, 0x0

    goto :goto_41

    .line 1191
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_75
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowGoogleBackup(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6543
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6544
    const/4 v0, 0x0

    .line 6545
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    const/4 v2, 0x0

    .line 6546
    .local v2, "needChangeIntent":Z
    const/4 v4, 0x0

    .line 6547
    .local v4, "oldGlobalPolicy":Z
    const/4 v3, 0x0

    .line 6548
    .local v3, "newGlobalPolicy":Z
    monitor-enter p0

    .line 6549
    :try_start_a
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowGoogleBackup(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 6551
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6552
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6553
    const/16 v6, 0x24

    .line 6552
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6554
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_1e
    .catchall {:try_start_a .. :try_end_1e} :catchall_7e

    move-result v5

    if-nez v5, :cond_23

    monitor-exit p0

    .line 6555
    return-void

    .line 6557
    :cond_23
    :try_start_23
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_7e

    move-result v5

    if-nez v5, :cond_2b

    monitor-exit p0

    .line 6558
    return-void

    .line 6560
    :cond_2b
    :try_start_2b
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAllowGoogleBackup(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 6561
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6563
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 6564
    const/4 v6, 0x0

    .line 6563
    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowGoogleBackup(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_2b .. :try_end_3f} :catchall_7e

    move-result v3

    .line 6565
    .local v3, "newGlobalPolicy":Z
    if-eq v4, v3, :cond_7c

    const/4 v2, 0x1

    :goto_43
    monitor-exit p0

    .line 6568
    if-eqz v0, :cond_50

    .line 6569
    iget-boolean v5, v0, Lcom/lge/mdm/admin/LGMDMadminlist;->allowGoogleBackup:Z

    if-eqz v5, :cond_81

    .line 6570
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v0, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setGoogleBackup(Lcom/lge/mdm/admin/LGMDMadminlist;ZI)V

    .line 6576
    :cond_50
    :goto_50
    if-eqz v2, :cond_7b

    .line 6578
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.GOOGLE_BACKUP_POLICY_CHANGE"

    invoke-direct {v1, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6579
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6580
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowGoogleBackup : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6542
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_7b
    return-void

    .line 6565
    :cond_7c
    const/4 v2, 0x0

    goto :goto_43

    .line 6548
    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v4    # "oldGlobalPolicy":Z
    .local v3, "newGlobalPolicy":Z
    :catchall_7e
    move-exception v5

    monitor-exit p0

    throw v5

    .line 6572
    .restart local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .local v3, "newGlobalPolicy":Z
    .restart local v4    # "oldGlobalPolicy":Z
    :cond_81
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x1

    invoke-virtual {v5, v0, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setGoogleBackup(Lcom/lge/mdm/admin/LGMDMadminlist;ZI)V

    goto :goto_50
.end method

.method public setAllowGoogleErrorReport(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 4270
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4271
    monitor-enter p0

    .line 4272
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4273
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_50

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 4274
    return-void

    .line 4276
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_50

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 4277
    return-void

    .line 4279
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4280
    const/16 v1, 0x29

    .line 4279
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4281
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowGoogleErrorReport(Landroid/content/ComponentName;II)V

    .line 4282
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4283
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowGoogleErrorReport : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 4284
    const-string/jumbo v2, " (0:GOOGLE_ERROR_REPORT_ALLOW, 1:GOOGLE_ERROR_REPORT_DISALLOW_ALL)"

    .line 4283
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_4e
    .catchall {:try_start_19 .. :try_end_4e} :catchall_50

    monitor-exit p0

    .line 4269
    return-void

    .line 4271
    :catchall_50
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowHardwareFactoryreset(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2968
    const/4 v1, 0x0

    .line 2969
    .local v1, "result":I
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2971
    const/4 v2, 0x0

    invoke-virtual {p0, p1, v2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkMDMpermission(Landroid/content/ComponentName;Z)Z

    move-result v2

    if-nez v2, :cond_e

    .line 2972
    return-void

    .line 2974
    :cond_e
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2975
    const/4 v3, 0x4

    .line 2974
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2977
    sget-object v3, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v3

    .line 2978
    :try_start_17
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v2}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->checkPortingATClient()Z

    move-result v2

    if-nez v2, :cond_2a

    .line 2979
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "setAllowHardwareFactoryreset checkPortingATClient Fail."

    invoke-static {v2, v4}, Lcom/lge/mdm/util/MDMLog;->e(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_28
    .catchall {:try_start_17 .. :try_end_28} :catchall_7b

    monitor-exit v3

    .line 2980
    return-void

    .line 2983
    :cond_2a
    if-nez p2, :cond_3f

    .line 2984
    :try_start_2c
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v2}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->checkAllUserHWFactoryResetPolicy()Z

    move-result v2

    if-nez v2, :cond_3f

    .line 2985
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v4, "another admin or user has locked HWFactoryReset."

    invoke-static {v2, v4}, Lcom/lge/mdm/util/MDMLog;->w(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3d
    .catchall {:try_start_2c .. :try_end_3d} :catchall_7b

    monitor-exit v3

    .line 2986
    return-void

    .line 2989
    :cond_3f
    :try_start_3f
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->checkHardwareFactoryResetPolicy(Landroid/content/ComponentName;ZI)Z

    move-result v0

    .line 2992
    .local v0, "changePolicy":Z
    if-eqz v0, :cond_79

    .line 2993
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v2, p2}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->setATClientHardwareFactoryReset(Z)I

    move-result v1

    .line 2994
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowHardwareFactoryreset : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2999
    :goto_67
    const/4 v2, 0x1

    if-ne v1, v2, :cond_77

    .line 3000
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceWipeController:Lcom/lge/mdm/controller/LGMDMDeviceWipeController;

    invoke-virtual {v2, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDeviceWipeController;->setAllowHardwareFactoryReset(Landroid/content/ComponentName;ZI)V

    .line 3001
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_atclient_policies.xml"

    invoke-virtual {v2, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_77
    .catchall {:try_start_3f .. :try_end_77} :catchall_7b

    :cond_77
    monitor-exit v3

    .line 2967
    return-void

    .line 2996
    :cond_79
    const/4 v1, 0x1

    goto :goto_67

    .line 2977
    .end local v0    # "changePolicy":Z
    :catchall_7b
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public setAllowHotspot(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v6, 0x0

    .line 1584
    const/4 v3, 0x1

    .line 1585
    .local v3, "oldGlobalPolicy":Z
    const/4 v2, 0x1

    .line 1586
    .local v2, "newGlobalPolicy":Z
    const/4 v0, 0x0

    .line 1587
    .local v0, "backupInfo":Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1589
    monitor-enter p0

    .line 1590
    :try_start_a
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowHotspot(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1592
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1593
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_17
    .catchall {:try_start_a .. :try_end_17} :catchall_7c

    move-result v4

    if-nez v4, :cond_1c

    monitor-exit p0

    .line 1594
    return-void

    .line 1596
    :cond_1c
    :try_start_1c
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1f
    .catchall {:try_start_1c .. :try_end_1f} :catchall_7c

    move-result v4

    if-nez v4, :cond_24

    monitor-exit p0

    .line 1597
    return-void

    .line 1599
    :cond_24
    :try_start_24
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1600
    const/16 v5, 0x10

    .line 1599
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1601
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setAllowHotspot(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;

    move-result-object v0

    .line 1602
    .local v0, "backupInfo":Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1604
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowHotspot(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_24 .. :try_end_3f} :catchall_7c

    move-result v2

    .local v2, "newGlobalPolicy":Z
    monitor-exit p0

    .line 1607
    if-eqz v0, :cond_50

    .line 1608
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, v6, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowHotspot(Landroid/content/ComponentName;I)Z

    move-result v4

    if-nez v4, :cond_50

    .line 1610
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setHotspotDisable(Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;)V

    .line 1614
    :cond_50
    if-eq v3, v2, :cond_7b

    .line 1616
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.TETHER_POLICY_CHANGE"

    invoke-direct {v1, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1617
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1618
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowHotspot : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1583
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_7b
    return-void

    .line 1589
    .end local v0    # "backupInfo":Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;
    .end local v3    # "oldGlobalPolicy":Z
    .local v2, "newGlobalPolicy":Z
    :catchall_7c
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowIMEI(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1309
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1310
    monitor-enter p0

    .line 1311
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1312
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_42

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 1313
    return-void

    .line 1315
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_42

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 1316
    return-void

    .line 1318
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIMEIController:Lcom/lge/mdm/controller/LGMDMIMEIController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMIMEIController;->setAllowIMEI(Landroid/content/ComponentName;ZI)V

    .line 1319
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1320
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowIMEI : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_40
    .catchall {:try_start_19 .. :try_end_40} :catchall_42

    monitor-exit p0

    .line 1308
    return-void

    .line 1310
    :catchall_42
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowIMSI(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1332
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1333
    monitor-enter p0

    .line 1334
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1335
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_42

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 1336
    return-void

    .line 1338
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_42

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 1339
    return-void

    .line 1341
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIMEIController:Lcom/lge/mdm/controller/LGMDMIMEIController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMIMEIController;->setAllowIMSI(Landroid/content/ComponentName;ZI)V

    .line 1342
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1343
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowIMSI : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_40
    .catchall {:try_start_19 .. :try_end_40} :catchall_42

    monitor-exit p0

    .line 1331
    return-void

    .line 1333
    :catchall_42
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowInfraredPort(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8009
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8010
    monitor-enter p0

    .line 8011
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8012
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_41

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 8013
    return-void

    .line 8015
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8016
    const/16 v1, 0x30

    .line 8015
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8017
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIRController:Lcom/lge/mdm/controller/LGMDMIRController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMIRController;->setAllowInfraredPort(Landroid/content/ComponentName;ZI)V

    .line 8018
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8019
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowInfraredPort : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3f
    .catchall {:try_start_11 .. :try_end_3f} :catchall_41

    monitor-exit p0

    .line 8008
    return-void

    .line 8010
    :catchall_41
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowInstallApplication(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 3646
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3647
    monitor-enter p0

    .line 3648
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3649
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_48

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3650
    return-void

    .line 3652
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_48

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3653
    return-void

    .line 3655
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3656
    const/4 v1, 0x2

    .line 3655
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3657
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowInstallApplication(Landroid/content/ComponentName;ZI)V

    .line 3658
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3659
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowInstallApplication : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_46
    .catchall {:try_start_19 .. :try_end_46} :catchall_48

    monitor-exit p0

    .line 3645
    return-void

    .line 3647
    :catchall_48
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowListForInternetAccess(Landroid/content/ComponentName;ILjava/util/List;I)Z
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)Z"
        }
    .end annotation

    .annotation runtime Ljava/lang/Deprecated;
    .end annotation

    .prologue
    .local p3, "internetAccessList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v5, 0x0

    .line 5455
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5457
    const/4 v0, 0x0

    .line 5459
    .local v0, "oldPolicy":Z
    if-eqz p4, :cond_a

    .line 5460
    return v5

    .line 5463
    :cond_a
    invoke-virtual {p0, p1, p4}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowListForInternetAccess_others(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 5464
    .local v0, "oldPolicy":Z
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "oldPolicy is "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5465
    if-nez v0, :cond_34

    .line 5467
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "setAllowListForInternetAccess is locked"

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5468
    return v5

    .line 5470
    :cond_34
    monitor-enter p0

    .line 5471
    :try_start_35
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5472
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_3b
    .catchall {:try_start_35 .. :try_end_3b} :catchall_a6

    move-result v2

    if-nez v2, :cond_40

    monitor-exit p0

    .line 5473
    return v5

    .line 5475
    :cond_40
    :try_start_40
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_43
    .catchall {:try_start_40 .. :try_end_43} :catchall_a6

    move-result v2

    if-nez v2, :cond_48

    monitor-exit p0

    .line 5476
    return v5

    .line 5478
    :cond_48
    :try_start_48
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5479
    const/4 v3, 0x4

    .line 5478
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5480
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMIptablesController:Lcom/lge/mdm/controller/LGMDMIptablesController;

    invoke-virtual {v2, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMIptablesController;->setAllowListForInternetAccess(Landroid/content/ComponentName;ILjava/util/List;I)Z

    move-result v1

    .line 5482
    .local v1, "retValue":Z
    if-eqz v1, :cond_5e

    .line 5483
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v3, "lgmdm_list_ialist_policies.xml"

    invoke-virtual {v2, v3, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_5e
    .catchall {:try_start_48 .. :try_end_5e} :catchall_a6

    :cond_5e
    monitor-exit p0

    .line 5488
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAllowListForInternetAccess : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 5489
    const-string/jumbo v4, " (0:IPTABLES_NONE, 1:IPTABLES_BLACKIST, 2:IPTABLES_THITELIST)"

    .line 5488
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    .line 5489
    const-string/jumbo v4, ", list : "

    .line 5488
    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5490
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAllowListForInternetAccess retValue : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 5491
    return v1

    .line 5470
    .end local v1    # "retValue":Z
    :catchall_a6
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public setAllowLockdownApps(Landroid/content/ComponentName;ZLjava/lang/String;Ljava/lang/String;II)Z
    .registers 15
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "isContinuousRunning"    # Z
    .param p3, "packageName"    # Ljava/lang/String;
    .param p4, "activityName"    # Ljava/lang/String;
    .param p5, "runningApplicationMaxCrashNum"    # I
    .param p6, "userHandle"    # I

    .prologue
    .line 3967
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p6}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3968
    monitor-enter p0

    .line 3969
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3970
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_2a

    move-result v0

    if-nez v0, :cond_12

    .line 3971
    const/4 v0, 0x0

    monitor-exit p0

    return v0

    .line 3973
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_2a

    move-result v0

    if-nez v0, :cond_1b

    .line 3974
    const/4 v0, 0x0

    monitor-exit p0

    return v0

    .line 3976
    :cond_1b
    :try_start_1b
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3977
    const/16 v1, 0x1b

    .line 3976
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_22
    .catchall {:try_start_1b .. :try_end_22} :catchall_2a

    monitor-exit p0

    .line 3979
    const/4 v7, 0x1

    .line 3981
    .local v7, "result":Z
    if-eqz p2, :cond_38

    .line 3982
    if-nez p3, :cond_2d

    .line 3983
    const/4 v0, 0x0

    return v0

    .line 3968
    .end local v7    # "result":Z
    :catchall_2a
    move-exception v0

    monitor-exit p0

    throw v0

    .line 3986
    .restart local v7    # "result":Z
    :cond_2d
    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p3

    move-object v3, p4

    move v6, p6

    invoke-direct/range {v0 .. v6}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->startApplicationInternal(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;IZI)Z

    move-result v7

    .line 3989
    .end local v7    # "result":Z
    :cond_38
    monitor-enter p0

    .line 3990
    :try_start_39
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowLockdownApps(Landroid/content/ComponentName;ZLjava/lang/String;Ljava/lang/String;II)Z

    .line 3992
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p6}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3993
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowLockdownApps : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", packageName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3994
    const-string/jumbo v2, ", activityName : "

    .line 3993
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3994
    const-string/jumbo v2, ", runningApplicationMaxCrashNum : "

    .line 3993
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_87
    .catchall {:try_start_39 .. :try_end_87} :catchall_a6

    monitor-exit p0

    .line 3997
    if-nez v7, :cond_a9

    .line 3998
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "startLockdownApps startApplication result ="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 3999
    const/4 v0, 0x0

    return v0

    .line 3989
    :catchall_a6
    move-exception v0

    monitor-exit p0

    throw v0

    .line 4001
    :cond_a9
    return v7
.end method

.method public setAllowMaximumRepeatedPassword(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "max"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 3056
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3057
    monitor-enter p0

    .line 3058
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3059
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_40

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3060
    return-void

    .line 3062
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3063
    const/4 v1, 0x0

    .line 3062
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3064
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setAllowMaximumRepeatedPassword(Landroid/content/ComponentName;II)V

    .line 3065
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3066
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowMaximumRepeatedPassword : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3e
    .catchall {:try_start_11 .. :try_end_3e} :catchall_40

    monitor-exit p0

    .line 3055
    return-void

    .line 3057
    :catchall_40
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowMaximumSequentialPassword(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "max"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 3084
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3085
    monitor-enter p0

    .line 3086
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3087
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_40

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3088
    return-void

    .line 3090
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3091
    const/4 v1, 0x0

    .line 3090
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3092
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setAllowMaximumSequentialPassword(Landroid/content/ComponentName;II)V

    .line 3093
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3094
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowMaximumSequentialPassword : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3e
    .catchall {:try_start_11 .. :try_end_3e} :catchall_40

    monitor-exit p0

    .line 3083
    return-void

    .line 3085
    :catchall_40
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowMicrophone(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1367
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1368
    monitor-enter p0

    .line 1369
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1370
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 1371
    return-void

    .line 1373
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 1374
    return-void

    .line 1376
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1377
    const/16 v1, 0x17

    .line 1376
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1378
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setAllowMicrophone(Landroid/content/ComponentName;ZI)V

    .line 1379
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1380
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowMicrophone : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 1366
    return-void

    .line 1368
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowMiracast(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7217
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7218
    const/4 v1, 0x0

    .line 7219
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 7220
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowMiracast(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 7221
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7222
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6e

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 7223
    return-void

    .line 7225
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6e

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 7226
    return-void

    .line 7228
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7229
    const/16 v5, 0x12

    .line 7228
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7230
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowMiracast(Landroid/content/ComponentName;ZI)V

    .line 7231
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7232
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowMiracast(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_6e

    move-result v2

    .line 7233
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6c

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 7236
    if-eqz v1, :cond_6b

    .line 7238
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.WIFI_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7239
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7240
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowMiracast : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7216
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6b
    return-void

    .line 7233
    :cond_6c
    const/4 v1, 0x0

    goto :goto_3f

    .line 7219
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6e
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowMobileNetwork(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2772
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2773
    const/4 v2, 0x0

    .line 2774
    .local v2, "needChangeIntent":Z
    const/4 v1, 0x0

    .line 2776
    .local v1, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    monitor-enter p0

    .line 2777
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowMobileNetwork(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 2780
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2781
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_86

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 2782
    return-void

    .line 2784
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_86

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 2785
    return-void

    .line 2787
    :cond_22
    :try_start_22
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v5

    if-eqz v5, :cond_33

    .line 2788
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v6, "can not control data policy becase of wifi only model"

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_31
    .catchall {:try_start_22 .. :try_end_31} :catchall_86

    monitor-exit p0

    .line 2789
    return-void

    .line 2792
    :cond_33
    :try_start_33
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2793
    const/16 v6, 0xe

    .line 2792
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2794
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setAllowMobileNetwork(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v1

    .line 2795
    .local v1, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2797
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getAllowMobileNetwork(Landroid/content/ComponentName;I)Z
    :try_end_4e
    .catchall {:try_start_33 .. :try_end_4e} :catchall_86

    move-result v3

    .line 2799
    .local v3, "newGlobalPolicy":Z
    if-eq v4, v3, :cond_84

    const/4 v2, 0x1

    :goto_52
    monitor-exit p0

    .line 2802
    if-eqz v2, :cond_83

    .line 2803
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p3, v1}, Lcom/lge/mdm/controller/LGMDMNetworkController;->settingMobileNetwork(Landroid/content/ComponentName;ILcom/lge/mdm/admin/LGMDMadminlist;)V

    .line 2805
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.MOBILE_NETWORK_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2806
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2807
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowMobileNetwork : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2771
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_83
    return-void

    .line 2799
    :cond_84
    const/4 v2, 0x0

    goto :goto_52

    .line 2776
    .end local v1    # "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v3    # "newGlobalPolicy":Z
    .end local v4    # "oldGlobalPolicy":Z
    :catchall_86
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowMockLocation(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1268
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1269
    const/4 v1, 0x0

    .line 1270
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 1271
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowMockLocation(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1273
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1274
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_72

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 1275
    return-void

    .line 1277
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_72

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 1278
    return-void

    .line 1280
    :cond_21
    if-eqz p3, :cond_25

    monitor-exit p0

    .line 1281
    return-void

    .line 1283
    :cond_25
    :try_start_25
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1284
    const/16 v5, 0x16

    .line 1283
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1285
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->setAllowMockLocation(Landroid/content/ComponentName;ZI)V

    .line 1286
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1288
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowMockLocation(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_25 .. :try_end_3f} :catchall_72

    move-result v2

    .line 1289
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_70

    const/4 v1, 0x1

    :goto_43
    monitor-exit p0

    .line 1292
    if-eqz v1, :cond_6f

    .line 1294
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.MOCK_LOCATION_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1295
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1296
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowMockLocation : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1267
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6f
    return-void

    .line 1289
    :cond_70
    const/4 v1, 0x0

    goto :goto_43

    .line 1270
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_72
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowMultiUser(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6951
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6952
    const/4 v1, 0x0

    .line 6953
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6954
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6957
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6958
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6a

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 6959
    return-void

    .line 6961
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 6962
    return-void

    .line 6965
    :cond_1d
    :try_start_1d
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6966
    const/16 v5, 0x27

    .line 6965
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6967
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->setMultiUserDisabled(Landroid/content/ComponentName;ZI)V

    .line 6968
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6970
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z
    :try_end_37
    .catchall {:try_start_1d .. :try_end_37} :catchall_6a

    move-result v2

    .line 6972
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_68

    const/4 v1, 0x1

    :goto_3b
    monitor-exit p0

    .line 6975
    if-eqz v1, :cond_67

    .line 6977
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_MULTI_USER_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6978
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6979
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowMultiUser : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6950
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_67
    return-void

    .line 6972
    :cond_68
    const/4 v1, 0x0

    goto :goto_3b

    .line 6953
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6a
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowMultiUserInternel(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6984
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6985
    const/4 v1, 0x0

    .line 6986
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6987
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6990
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6991
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->setMultiUserDisabled(Landroid/content/ComponentName;ZI)V

    .line 6992
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6994
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMultiUserController:Lcom/lge/mdm/controller/LGMDMMultiUserController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMMultiUserController;->getMultiUserDisabled(Landroid/content/ComponentName;I)Z
    :try_end_24
    .catchall {:try_start_7 .. :try_end_24} :catchall_57

    move-result v2

    .line 6996
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_55

    const/4 v1, 0x1

    :goto_28
    monitor-exit p0

    .line 6999
    if-eqz v1, :cond_54

    .line 7001
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_MULTI_USER_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7002
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7003
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowMultiUserInternal : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6983
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_54
    return-void

    .line 6996
    :cond_55
    const/4 v1, 0x0

    goto :goto_28

    .line 6986
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_57
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowNfc(Landroid/content/ComponentName;II)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 5085
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5086
    const/4 v2, 0x0

    .line 5087
    .local v2, "needChangeIntent":Z
    const/4 v0, 0x0

    .line 5088
    .local v0, "backupInfo":Lcom/lge/mdm/controller/LGMDMNfcController$BackupPolicyInfo;
    monitor-enter p0

    .line 5089
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNfcController;->getAllowNfc(Landroid/content/ComponentName;I)I

    move-result v4

    .line 5091
    .local v4, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5092
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_7e

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 5093
    return-void

    .line 5095
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_7e

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 5096
    return-void

    .line 5098
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5099
    const/16 v6, 0x18

    .line 5098
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5100
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNfcController;->setAllowNfc(Landroid/content/ComponentName;II)Lcom/lge/mdm/controller/LGMDMNfcController$BackupPolicyInfo;

    move-result-object v0

    .line 5101
    .local v0, "backupInfo":Lcom/lge/mdm/controller/LGMDMNfcController$BackupPolicyInfo;
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5103
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNfcController;->getAllowNfc(Landroid/content/ComponentName;I)I
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_7e

    move-result v3

    .line 5104
    .local v3, "newGlobalPolicy":I
    if-eq v4, v3, :cond_7c

    const/4 v2, 0x1

    :goto_41
    monitor-exit p0

    .line 5107
    if-eqz v0, :cond_49

    .line 5108
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNfcController:Lcom/lge/mdm/controller/LGMDMNfcController;

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMNfcController;->setNfcDisable(Lcom/lge/mdm/controller/LGMDMNfcController$BackupPolicyInfo;)V

    .line 5111
    :cond_49
    if-eqz v2, :cond_7b

    .line 5113
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.NFC_POLICY_CHANGE"

    invoke-direct {v1, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5114
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 5115
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowNfc : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string/jumbo v7, " (0:DISALLOW, 1:ALLOW)"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5084
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_7b
    return-void

    .line 5104
    :cond_7c
    const/4 v2, 0x0

    goto :goto_41

    .line 5088
    .end local v0    # "backupInfo":Lcom/lge/mdm/controller/LGMDMNfcController$BackupPolicyInfo;
    .end local v3    # "newGlobalPolicy":I
    .end local v4    # "oldGlobalPolicy":I
    :catchall_7e
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowNonWebkitBrowser(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7267
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7268
    monitor-enter p0

    .line 7269
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7270
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_40

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 7271
    return-void

    .line 7273
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7274
    const/4 v1, 0x4

    .line 7273
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7275
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBrowserController:Lcom/lge/mdm/controller/LGMDMBrowserController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBrowserController;->setAllowNonWebkitBrowser(Landroid/content/ComponentName;ZI)V

    .line 7276
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7277
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowNonWebkitBrowser : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3e
    .catchall {:try_start_11 .. :try_end_3e} :catchall_40

    monitor-exit p0

    .line 7266
    return-void

    .line 7268
    :catchall_40
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowNotifySpecificProcessKillEvent(Landroid/content/ComponentName;ZLjava/util/List;I)Z
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)Z"
        }
    .end annotation

    .prologue
    .local p3, "packagelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    const/4 v5, 0x5

    const/4 v4, 0x0

    .line 4125
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4126
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v3, "[setAllowNotifySpecificProcessKillEvent]"

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4128
    monitor-enter p0

    .line 4129
    :try_start_11
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4130
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_17
    .catchall {:try_start_11 .. :try_end_17} :catchall_41

    move-result v2

    if-nez v2, :cond_1c

    monitor-exit p0

    .line 4131
    return v4

    .line 4133
    :cond_1c
    :try_start_1c
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1f
    .catchall {:try_start_1c .. :try_end_1f} :catchall_41

    move-result v2

    if-nez v2, :cond_24

    monitor-exit p0

    .line 4134
    return v4

    .line 4136
    :cond_24
    :try_start_24
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4137
    const/16 v3, 0x1b

    .line 4136
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_2b
    .catchall {:try_start_24 .. :try_end_2b} :catchall_41

    monitor-exit p0

    .line 4139
    const/4 v1, 0x5

    .line 4141
    .local v1, "maximumapplist":I
    if-eqz p2, :cond_6f

    .line 4142
    if-eqz p3, :cond_37

    invoke-interface {p3}, Ljava/util/List;->size()I

    move-result v2

    if-nez v2, :cond_44

    .line 4143
    :cond_37
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    .line 4144
    const-string/jumbo v3, "[setAllowNotifySpecificProcessKillEvent] packagelist size is 0 or null)"

    .line 4143
    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4145
    return v4

    .line 4128
    .end local v1    # "maximumapplist":I
    :catchall_41
    move-exception v2

    monitor-exit p0

    throw v2

    .line 4147
    .restart local v1    # "maximumapplist":I
    :cond_44
    invoke-interface {p3}, Ljava/util/List;->size()I

    move-result v2

    if-le v2, v5, :cond_6f

    .line 4148
    new-instance v0, Landroid/content/Intent;

    .line 4149
    const-string/jumbo v2, "com.lge.mdm.intent.action.NOTIFY_SPECIFIC_PROCESS_MAXIMUM_EXCEED"

    .line 4148
    invoke-direct {v0, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4150
    .local v0, "broadcastIntent":Landroid/content/Intent;
    const-string/jumbo v2, "COMPONENT_NAME"

    invoke-virtual {v0, v2, p1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 4151
    const-string/jumbo v2, "AVAILABLE_PACKAGE_NUMBER"

    invoke-virtual {v0, v2, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 4152
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v2

    invoke-virtual {v2, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 4153
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    .line 4154
    const-string/jumbo v3, "[setAllowNotifySpecificProcessKillEvent] packagelist is exceeded Maximum"

    .line 4153
    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4155
    return v4

    .line 4159
    .end local v0    # "broadcastIntent":Landroid/content/Intent;
    :cond_6f
    monitor-enter p0

    .line 4160
    :try_start_70
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v2, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowNotifySpecificProcessKillEvent(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 4162
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v3, "lgmdm_application_policies.xml"

    invoke-virtual {v2, v3, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4163
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setAllowNotifySpecificProcessKillEvent : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string/jumbo v4, ", list : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_a2
    .catchall {:try_start_70 .. :try_end_a2} :catchall_a5

    monitor-exit p0

    .line 4165
    const/4 v2, 0x1

    return v2

    .line 4159
    :catchall_a5
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public setAllowOSUpdate(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6029
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6030
    monitor-enter p0

    .line 6031
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6032
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_48

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6033
    return-void

    .line 6035
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_48

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6036
    return-void

    .line 6038
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6039
    const/4 v1, 0x2

    .line 6038
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6040
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowOSUpdate(Landroid/content/ComponentName;ZI)V

    .line 6041
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6042
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowOSUpdate : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_46
    .catchall {:try_start_19 .. :try_end_46} :catchall_48

    monitor-exit p0

    .line 6028
    return-void

    .line 6030
    :catchall_48
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowOwnerInfo(Landroid/content/ComponentName;II)V
    .registers 13
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 7131
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7132
    const/4 v1, 0x0

    .line 7133
    .local v1, "needChangeIntent":Z
    const/4 v5, -0x1

    .line 7134
    .local v5, "preStateOwnerInfo":I
    const/4 v2, -0x1

    .line 7135
    .local v2, "newGlobalPolicy":I
    if-ltz p2, :cond_d

    const/4 v6, 0x2

    if-le p2, v6, :cond_e

    .line 7136
    :cond_d
    return-void

    .line 7138
    :cond_e
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v6}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getLockSettings()Lcom/android/internal/widget/ILockSettings;

    move-result-object v6

    if-nez v6, :cond_17

    .line 7139
    return-void

    .line 7141
    :cond_17
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v6, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getLockScreenOwnerInfoEnabled(I)I

    move-result v4

    .line 7142
    .local v4, "ownerInfoEnabled":I
    monitor-enter p0

    .line 7143
    :try_start_1e
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v7, 0x0

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowOwnerInfo(Landroid/content/ComponentName;I)I

    move-result v3

    .line 7145
    .local v3, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7146
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_2b
    .catchall {:try_start_1e .. :try_end_2b} :catchall_92

    move-result v6

    if-nez v6, :cond_30

    monitor-exit p0

    .line 7147
    return-void

    .line 7149
    :cond_30
    :try_start_30
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_33
    .catchall {:try_start_30 .. :try_end_33} :catchall_92

    move-result v6

    if-nez v6, :cond_38

    monitor-exit p0

    .line 7150
    return-void

    .line 7153
    :cond_38
    :try_start_38
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7154
    const/16 v7, 0x28

    .line 7153
    invoke-virtual {v6, p1, v7}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7155
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v6, p1, p2, v4, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowOwnerInfo(Landroid/content/ComponentName;III)I

    move-result v5

    .line 7157
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v7, "lgmdm_general_policies.xml"

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7159
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v7, 0x0

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowOwnerInfo(Landroid/content/ComponentName;I)I
    :try_end_53
    .catchall {:try_start_38 .. :try_end_53} :catchall_92

    move-result v2

    .line 7160
    if-eq v3, v2, :cond_90

    const/4 v1, 0x1

    :goto_57
    monitor-exit p0

    .line 7163
    if-eqz v1, :cond_8f

    .line 7164
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v6, p3, v2, v5}, Lcom/lge/mdm/controller/LGMDMGeneralController;->settingOwnerInfo(III)V

    .line 7167
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v6, "com.lge.mdm.intent.action.OWNER_INFO_CHANGE"

    invoke-direct {v0, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7168
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v6

    invoke-virtual {v6, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7169
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setAllowOwnerInfo : "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, " (0:NONE, 1:ENABLED, 2:DISABLED)"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7130
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_8f
    return-void

    .line 7160
    :cond_90
    const/4 v1, 0x0

    goto :goto_57

    .line 7142
    .end local v3    # "oldGlobalPolicy":I
    :catchall_92
    move-exception v6

    monitor-exit p0

    throw v6
.end method

.method public setAllowPOPIMAPEmail(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4351
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4352
    monitor-enter p0

    .line 4353
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4354
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_41

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 4355
    return-void

    .line 4357
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4358
    const/16 v1, 0xa

    .line 4357
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4359
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setAllowPOPIMAPEmail(Landroid/content/ComponentName;ZI)V

    .line 4360
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4361
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowPOPIMAPEmail : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3f
    .catchall {:try_start_11 .. :try_end_3f} :catchall_41

    monitor-exit p0

    .line 4350
    return-void

    .line 4352
    :catchall_41
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowPassiveProvider(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6898
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6899
    monitor-enter p0

    .line 6900
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6901
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6902
    return-void

    .line 6904
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6905
    return-void

    .line 6907
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6908
    const/16 v1, 0x16

    .line 6907
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6909
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->setAllowPassiveProvider(Landroid/content/ComponentName;ZI)V

    .line 6910
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6911
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowPassiveProvider : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6897
    return-void

    .line 6899
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowPasswordComplexForEAS(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 3112
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3113
    monitor-enter p0

    .line 3114
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3115
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_40

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3116
    return-void

    .line 3118
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3119
    const/4 v1, 0x0

    .line 3118
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3120
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setAllowPasswordComplexForEAS(Landroid/content/ComponentName;ZI)V

    .line 3121
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3122
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowPasswordComplexForEAS : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3e
    .catchall {:try_start_11 .. :try_end_3e} :catchall_40

    monitor-exit p0

    .line 3111
    return-void

    .line 3113
    :catchall_40
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowPasswordTypingVisible(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6650
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6651
    const/4 v1, 0x0

    .line 6652
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6653
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowPasswordTypingVisible(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6655
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6656
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6e

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 6657
    return-void

    .line 6659
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6e

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 6660
    return-void

    .line 6662
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6663
    const/16 v5, 0x21

    .line 6662
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6664
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowPasswordTypingVisible(Landroid/content/ComponentName;ZI)V

    .line 6665
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6667
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowPasswordTypingVisible(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_6e

    move-result v2

    .line 6669
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6c

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 6672
    if-eqz v1, :cond_6b

    .line 6674
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.SECURITY_SETTING_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6675
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6676
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowPasswordTypingVisible : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6649
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6b
    return-void

    .line 6669
    :cond_6c
    const/4 v1, 0x0

    goto :goto_3f

    .line 6652
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6e
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowPasswordVisible(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7029
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7030
    const/4 v1, 0x0

    .line 7031
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 7032
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowPasswordVisible(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 7035
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7036
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6e

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 7037
    return-void

    .line 7039
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6e

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 7040
    return-void

    .line 7043
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7044
    const/16 v5, 0x21

    .line 7043
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7045
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowPasswordVisible(Landroid/content/ComponentName;ZI)V

    .line 7046
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7048
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowPasswordVisible(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_6e

    move-result v2

    .line 7050
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6c

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 7053
    if-eqz v1, :cond_6b

    .line 7055
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.PASSWORD_VISIBLE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7056
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7057
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowPasswordVisible : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7028
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6b
    return-void

    .line 7050
    :cond_6c
    const/4 v1, 0x0

    goto :goto_3f

    .line 7031
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6e
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowPowerOff(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8146
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8147
    const/4 v1, 0x0

    .line 8148
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 8149
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPowerOffController:Lcom/lge/mdm/controller/LGMDMPowerOffController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMPowerOffController;->getAllowPowerOff(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 8151
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8152
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_71

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 8153
    return-void

    .line 8155
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_71

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 8156
    return-void

    .line 8158
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8159
    const/16 v5, 0x36

    .line 8158
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8160
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPowerOffController:Lcom/lge/mdm/controller/LGMDMPowerOffController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPowerOffController;->setAllowPowerOff(Landroid/content/ComponentName;ZI)Z

    move-result v4

    if-eqz v4, :cond_42

    .line 8161
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8162
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPowerOffController:Lcom/lge/mdm/controller/LGMDMPowerOffController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMPowerOffController;->getAllowPowerOff(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 8164
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6f

    const/4 v1, 0x1

    .line 8166
    .end local v2    # "newGlobalPolicy":Z
    :cond_42
    :goto_42
    if-eqz v1, :cond_6d

    .line 8167
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_POWER_OFF_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8168
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 8169
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowPowerOff : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_6d
    .catchall {:try_start_21 .. :try_end_6d} :catchall_71

    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6d
    monitor-exit p0

    .line 8145
    return-void

    .line 8164
    .restart local v2    # "newGlobalPolicy":Z
    :cond_6f
    const/4 v1, 0x0

    goto :goto_42

    .line 8148
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_71
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowQuickCircle(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8183
    const/4 v2, 0x1

    .line 8184
    .local v2, "oldGlobalPolicy":Z
    const/4 v1, 0x1

    .line 8185
    .local v1, "newGlobalPolicy":Z
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8186
    monitor-enter p0

    .line 8187
    :try_start_8
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8188
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_e
    .catchall {:try_start_8 .. :try_end_e} :catchall_74

    move-result v3

    if-nez v3, :cond_13

    monitor-exit p0

    .line 8189
    return-void

    .line 8191
    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_16
    .catchall {:try_start_13 .. :try_end_16} :catchall_74

    move-result v3

    if-nez v3, :cond_1b

    monitor-exit p0

    .line 8192
    return-void

    .line 8194
    :cond_1b
    :try_start_1b
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8195
    const/16 v4, 0x33

    .line 8194
    invoke-virtual {v3, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8196
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    const/4 v4, 0x0

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/controller/LGMDMQuickCoverController;->getAllowQuickCircle(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 8197
    .local v2, "oldGlobalPolicy":Z
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMQuickCoverController;->setAllowQuickCircle(Landroid/content/ComponentName;ZI)Z

    move-result v3

    if-eqz v3, :cond_39

    .line 8198
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_hardware_policies.xml"

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8200
    :cond_39
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    const/4 v4, 0x0

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/controller/LGMDMQuickCoverController;->getAllowQuickCircle(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_1b .. :try_end_3f} :catchall_74

    move-result v1

    .local v1, "newGlobalPolicy":Z
    monitor-exit p0

    .line 8202
    if-eq v2, v1, :cond_73

    .line 8203
    if-nez v1, :cond_4a

    .line 8204
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMQuickCoverController:Lcom/lge/mdm/controller/LGMDMQuickCoverController;

    invoke-virtual {v3}, Lcom/lge/mdm/controller/LGMDMQuickCoverController;->updateSmartCoverOpen()V

    .line 8207
    :cond_4a
    new-instance v0, Landroid/content/Intent;

    .line 8208
    const-string/jumbo v3, "com.lge.mdm.intent.action.ACTION_QUICKCIRCLE_POLICY_CHANGED"

    .line 8207
    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 8209
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v3

    invoke-virtual {v3, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 8210
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowQuickCircle : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 8182
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_73
    return-void

    .line 8186
    .end local v2    # "oldGlobalPolicy":Z
    .local v1, "newGlobalPolicy":Z
    :catchall_74
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public setAllowReadyToConnectInBluetooth(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8331
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8332
    monitor-enter p0

    .line 8334
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8335
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_52

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 8336
    return-void

    .line 8338
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_52

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 8339
    return-void

    .line 8342
    :cond_19
    :try_start_19
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "setAllowReadyToConnectInBluetooth : LGMDMDevPolicyMngrService"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8343
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8344
    const/16 v1, 0xf

    .line 8343
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8345
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setAllowReadyToConnectInBluetooth(Landroid/content/ComponentName;ZI)V

    .line 8346
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8347
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowReadyToConnectInBluetooth : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_50
    .catchall {:try_start_19 .. :try_end_50} :catchall_52

    monitor-exit p0

    .line 8330
    return-void

    .line 8332
    :catchall_52
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowReceivingSmsMms(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7758
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7759
    monitor-enter p0

    .line 7760
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7761
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_48

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 7762
    return-void

    .line 7764
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_48

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 7765
    return-void

    .line 7767
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7768
    const/4 v1, 0x5

    .line 7767
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7769
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMessageController:Lcom/lge/mdm/controller/LGMDMMessageController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMessageController;->setAllowReceivingSmsMms(Landroid/content/ComponentName;ZI)V

    .line 7770
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7771
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowReceivingSmsMms : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_46
    .catchall {:try_start_19 .. :try_end_46} :catchall_48

    monitor-exit p0

    .line 7757
    return-void

    .line 7759
    :catchall_48
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowRemoveDeviceAdmin(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 3572
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3573
    const/4 v1, 0x0

    .line 3574
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 3575
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    .line 3576
    const/4 v5, 0x0

    .line 3575
    invoke-virtual {v4, p1, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowRemoveDeviceAdmin(Landroid/content/ComponentName;Ljava/lang/String;I)Z

    move-result v3

    .line 3577
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3578
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_5f

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 3579
    return-void

    .line 3581
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3582
    const/4 v5, 0x1

    .line 3581
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3583
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowRemoveDeviceAdmin(Landroid/content/ComponentName;ZI)V

    .line 3584
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_application_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_2c
    .catchall {:try_start_19 .. :try_end_2c} :catchall_5f

    .line 3586
    move v2, p2

    .line 3587
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_5d

    const/4 v1, 0x1

    :goto_30
    monitor-exit p0

    .line 3590
    if-eqz v1, :cond_5c

    .line 3592
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.REMOVE_ADMIN_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3593
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 3594
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowRemoveDeviceAdmin : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3571
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_5c
    return-void

    .line 3587
    :cond_5d
    const/4 v1, 0x0

    goto :goto_30

    .line 3574
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_5f
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowRemoveGoogleAccount(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6446
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6447
    monitor-enter p0

    .line 6448
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6449
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6450
    return-void

    .line 6452
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6453
    return-void

    .line 6455
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6456
    const/16 v1, 0x20

    .line 6455
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6457
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowRemoveGoogleAccount(Landroid/content/ComponentName;ZI)V

    .line 6458
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6459
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowRemoveGoogleAccount : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6445
    return-void

    .line 6447
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowSafeMode(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8283
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8284
    monitor-enter p0

    .line 8285
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8286
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_52

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 8287
    return-void

    .line 8289
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_52

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 8290
    return-void

    .line 8293
    :cond_19
    :try_start_19
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "setAllowSafeMode : LGMDMDevPolicyMngrService"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8294
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8295
    const/16 v1, 0x35

    .line 8294
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8296
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMDeviceController;->setAllowSafeMode(Landroid/content/ComponentName;ZI)V

    .line 8297
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8298
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowSafeMode : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_50
    .catchall {:try_start_19 .. :try_end_50} :catchall_52

    monitor-exit p0

    .line 8282
    return-void

    .line 8284
    :catchall_52
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowScreenCapture(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2490
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2491
    const/4 v1, 0x0

    .line 2492
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 2493
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCapture(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 2496
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2497
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_78

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 2498
    return-void

    .line 2500
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_78

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 2501
    return-void

    .line 2503
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2504
    const/16 v5, 0x15

    .line 2503
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2505
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->setAllowScreenCapture(Landroid/content/ComponentName;ZI)V

    .line 2506
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    .line 2507
    const/4 v5, 0x6

    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDisallowUSBType(II)Z

    move-result v5

    .line 2506
    invoke-virtual {v4, p1, v5, p3}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->settingScreencapture(Landroid/content/ComponentName;ZI)V

    .line 2508
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2510
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCapture(Landroid/content/ComponentName;I)Z
    :try_end_45
    .catchall {:try_start_21 .. :try_end_45} :catchall_78

    move-result v2

    .line 2512
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_76

    const/4 v1, 0x1

    :goto_49
    monitor-exit p0

    .line 2515
    if-eqz v1, :cond_75

    .line 2517
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.SCREEN_CAPTURE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2518
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2519
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowScreenCapture : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2489
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_75
    return-void

    .line 2512
    :cond_76
    const/4 v1, 0x0

    goto :goto_49

    .line 2492
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_78
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowScreenCaptureBlacklistWithoutADB(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 2606
    .local p3, "blacklist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2607
    monitor-enter p0

    .line 2608
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2609
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2610
    return-void

    .line 2612
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 2613
    return-void

    .line 2615
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2616
    const/16 v1, 0x15

    .line 2615
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2617
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->setAllowScreenCaptureBlacklistWithoutADB(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 2618
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2619
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowScreenCaptureBlacklistWithoutADB : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_19 .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 2605
    return-void

    .line 2607
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowScreenCaptureWhitelistWithoutADB(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 2639
    .local p3, "whitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2640
    monitor-enter p0

    .line 2641
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2642
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2643
    return-void

    .line 2645
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 2646
    return-void

    .line 2648
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2649
    const/16 v1, 0x15

    .line 2648
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2651
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->setAllowScreenCaptureWhitelistWithoutADB(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 2652
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2653
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowScreenCaptureWhitelistWithoutADB : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_19 .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 2638
    return-void

    .line 2640
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowScreenCaptureWithBlacklist(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 2567
    .local p3, "blacklist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2568
    const/4 v1, 0x0

    .line 2569
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 2570
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    .line 2571
    const/4 v5, 0x0

    .line 2570
    invoke-virtual {v4, v5, p4}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCaptureBlacklist(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 2573
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2574
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_83

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 2575
    return-void

    .line 2577
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_83

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 2578
    return-void

    .line 2580
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2581
    const/16 v5, 0x15

    .line 2580
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2582
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v4, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->setAllowScreenCaptureBlacklist(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 2584
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    .line 2585
    const/4 v5, 0x6

    invoke-virtual {p0, v5, p4}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDisallowUSBType(II)Z

    move-result v5

    .line 2584
    invoke-virtual {v4, p1, p2, v5}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->forceRearrangingADB(Landroid/content/ComponentName;ZZ)V

    .line 2586
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2588
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    .line 2589
    const/4 v5, 0x0

    .line 2588
    invoke-virtual {v4, v5, p4}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->isAllowedScreenCaptureBlacklist(Landroid/content/ComponentName;I)Z
    :try_end_45
    .catchall {:try_start_21 .. :try_end_45} :catchall_83

    move-result v2

    .line 2590
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_81

    const/4 v1, 0x1

    :goto_49
    monitor-exit p0

    .line 2593
    if-eqz v1, :cond_80

    .line 2595
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.SCREEN_CAPTURE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2596
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2597
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowScreenCaptureWithBlacklist : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, ", list : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2566
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_80
    return-void

    .line 2590
    :cond_81
    const/4 v1, 0x0

    goto :goto_49

    .line 2569
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_83
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowScreenCaptureWithoutADB(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2524
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2525
    monitor-enter p0

    .line 2526
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2527
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2528
    return-void

    .line 2530
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 2531
    return-void

    .line 2533
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2534
    const/16 v1, 0x15

    .line 2533
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2535
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMScreenCaptureController:Lcom/lge/mdm/controller/LGMDMScreenCaptureController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMScreenCaptureController;->setAllowScreenCaptureWithoutADB(Landroid/content/ComponentName;ZI)V

    .line 2536
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2537
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowScreenCaptureWithoutADB : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 2523
    return-void

    .line 2525
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowScreenPin(Landroid/content/ComponentName;ZI)V
    .registers 14
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7071
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v7, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7072
    const/4 v4, 0x0

    .line 7073
    .local v4, "needChangeIntent":Z
    monitor-enter p0

    .line 7074
    :try_start_7
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    .line 7075
    const/4 v8, 0x0

    .line 7074
    invoke-virtual {v7, v8, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowScreenPin(Landroid/content/ComponentName;I)Z

    move-result v6

    .line 7077
    .local v6, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7078
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_ae

    move-result v7

    if-nez v7, :cond_19

    monitor-exit p0

    .line 7079
    return-void

    .line 7081
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_ae

    move-result v7

    if-nez v7, :cond_21

    monitor-exit p0

    .line 7082
    return-void

    .line 7085
    :cond_21
    :try_start_21
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7086
    const/16 v8, 0x1b

    .line 7085
    invoke-virtual {v7, p1, v8}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7087
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v7, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowScreenPin(Landroid/content/ComponentName;ZI)V

    .line 7088
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v8, "lgmdm_application_policies.xml"

    invoke-virtual {v7, v8, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7090
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    .line 7091
    const/4 v8, 0x0

    .line 7090
    invoke-virtual {v7, v8, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowScreenPin(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_ae

    move-result v5

    .line 7092
    .local v5, "newGlobalPolicy":Z
    if-eq v6, v5, :cond_ac

    const/4 v4, 0x1

    :goto_3f
    monitor-exit p0

    .line 7095
    if-eqz v4, :cond_6b

    .line 7097
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v7, "com.lge.mdm.intent.action.ACTION_SCREEN_PIN_POLICY_CHANGE"

    invoke-direct {v1, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7098
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v7

    invoke-virtual {v7, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7099
    const-string/jumbo v7, "LGMDMDevicePolicyManagerService"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "setAllowScreenPin : "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7102
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_6b
    if-nez p2, :cond_ab

    .line 7103
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 7105
    .local v2, "identity":J
    :try_start_71
    iget-object v7, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    .line 7106
    const-string/jumbo v8, "activity"

    .line 7105
    invoke-virtual {v7, v8}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager;

    .line 7108
    .local v0, "am":Landroid/app/ActivityManager;
    const-string/jumbo v7, "LGMDMDevicePolicyManagerService"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v9, "setAllowScreenPin="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v0}, Landroid/app/ActivityManager;->isInLockTaskMode()Z

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 7109
    invoke-virtual {v0}, Landroid/app/ActivityManager;->isInLockTaskMode()Z

    move-result v7

    if-eqz v7, :cond_a8

    .line 7110
    invoke-virtual {v0}, Landroid/app/ActivityManager;->stopLockTaskMode()V

    .line 7111
    sget v7, Lcom/lge/internal/R$string;->sp_block_screen_pin_NORMAL:I

    invoke-virtual {p0, v7, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->sendToastMessageId(II)V
    :try_end_a8
    .catchall {:try_start_71 .. :try_end_a8} :catchall_b1

    .line 7115
    :cond_a8
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7070
    .end local v0    # "am":Landroid/app/ActivityManager;
    .end local v2    # "identity":J
    :cond_ab
    return-void

    .line 7092
    :cond_ac
    const/4 v4, 0x0

    goto :goto_3f

    .line 7073
    .end local v5    # "newGlobalPolicy":Z
    .end local v6    # "oldGlobalPolicy":Z
    :catchall_ae
    move-exception v7

    monitor-exit p0

    throw v7

    .line 7114
    .restart local v2    # "identity":J
    .restart local v5    # "newGlobalPolicy":Z
    .restart local v6    # "oldGlobalPolicy":Z
    :catchall_b1
    move-exception v7

    .line 7115
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 7114
    throw v7
.end method

.method public setAllowSendingSMS(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2742
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2743
    monitor-enter p0

    .line 2744
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2745
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 2746
    return-void

    .line 2748
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2749
    const/4 v1, 0x5

    .line 2748
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2750
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMessageController:Lcom/lge/mdm/controller/LGMDMMessageController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMessageController;->setAllowSendingSMS(Landroid/content/ComponentName;ZI)V

    .line 2751
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_24
    .catchall {:try_start_11 .. :try_end_24} :catchall_49

    monitor-exit p0

    .line 2753
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-static {}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getInstance()Lcom/lge/mdm/controller/LGMDMApplicationController;

    move-result-object v0

    invoke-virtual {v0, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->updateWatcherAndKeeper(I)V

    .line 2754
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowSendingSMS : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2741
    return-void

    .line 2743
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowShortcutKey(Landroid/content/ComponentName;ZI)V
    .registers 13
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1969
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1971
    const/4 v4, 0x1

    .line 1972
    .local v4, "oldPolicyLocal":Z
    const/4 v3, 0x1

    .line 1973
    .local v3, "oldPolicyGlobal":Z
    const/4 v2, 0x1

    .line 1974
    .local v2, "newPolicyGlobal":Z
    const/4 v1, 0x0

    .line 1976
    .local v1, "isChagedGlobal":Z
    const/4 v5, -0x1

    .line 1978
    .local v5, "value":I
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "[setAllowShortKey][allow="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "][userHandle="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "]"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Lcom/lge/mdm/util/MDMLog;->v(Ljava/lang/String;Ljava/lang/String;)V

    .line 1979
    monitor-enter p0

    .line 1980
    :try_start_37
    invoke-virtual {p0, p1, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowShortcutKey(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 1981
    .local v4, "oldPolicyLocal":Z
    if-ne v4, p2, :cond_6b

    .line 1982
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, ":Not affected [oldPolicyLocal="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "][allow="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "]"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_69
    .catchall {:try_start_37 .. :try_end_69} :catchall_12d

    monitor-exit p0

    .line 1983
    return-void

    .line 1986
    :cond_6b
    :try_start_6b
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1987
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_71
    .catchall {:try_start_6b .. :try_end_71} :catchall_12d

    move-result v6

    if-nez v6, :cond_76

    monitor-exit p0

    .line 1988
    return-void

    .line 1990
    :cond_76
    :try_start_76
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_79
    .catchall {:try_start_76 .. :try_end_79} :catchall_12d

    move-result v6

    if-nez v6, :cond_7e

    monitor-exit p0

    .line 1991
    return-void

    .line 1994
    :cond_7e
    const/4 v6, 0x0

    :try_start_7f
    invoke-virtual {p0, v6, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowShortcutKey(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1995
    .local v3, "oldPolicyGlobal":Z
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1996
    const/16 v7, 0x34

    .line 1995
    invoke-virtual {v6, p1, v7}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1997
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMShortcutKeyController:Lcom/lge/mdm/controller/LGMDMShortcutKeyController;

    invoke-virtual {v6, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMShortcutKeyController;->setAllowShortcutKeyPolicy(Landroid/content/ComponentName;ZI)I

    move-result v5

    .line 1998
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v7, "lgmdm_hardware_policies.xml"

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1999
    const/4 v6, 0x0

    invoke-virtual {p0, v6, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowShortcutKey(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 2000
    .local v2, "newPolicyGlobal":Z
    if-eq v3, v2, :cond_12a

    const/4 v1, 0x1

    .line 2002
    :goto_a0
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "[oldPolicyGlobal="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "][newPolicyGlobal="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "]"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V

    .line 2003
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "[oldPolicyLocal="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "][isChagedGlobal="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string/jumbo v8, "]"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Lcom/lge/mdm/util/MDMLog;->d(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_f8
    .catchall {:try_start_7f .. :try_end_f8} :catchall_12d

    monitor-exit p0

    .line 2006
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMShortcutKeyController:Lcom/lge/mdm/controller/LGMDMShortcutKeyController;

    invoke-virtual {v6, v5}, Lcom/lge/mdm/controller/LGMDMShortcutKeyController;->setShortcutKeyValueAtSystem(I)V

    .line 2008
    if-eqz v1, :cond_129

    .line 2009
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v6, "com.lge.mdm.intent.action.ACTION_SHORTCUT_KEY_POLICY_CHANGE"

    invoke-direct {v0, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2010
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v6

    invoke-virtual {v6, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2011
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setAllowShortcutKey : "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1968
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_129
    return-void

    .line 2000
    :cond_12a
    const/4 v1, 0x0

    goto/16 :goto_a0

    .line 1979
    .end local v2    # "newPolicyGlobal":Z
    .end local v3    # "oldPolicyGlobal":Z
    .end local v4    # "oldPolicyLocal":Z
    :catchall_12d
    move-exception v6

    monitor-exit p0

    throw v6
.end method

.method public setAllowSignatureState(Landroid/content/ComponentName;ZLjava/util/List;I)I
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMSignatureState;",
            ">;I)I"
        }
    .end annotation

    .prologue
    .local p3, "signatureStateList":Ljava/util/List;, "Ljava/util/List<Lcom/lge/mdm/config/LGMDMSignatureState;>;"
    const/4 v2, -0x1

    .line 3781
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3782
    const/4 v0, 0x1

    .line 3783
    .local v0, "result":I
    monitor-enter p0

    .line 3784
    :try_start_8
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3785
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_e
    .catchall {:try_start_8 .. :try_end_e} :catchall_65

    move-result v1

    if-nez v1, :cond_13

    monitor-exit p0

    .line 3786
    return v2

    .line 3788
    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_16
    .catchall {:try_start_13 .. :try_end_16} :catchall_65

    move-result v1

    if-nez v1, :cond_1b

    monitor-exit p0

    .line 3789
    return v2

    .line 3791
    :cond_1b
    :try_start_1b
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3792
    const/4 v2, 0x2

    .line 3791
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3793
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3794
    const/4 v2, 0x2

    .line 3793
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3795
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3796
    const/4 v2, 0x2

    .line 3795
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3797
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowSignatureState(Landroid/content/ComponentName;ZLjava/util/List;I)I

    move-result v0

    .line 3799
    const/4 v1, 0x1

    if-ne v0, v1, :cond_63

    .line 3800
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_list_signaturestate_policies.xml"

    invoke-virtual {v1, v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3801
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setAllowSignatureState : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, ", list : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_63
    .catchall {:try_start_1b .. :try_end_63} :catchall_65

    :cond_63
    monitor-exit p0

    .line 3807
    return v0

    .line 3783
    :catchall_65
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setAllowSimplePasswordEx(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "mode"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 3027
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3028
    monitor-enter p0

    .line 3029
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3030
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_47

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3031
    return-void

    .line 3033
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3034
    const/4 v1, 0x0

    .line 3033
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3035
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setAllowSimplePasswordEx(Landroid/content/ComponentName;II)V

    .line 3036
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3037
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowSimplePasswordEx : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3038
    const-string/jumbo v2, " (0:NONE, 1:FOUR_LETTERS, 2:THREE_LETTERS)"

    .line 3037
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_45
    .catchall {:try_start_11 .. :try_end_45} :catchall_47

    monitor-exit p0

    .line 3026
    return-void

    .line 3028
    :catchall_47
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowSpecificApplication(Landroid/content/ComponentName;Ljava/lang/String;ZI)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "applicationName"    # Ljava/lang/String;
    .param p3, "allow"    # Z
    .param p4, "userHandle"    # I

    .prologue
    .line 4207
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4208
    monitor-enter p0

    .line 4209
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4210
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_53

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 4211
    return-void

    .line 4213
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_53

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 4214
    return-void

    .line 4216
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4217
    const/4 v1, 0x2

    .line 4216
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4218
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowSpecificApplication(Landroid/content/ComponentName;Ljava/lang/String;ZI)V

    .line 4219
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4220
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowSpecificApplication : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", applicationName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_51
    .catchall {:try_start_19 .. :try_end_51} :catchall_53

    monitor-exit p0

    .line 4206
    return-void

    .line 4208
    :catchall_53
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowSpecificKey(Landroid/content/ComponentName;IZI)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "keyType"    # I
    .param p3, "allow"    # Z
    .param p4, "userHandle"    # I

    .prologue
    .line 5996
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5997
    monitor-enter p0

    .line 5998
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5999
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_62

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6000
    return-void

    .line 6002
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_62

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6003
    return-void

    .line 6005
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6006
    const/16 v1, 0x1b

    .line 6005
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6007
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMKeyCotroller:Lcom/lge/mdm/controller/LGMDMKeyController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMKeyController;->setAllowSpecificKey(Landroid/content/ComponentName;IZI)V

    .line 6008
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6009
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowSpecificKey : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", keyType : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6010
    const-string/jumbo v2, "(0:HOME, 1:BACK, 2:MENU, 3:RECENT, 4:NOTIFICATION,"

    .line 6009
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 6011
    const-string/jumbo v2, "5:QSLIDE, 6:QMEMO, 7:DUALWINDOW)"

    .line 6009
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_60
    .catchall {:try_start_19 .. :try_end_60} :catchall_62

    monitor-exit p0

    .line 5995
    return-void

    .line 5997
    :catchall_62
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowStatusBarExpansion(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6746
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6747
    monitor-enter p0

    .line 6748
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6749
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6750
    return-void

    .line 6752
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6753
    return-void

    .line 6755
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6756
    const/16 v1, 0x22

    .line 6755
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6757
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowStatusBarExpansion(Landroid/content/ComponentName;ZI)V

    .line 6758
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6759
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowStatusBarExpansion : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6745
    return-void

    .line 6747
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowTethering(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1534
    const/4 v3, 0x1

    .line 1535
    .local v3, "oldGlobalPolicy":Z
    const/4 v2, 0x1

    .line 1536
    .local v2, "newGlobalPolicy":Z
    const/4 v0, 0x0

    .line 1537
    .local v0, "backupInfo":Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1538
    monitor-enter p0

    .line 1539
    :try_start_9
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowTethering(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1541
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1542
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_16
    .catchall {:try_start_9 .. :try_end_16} :catchall_77

    move-result v4

    if-nez v4, :cond_1b

    monitor-exit p0

    .line 1543
    return-void

    .line 1545
    :cond_1b
    :try_start_1b
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1546
    const/16 v5, 0x10

    .line 1545
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1547
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setAllowTethering(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;

    move-result-object v0

    .line 1548
    .local v0, "backupInfo":Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1550
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowTethering(Landroid/content/ComponentName;I)Z
    :try_end_36
    .catchall {:try_start_1b .. :try_end_36} :catchall_77

    move-result v2

    .local v2, "newGlobalPolicy":Z
    monitor-exit p0

    .line 1555
    if-nez v2, :cond_4b

    .line 1556
    if-eqz v0, :cond_41

    .line 1558
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setHotspotDisable(Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;)V

    .line 1561
    :cond_41
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setUsbTetheringDisable()V

    .line 1562
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v4}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setBluetoothTetheringDisable()V

    .line 1564
    :cond_4b
    if-eq v3, v2, :cond_76

    .line 1566
    new-instance v1, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.TETHER_POLICY_CHANGE"

    invoke-direct {v1, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1567
    .local v1, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v1}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1568
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowTethering : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1533
    .end local v1    # "intent":Landroid/content/Intent;
    :cond_76
    return-void

    .line 1538
    .end local v0    # "backupInfo":Lcom/lge/mdm/controller/LGMDMTetheringController$BackupPolicyInfo;
    .end local v3    # "oldGlobalPolicy":Z
    .local v2, "newGlobalPolicy":Z
    :catchall_77
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUSBDebugging(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2671
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2672
    const/4 v1, 0x0

    .line 2673
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 2674
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBDebugging(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 2676
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2677
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 2678
    return-void

    .line 2680
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2681
    const/16 v5, 0x13

    .line 2680
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2682
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUSBDebugging(Landroid/content/ComponentName;ZI)V

    .line 2683
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2685
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBDebugging(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 2686
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 2689
    if-eqz v1, :cond_63

    .line 2691
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2692
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2693
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUSBDebugging : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2670
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 2686
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 2673
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUSBHostStorage(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6866
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6867
    const/4 v1, 0x0

    .line 6868
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6869
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 6870
    const/4 v5, 0x0

    .line 6869
    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowUSBHostStorageStatus(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6872
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6873
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 6874
    return-void

    .line 6876
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6877
    const/16 v5, 0x11

    .line 6876
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6878
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->setAllowUSBHostStorage(Landroid/content/ComponentName;ZI)V

    .line 6879
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6881
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMExternalMemorySlotContoller:Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;

    .line 6882
    const/4 v5, 0x0

    .line 6881
    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMExternalMemorySlotContoller;->getAllowUSBHostStorageStatus(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 6883
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 6886
    if-eqz v1, :cond_63

    .line 6888
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.EXTERNAL_STORAGE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6889
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6890
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUSBHostStorage : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6865
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 6883
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 6868
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUSBMtp(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6162
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6163
    const/4 v1, 0x0

    .line 6164
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6165
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBMtp(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6167
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6168
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 6169
    return-void

    .line 6171
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6172
    const/16 v5, 0x13

    .line 6171
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6173
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUSBMtp(Landroid/content/ComponentName;ZI)V

    .line 6174
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6176
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBMtp(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 6177
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 6180
    if-eqz v1, :cond_63

    .line 6182
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6183
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6184
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUSBMtp : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6161
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 6177
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 6164
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUSBPtp(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6200
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6201
    const/4 v1, 0x0

    .line 6202
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6203
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBPtp(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6205
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6206
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 6207
    return-void

    .line 6209
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6210
    const/16 v5, 0x13

    .line 6209
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6211
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUSBPtp(Landroid/content/ComponentName;ZI)V

    .line 6212
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6214
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBPtp(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 6215
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 6218
    if-eqz v1, :cond_63

    .line 6220
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6221
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6222
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUSBPtp : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6199
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 6215
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 6202
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUSBStorage(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6238
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6239
    const/4 v1, 0x0

    .line 6240
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6241
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBStorage(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6243
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6244
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 6245
    return-void

    .line 6247
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6248
    const/16 v5, 0x13

    .line 6247
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6249
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUSBStorage(Landroid/content/ComponentName;ZI)V

    .line 6250
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6252
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUSBStorage(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 6253
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 6256
    if-eqz v1, :cond_63

    .line 6258
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6259
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6260
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUSBStorage : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6237
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 6253
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 6240
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUSBTethering(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1634
    const/4 v2, 0x1

    .line 1635
    .local v2, "oldGlobalPolicy":Z
    const/4 v1, 0x1

    .line 1636
    .local v1, "newGlobalPolicy":Z
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1637
    monitor-enter p0

    .line 1638
    :try_start_8
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v4, 0x0

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowUSBTethering(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 1640
    .local v2, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1641
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_69

    move-result v3

    if-nez v3, :cond_1a

    monitor-exit p0

    .line 1642
    return-void

    .line 1644
    :cond_1a
    :try_start_1a
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1645
    const/16 v4, 0x10

    .line 1644
    invoke-virtual {v3, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1646
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setAllowUSBTethering(Landroid/content/ComponentName;ZI)V

    .line 1647
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_hardware_policies.xml"

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1649
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    const/4 v4, 0x0

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->getAllowUSBTethering(Landroid/content/ComponentName;I)Z
    :try_end_34
    .catchall {:try_start_1a .. :try_end_34} :catchall_69

    move-result v1

    .local v1, "newGlobalPolicy":Z
    monitor-exit p0

    .line 1652
    if-nez v1, :cond_3d

    .line 1653
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMTetheringController:Lcom/lge/mdm/controller/LGMDMTetheringController;

    invoke-virtual {v3}, Lcom/lge/mdm/controller/LGMDMTetheringController;->setUsbTetheringDisable()V

    .line 1655
    :cond_3d
    if-eq v2, v1, :cond_68

    .line 1657
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v3, "com.lge.mdm.intent.action.TETHER_POLICY_CHANGE"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1658
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v3

    invoke-virtual {v3, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1659
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowUSBTethering : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1633
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_68
    return-void

    .line 1637
    .end local v2    # "oldGlobalPolicy":Z
    .local v1, "newGlobalPolicy":Z
    :catchall_69
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public setAllowUninstallApplication(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 3671
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3672
    monitor-enter p0

    .line 3673
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3674
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_48

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3675
    return-void

    .line 3677
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_48

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3678
    return-void

    .line 3680
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3681
    const/4 v1, 0x2

    .line 3680
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3682
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowUninstallApplication(Landroid/content/ComponentName;ZI)V

    .line 3683
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3684
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowUninstallApplication : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_46
    .catchall {:try_start_19 .. :try_end_46} :catchall_48

    monitor-exit p0

    .line 3670
    return-void

    .line 3672
    :catchall_48
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowUnknownSourceInstallation(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 3458
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3459
    const/4 v1, 0x0

    .line 3460
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 3461
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    .line 3462
    const/4 v5, 0x0

    .line 3461
    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowUnknownSourceInstallation(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 3464
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3465
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_65

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 3466
    return-void

    .line 3468
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3469
    const/4 v5, 0x2

    .line 3468
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3470
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowUnknownSourceInstallation(Landroid/content/ComponentName;ZI)V

    .line 3471
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_application_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3473
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    .line 3474
    const/4 v5, 0x0

    .line 3473
    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getAllowUnknownSourceInstallation(Landroid/content/ComponentName;I)Z
    :try_end_32
    .catchall {:try_start_19 .. :try_end_32} :catchall_65

    move-result v2

    .line 3475
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_63

    const/4 v1, 0x1

    :goto_36
    monitor-exit p0

    .line 3478
    if-eqz v1, :cond_62

    .line 3479
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_UNKNOWN_SOURCE_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3480
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 3481
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUnknownSourceInstallation : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3457
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_62
    return-void

    .line 3475
    :cond_63
    const/4 v1, 0x0

    goto :goto_36

    .line 3460
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_65
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUnsignedApplication(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 3850
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3851
    monitor-enter p0

    .line 3852
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3853
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_40

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3854
    return-void

    .line 3856
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3857
    const/4 v1, 0x2

    .line 3856
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3858
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAllowUnsignedApplication(Landroid/content/ComponentName;ZI)V

    .line 3859
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3860
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowUnsignedApplication : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3e
    .catchall {:try_start_11 .. :try_end_3e} :catchall_40

    monitor-exit p0

    .line 3849
    return-void

    .line 3851
    :catchall_40
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowUsb(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allowed"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1838
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1839
    const/4 v1, 0x0

    .line 1840
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 1841
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUsb(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1843
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1844
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 1845
    return-void

    .line 1847
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1848
    const/16 v5, 0x13

    .line 1847
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1849
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUsb(Landroid/content/ComponentName;ZI)V

    .line 1850
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1852
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->getAllowUsb(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 1853
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 1856
    if-eqz v1, :cond_63

    .line 1858
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1859
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1860
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowUsb : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1837
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 1853
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 1840
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowUsbData(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allowed"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v5, 0x0

    .line 1872
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1873
    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUsbData(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 1874
    .local v2, "oldPolicy":Z
    monitor-enter p0

    .line 1875
    :try_start_b
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1876
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_11
    .catchall {:try_start_b .. :try_end_11} :catchall_63

    move-result v3

    if-nez v3, :cond_16

    monitor-exit p0

    .line 1877
    return-void

    .line 1879
    :cond_16
    :try_start_16
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_63

    move-result v3

    if-nez v3, :cond_1e

    monitor-exit p0

    .line 1880
    return-void

    .line 1882
    :cond_1e
    :try_start_1e
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1883
    const/16 v4, 0x13

    .line 1882
    invoke-virtual {v3, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1884
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUsbData(Landroid/content/ComponentName;ZI)V

    .line 1885
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_hardware_policies.xml"

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_32
    .catchall {:try_start_1e .. :try_end_32} :catchall_63

    monitor-exit p0

    .line 1888
    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUsbData(Landroid/content/ComponentName;I)Z

    move-result v1

    .line 1889
    .local v1, "newPolicy":Z
    if-eq v2, v1, :cond_62

    .line 1891
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v3, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1892
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v3

    invoke-virtual {v3, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1893
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowUsbData : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1871
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_62
    return-void

    .line 1874
    .end local v1    # "newPolicy":Z
    :catchall_63
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public setAllowUsbDrive(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allowed"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v5, 0x0

    .line 1905
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1906
    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUsbDrive(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 1907
    .local v2, "oldPolicy":Z
    monitor-enter p0

    .line 1908
    :try_start_b
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1909
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_11
    .catchall {:try_start_b .. :try_end_11} :catchall_63

    move-result v3

    if-nez v3, :cond_16

    monitor-exit p0

    .line 1910
    return-void

    .line 1912
    :cond_16
    :try_start_16
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_63

    move-result v3

    if-nez v3, :cond_1e

    monitor-exit p0

    .line 1913
    return-void

    .line 1915
    :cond_1e
    :try_start_1e
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const/16 v4, 0x13

    invoke-virtual {v3, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1916
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUsbDrive(Landroid/content/ComponentName;ZI)V

    .line 1917
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_hardware_policies.xml"

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_32
    .catchall {:try_start_1e .. :try_end_32} :catchall_63

    monitor-exit p0

    .line 1920
    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUsbDrive(Landroid/content/ComponentName;I)Z

    move-result v1

    .line 1921
    .local v1, "newPolicy":Z
    if-eq v2, v1, :cond_62

    .line 1923
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v3, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1924
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v3

    invoke-virtual {v3, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1925
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowUsbDrive : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1904
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_62
    return-void

    .line 1907
    .end local v1    # "newPolicy":Z
    :catchall_63
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public setAllowUsbPort(Landroid/content/ComponentName;ZI)V
    .registers 10
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allowed"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v5, 0x0

    .line 1937
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1938
    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUsbPort(Landroid/content/ComponentName;I)Z

    move-result v2

    .line 1939
    .local v2, "oldPolicy":Z
    monitor-enter p0

    .line 1940
    :try_start_b
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1941
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_11
    .catchall {:try_start_b .. :try_end_11} :catchall_63

    move-result v3

    if-nez v3, :cond_16

    monitor-exit p0

    .line 1942
    return-void

    .line 1944
    :cond_16
    :try_start_16
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_19
    .catchall {:try_start_16 .. :try_end_19} :catchall_63

    move-result v3

    if-nez v3, :cond_1e

    monitor-exit p0

    .line 1945
    return-void

    .line 1947
    :cond_1e
    :try_start_1e
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const/16 v4, 0x13

    invoke-virtual {v3, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1948
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v3, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setAllowUsbPort(Landroid/content/ComponentName;ZI)V

    .line 1949
    iget-object v3, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v4, "lgmdm_hardware_policies.xml"

    invoke-virtual {v3, v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_32
    .catchall {:try_start_1e .. :try_end_32} :catchall_63

    monitor-exit p0

    .line 1952
    invoke-virtual {p0, v5, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowUsbPort(Landroid/content/ComponentName;I)Z

    move-result v1

    .line 1953
    .local v1, "newPolicy":Z
    if-eq v2, v1, :cond_62

    .line 1955
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v3, "com.lge.mdm.intent.action.USB_POLICY_CHANGE"

    invoke-direct {v0, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1956
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v3

    invoke-virtual {v3, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1957
    const-string/jumbo v3, "LGMDMDevicePolicyManagerService"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v5, "setAllowUsbPort : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1936
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_62
    return-void

    .line 1939
    .end local v1    # "newPolicy":Z
    :catchall_63
    move-exception v3

    monitor-exit p0

    throw v3
.end method

.method public setAllowVPNSplitTunneling(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2361
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2362
    const/4 v1, 0x0

    .line 2363
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 2364
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->getAllowVPNSplitTunneling(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 2366
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2367
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_71

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 2368
    return-void

    .line 2370
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_71

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 2371
    return-void

    .line 2373
    :cond_21
    if-eqz p3, :cond_25

    monitor-exit p0

    .line 2374
    return-void

    .line 2376
    :cond_25
    :try_start_25
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2377
    const/4 v5, 0x7

    .line 2376
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2378
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->setAllowVPNSplitTunneling(Landroid/content/ComponentName;ZI)V

    .line 2379
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2381
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->getAllowVPNSplitTunneling(Landroid/content/ComponentName;I)Z
    :try_end_3e
    .catchall {:try_start_25 .. :try_end_3e} :catchall_71

    move-result v2

    .line 2382
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6f

    const/4 v1, 0x1

    :goto_42
    monitor-exit p0

    .line 2385
    if-eqz v1, :cond_6e

    .line 2387
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.VPN_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2388
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2389
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowVPNSplitTunneling : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2360
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6e
    return-void

    .line 2382
    :cond_6f
    const/4 v1, 0x0

    goto :goto_42

    .line 2363
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_71
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowVerizonLocation(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6817
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6818
    const/4 v1, 0x0

    .line 6819
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 6820
    .local v4, "value":I
    monitor-enter p0

    .line 6821
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowVerizonLocation(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6823
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6824
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_75

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 6825
    return-void

    .line 6827
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_75

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 6828
    return-void

    .line 6830
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6831
    const/16 v6, 0x16

    .line 6830
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6832
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->setAllowVerizonLocation(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 6833
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6835
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowVerizonLocation(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_75

    move-result v2

    .line 6836
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_73

    const/4 v1, 0x1

    :goto_41
    monitor-exit p0

    .line 6838
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->settingGPSLocation(II)V

    .line 6839
    if-eqz v1, :cond_72

    .line 6841
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.LOCATION_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6842
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6843
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowVerizonLocation : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6816
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_72
    return-void

    .line 6836
    :cond_73
    const/4 v1, 0x0

    goto :goto_41

    .line 6820
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_75
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowVpn(Landroid/content/ComponentName;II)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allowType"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 2318
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2319
    const/4 v1, 0x0

    .line 2320
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 2321
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->getAllowVpn(Landroid/content/ComponentName;I)I

    move-result v3

    .line 2323
    .local v3, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2324
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6f

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 2325
    return-void

    .line 2327
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6f

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 2328
    return-void

    .line 2330
    :cond_21
    if-eqz p3, :cond_25

    monitor-exit p0

    .line 2331
    return-void

    .line 2333
    :cond_25
    :try_start_25
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2334
    const/4 v5, 0x7

    .line 2333
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2335
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->setAllowVpn(Landroid/content/ComponentName;II)V

    .line 2336
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2338
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->getAllowVpn(Landroid/content/ComponentName;I)I
    :try_end_3e
    .catchall {:try_start_25 .. :try_end_3e} :catchall_6f

    move-result v2

    .line 2339
    .local v2, "newGlobalPolicy":I
    if-eq v3, v2, :cond_42

    .line 2340
    const/4 v1, 0x1

    :cond_42
    monitor-exit p0

    .line 2344
    if-eqz v1, :cond_6e

    .line 2346
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.VPN_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2347
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2348
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowVpn : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2317
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6e
    return-void

    .line 2320
    .end local v2    # "newGlobalPolicy":I
    .end local v3    # "oldGlobalPolicy":I
    :catchall_6f
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowWiFiMacAddressList(Landroid/content/ComponentName;ILjava/util/List;I)V
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "listType"    # I
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 5897
    .local p3, "wblist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5898
    const/4 v0, 0x0

    .line 5899
    .local v0, "needUpdate":Z
    monitor-enter p0

    .line 5900
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5901
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_64

    move-result v1

    if-nez v1, :cond_12

    monitor-exit p0

    .line 5902
    return-void

    .line 5904
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_64

    move-result v1

    if-nez v1, :cond_1a

    monitor-exit p0

    .line 5905
    return-void

    .line 5907
    :cond_1a
    :try_start_1a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5908
    const/16 v2, 0x12

    .line 5907
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5909
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v1, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWiFiMacAddressList(Landroid/content/ComponentName;ILjava/util/List;I)Z

    move-result v0

    .line 5911
    .local v0, "needUpdate":Z
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_hardware_policies.xml"

    invoke-virtual {v1, v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_2f
    .catchall {:try_start_1a .. :try_end_2f} :catchall_64

    monitor-exit p0

    .line 5913
    if-eqz v0, :cond_63

    .line 5914
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v1, p4}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateConfiguredNetworksWithMacAddressList(I)V

    .line 5915
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setAllowWiFiMacAddressList, listType "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5916
    const-string/jumbo v3, " (0:NOT_USED, 1:BLACKLIST, 2:WHITE_LIST)"

    .line 5915
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5916
    const-string/jumbo v3, ", list : "

    .line 5915
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5896
    :cond_63
    return-void

    .line 5899
    .end local v0    # "needUpdate":Z
    :catchall_64
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setAllowWiFiProfileManagement(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6064
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6065
    monitor-enter p0

    .line 6066
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6067
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_6 .. :try_end_d} :catchall_4a

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 6068
    return-void

    .line 6070
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_4a

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 6071
    return-void

    .line 6073
    :cond_1a
    :try_start_1a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6074
    const/16 v1, 0x12

    .line 6073
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6075
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWiFiProfileManagement(Landroid/content/ComponentName;ZI)V

    .line 6076
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6077
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowWiFiProfileManagement : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_48
    .catchall {:try_start_1a .. :try_end_48} :catchall_4a

    monitor-exit p0

    .line 6063
    return-void

    .line 6065
    :catchall_4a
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowWiFiSSIDList(Landroid/content/ComponentName;ILjava/util/List;I)V
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "listType"    # I
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "I",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 5857
    .local p3, "wblist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5858
    const/4 v0, 0x0

    .line 5859
    .local v0, "needUpdate":Z
    monitor-enter p0

    .line 5860
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5861
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_64

    move-result v1

    if-nez v1, :cond_12

    monitor-exit p0

    .line 5862
    return-void

    .line 5864
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_64

    move-result v1

    if-nez v1, :cond_1a

    monitor-exit p0

    .line 5865
    return-void

    .line 5867
    :cond_1a
    :try_start_1a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5868
    const/16 v2, 0x12

    .line 5867
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5869
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v1, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWiFiSSIDList(Landroid/content/ComponentName;ILjava/util/List;I)Z

    move-result v0

    .line 5871
    .local v0, "needUpdate":Z
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_hardware_policies.xml"

    invoke-virtual {v1, v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_2f
    .catchall {:try_start_1a .. :try_end_2f} :catchall_64

    monitor-exit p0

    .line 5873
    if-eqz v0, :cond_63

    .line 5874
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v1, p4}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateConfiguredNetworksWithSSIDList(I)V

    .line 5875
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setAllowWiFiSSIDList, listType : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5876
    const-string/jumbo v3, " (0:NOT_USED, 1:BLACKLIST, 2:WHITELIST)"

    .line 5875
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    .line 5876
    const-string/jumbo v3, ", list : "

    .line 5875
    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5856
    :cond_63
    return-void

    .line 5859
    .end local v0    # "needUpdate":Z
    :catchall_64
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setAllowWifi(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 640
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 641
    const/4 v1, 0x0

    .line 642
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 643
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifi(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 644
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 645
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_66

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 646
    return-void

    .line 648
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 649
    const/16 v5, 0x12

    .line 648
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 650
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWifi(Landroid/content/ComponentName;ZI)V

    .line 651
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 652
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifi(Landroid/content/ComponentName;I)Z
    :try_end_33
    .catchall {:try_start_19 .. :try_end_33} :catchall_66

    move-result v2

    .line 653
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_64

    const/4 v1, 0x1

    :goto_37
    monitor-exit p0

    .line 656
    if-eqz v1, :cond_63

    .line 658
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.WIFI_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 659
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 660
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowWifi : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 639
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_63
    return-void

    .line 653
    :cond_64
    const/4 v1, 0x0

    goto :goto_37

    .line 642
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_66
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowWifiAutoConnection(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 5937
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5938
    monitor-enter p0

    .line 5939
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5940
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 5941
    return-void

    .line 5943
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 5944
    return-void

    .line 5946
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5947
    const/16 v1, 0x12

    .line 5946
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5948
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWifiAutoConnection(Landroid/content/ComponentName;ZI)V

    .line 5949
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5950
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowWifiAutoConnection : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 5936
    return-void

    .line 5938
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowWifiDirect(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6413
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6414
    const/4 v1, 0x0

    .line 6415
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 6416
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifiDirect(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 6418
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6419
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6420
    const/16 v5, 0x12

    .line 6419
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6421
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_1b
    .catchall {:try_start_7 .. :try_end_1b} :catchall_6e

    move-result v4

    if-nez v4, :cond_20

    monitor-exit p0

    .line 6422
    return-void

    .line 6424
    :cond_20
    :try_start_20
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_23
    .catchall {:try_start_20 .. :try_end_23} :catchall_6e

    move-result v4

    if-nez v4, :cond_28

    monitor-exit p0

    .line 6425
    return-void

    .line 6427
    :cond_28
    :try_start_28
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWifiDirect(Landroid/content/ComponentName;ZI)V

    .line 6428
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6430
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->getAllowWifiDirect(Landroid/content/ComponentName;I)Z
    :try_end_3b
    .catchall {:try_start_28 .. :try_end_3b} :catchall_6e

    move-result v2

    .line 6431
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6c

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 6434
    if-eqz v1, :cond_6b

    .line 6436
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.WIFI_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 6437
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 6438
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowWifiDirect : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 6412
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6b
    return-void

    .line 6431
    :cond_6c
    const/4 v1, 0x0

    goto :goto_3f

    .line 6415
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6e
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowWifiScan(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 668
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 669
    monitor-enter p0

    .line 670
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 671
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 672
    return-void

    .line 674
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 675
    return-void

    .line 677
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 678
    const/16 v1, 0x12

    .line 677
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 679
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setAllowWifiScan(Landroid/content/ComponentName;ZI)V

    .line 680
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 681
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowWifiScan : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 667
    return-void

    .line 669
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAllowWipeData(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2910
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2911
    const/4 v1, 0x0

    .line 2912
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 2913
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowWipeData(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 2915
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2916
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_65

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 2917
    return-void

    .line 2919
    :cond_19
    :try_start_19
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2920
    const/4 v5, 0x4

    .line 2919
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2921
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setAllowWipeData(Landroid/content/ComponentName;ZI)V

    .line 2922
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2924
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getAllowWipeData(Landroid/content/ComponentName;I)Z
    :try_end_32
    .catchall {:try_start_19 .. :try_end_32} :catchall_65

    move-result v2

    .line 2925
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_63

    const/4 v1, 0x1

    :goto_36
    monitor-exit p0

    .line 2928
    if-eqz v1, :cond_62

    .line 2930
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.WIPE_DATA_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2931
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2932
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowWipeData : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2909
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_62
    return-void

    .line 2925
    :cond_63
    const/4 v1, 0x0

    goto :goto_36

    .line 2912
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_65
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowWipeDataMaster(ZI)V
    .registers 12
    .param p1, "allow"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 594
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v6

    if-nez v6, :cond_78

    .line 596
    const/4 v0, 0x0

    .line 597
    .local v0, "bGranted":Z
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 598
    .local v1, "callingUid":I
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v5

    .line 599
    .local v5, "manager":Landroid/app/admin/DevicePolicyManager;
    invoke-virtual {v5}, Landroid/app/admin/DevicePolicyManager;->getActiveAdmins()Ljava/util/List;

    move-result-object v4

    .line 600
    .local v4, "cur":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    invoke-interface {v4}, Ljava/lang/Iterable;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .end local v0    # "bGranted":Z
    .local v3, "cn$iterator":Ljava/util/Iterator;
    :cond_17
    :goto_17
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_53

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/ComponentName;

    .line 601
    .local v2, "cn":Landroid/content/ComponentName;
    invoke-virtual {v5, v2}, Landroid/app/admin/DevicePolicyManager;->getAdminInfo(Landroid/content/ComponentName;)Landroid/app/admin/DeviceAdminInfo;

    move-result-object v6

    invoke-virtual {v6}, Landroid/app/admin/DeviceAdminInfo;->getActivityInfo()Landroid/content/pm/ActivityInfo;

    move-result-object v6

    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    if-ne v6, v1, :cond_17

    .line 602
    const/4 v6, 0x4

    invoke-virtual {v5, v2, v6}, Landroid/app/admin/DevicePolicyManager;->hasGrantedPolicy(Landroid/content/ComponentName;I)Z

    move-result v0

    .line 603
    .local v0, "bGranted":Z
    if-eqz v0, :cond_17

    .line 604
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setAllowWipeDataMaster caller uid is granted.:"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_17

    .line 608
    .end local v0    # "bGranted":Z
    .end local v2    # "cn":Landroid/content/ComponentName;
    :cond_53
    if-nez v0, :cond_78

    .line 609
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setAllowWipeDataMaster calling uid is unknown : "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 610
    new-instance v6, Ljava/lang/SecurityException;

    const-string/jumbo v7, "No active admin "

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 614
    .end local v1    # "callingUid":I
    .end local v3    # "cn$iterator":Ljava/util/Iterator;
    .end local v4    # "cur":Ljava/util/List;, "Ljava/util/List<Landroid/content/ComponentName;>;"
    .end local v5    # "manager":Landroid/app/admin/DevicePolicyManager;
    :cond_78
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v6, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 615
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMasterController:Lcom/lge/mdm/controller/LGMDMMasterController;

    invoke-virtual {v6, p1, p2}, Lcom/lge/mdm/controller/LGMDMMasterController;->setAllowWipeDataMaster(ZI)V

    .line 616
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setAllowWipeDataMaster : "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 593
    return-void
.end method

.method public setAllowWirelessLocation(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1090
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1091
    const/4 v1, 0x0

    .line 1092
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 1093
    .local v4, "value":I
    monitor-enter p0

    .line 1094
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    .line 1095
    const/4 v6, 0x0

    .line 1094
    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowWirelessLocation(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1097
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1098
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_75

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 1099
    return-void

    .line 1101
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_75

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 1102
    return-void

    .line 1104
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1105
    const/16 v6, 0x16

    .line 1104
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1106
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->setAllowWirelessLocation(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 1107
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1109
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    .line 1110
    const/4 v6, 0x0

    .line 1109
    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getAllowWirelessLocation(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_75

    move-result v2

    .line 1111
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_73

    const/4 v1, 0x1

    :goto_41
    monitor-exit p0

    .line 1113
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->settingGPSLocation(II)V

    .line 1114
    if-eqz v1, :cond_72

    .line 1116
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.LOCATION_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1117
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1118
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setAllowWirelessLocation : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1089
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_72
    return-void

    .line 1111
    :cond_73
    const/4 v1, 0x0

    goto :goto_41

    .line 1093
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_75
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setAllowWirelessLocationWithWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 1127
    .local p3, "whitelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1128
    const/4 v1, 0x0

    .line 1129
    .local v1, "needChangeIntent":Z
    const/4 v2, 0x0

    .line 1130
    .local v2, "newGlobalPolicy":Z
    monitor-enter p0

    .line 1131
    :try_start_8
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    .line 1132
    const/4 v5, 0x0

    .line 1131
    invoke-virtual {v4, v5, p4}, Lcom/lge/mdm/controller/LGMDMGpsController;->isAllowedLocationWithWhitelist(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1134
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1135
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_7a

    move-result v4

    if-nez v4, :cond_1a

    monitor-exit p0

    .line 1136
    return-void

    .line 1138
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_7a

    move-result v4

    if-nez v4, :cond_22

    monitor-exit p0

    .line 1139
    return-void

    .line 1141
    :cond_22
    :try_start_22
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1142
    const/16 v5, 0x16

    .line 1141
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1143
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v4, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMGpsController;->setAllowLocationWithWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 1145
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1147
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p4}, Lcom/lge/mdm/controller/LGMDMGpsController;->isAllowedLocationWithWhitelist(Landroid/content/ComponentName;I)Z
    :try_end_3c
    .catchall {:try_start_22 .. :try_end_3c} :catchall_7a

    move-result v2

    .line 1149
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_78

    const/4 v1, 0x1

    :goto_40
    monitor-exit p0

    .line 1152
    if-eqz v1, :cond_77

    .line 1154
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.LOCATION_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1155
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1156
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setAllowWirelessLocationWithWhitelist : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, ", list : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1126
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_77
    return-void

    .line 1149
    :cond_78
    const/4 v1, 0x0

    goto :goto_40

    .line 1130
    .end local v3    # "oldGlobalPolicy":Z
    .local v2, "newGlobalPolicy":Z
    :catchall_7a
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setAllowWirelessStorage(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 6386
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6387
    monitor-enter p0

    .line 6388
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6389
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_50

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6390
    return-void

    .line 6392
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_50

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6393
    return-void

    .line 6395
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6396
    const/16 v1, 0x12

    .line 6395
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6397
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWirelessStorageController:Lcom/lge/mdm/controller/LGMDMWirelessStorageController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWirelessStorageController;->setAllowWirelessStorage(Landroid/content/ComponentName;II)V

    .line 6398
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6399
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAllowWirelessStorage : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " (0:ALLOW, 1:DISALLOW)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_4e
    .catchall {:try_start_19 .. :try_end_4e} :catchall_50

    monitor-exit p0

    .line 6385
    return-void

    .line 6387
    :catchall_50
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setAppVersionState(Landroid/content/ComponentName;Ljava/util/List;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMAppVersionState;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 3728
    .local p2, "appVersionStateList":Ljava/util/List;, "Ljava/util/List<Lcom/lge/mdm/config/LGMDMAppVersionState;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3729
    monitor-enter p0

    .line 3730
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3731
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3732
    return-void

    .line 3734
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3735
    return-void

    .line 3737
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3738
    const/4 v1, 0x2

    .line 3737
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3739
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3740
    const/4 v1, 0x2

    .line 3739
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3741
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3742
    const/4 v1, 0x2

    .line 3741
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3743
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setAppVersionState(Landroid/content/ComponentName;Ljava/util/List;I)V

    .line 3744
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_version_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3745
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setAppVersionState, list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_19 .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 3727
    return-void

    .line 3729
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setApplicationState(Landroid/content/ComponentName;Ljava/util/List;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List",
            "<",
            "Lcom/lge/mdm/config/LGMDMApplicationState;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 3697
    .local p2, "applicationStateList":Ljava/util/List;, "Ljava/util/List<Lcom/lge/mdm/config/LGMDMApplicationState;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3698
    monitor-enter p0

    .line 3699
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3700
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3701
    return-void

    .line 3703
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3704
    return-void

    .line 3706
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3707
    const/4 v1, 0x2

    .line 3706
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3708
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3709
    const/4 v1, 0x2

    .line 3708
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3710
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3711
    const/4 v1, 0x2

    .line 3710
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3712
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setApplicationState(Landroid/content/ComponentName;Ljava/util/List;I)V

    .line 3713
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3714
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setApplicationState, list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_19 .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 3696
    return-void

    .line 3698
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setBlockingConsumerEmailList(Landroid/content/ComponentName;Ljava/util/List;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 4325
    .local p2, "consumerEmailList":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4326
    monitor-enter p0

    .line 4327
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4328
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_42

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 4329
    return-void

    .line 4331
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_42

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 4332
    return-void

    .line 4334
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setBlockingConsumerEmailList(Landroid/content/ComponentName;Ljava/util/List;I)V

    .line 4335
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_application_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4336
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setBlockingConsumerEmailList, list "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_40
    .catchall {:try_start_19 .. :try_end_40} :catchall_42

    monitor-exit p0

    .line 4324
    return-void

    .line 4326
    :catchall_42
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setBluetoothMaxVisiblityTimeOut(Landroid/content/ComponentName;II)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "nSec"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 829
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 830
    const/4 v1, 0x0

    .line 831
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 832
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getBluetoothMaxVisiblityTimeOut(Landroid/content/ComponentName;I)I

    move-result v3

    .line 834
    .local v3, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 835
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6e

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 836
    return-void

    .line 838
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6e

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 839
    return-void

    .line 841
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 842
    const/16 v5, 0xf

    .line 841
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 843
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setBluetoothMaxVisiblityTimeOut(Landroid/content/ComponentName;II)V

    .line 844
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_hardware_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 846
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->getBluetoothMaxVisiblityTimeOut(Landroid/content/ComponentName;I)I
    :try_end_3b
    .catchall {:try_start_21 .. :try_end_3b} :catchall_6e

    move-result v2

    .line 848
    .local v2, "newGlobalPolicy":I
    if-eq v3, v2, :cond_6c

    const/4 v1, 0x1

    :goto_3f
    monitor-exit p0

    .line 851
    if-eqz v1, :cond_6b

    .line 853
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.BLUETOOTH_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 854
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 855
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setBluetoothMaxVisiblityTimeOut : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 828
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6b
    return-void

    .line 848
    :cond_6c
    const/4 v1, 0x0

    goto :goto_3f

    .line 831
    .end local v2    # "newGlobalPolicy":I
    .end local v3    # "oldGlobalPolicy":I
    :catchall_6e
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setBluetoothScanMode(Landroid/content/ComponentName;III)Z
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "mode"    # I
    .param p3, "duration"    # I
    .param p4, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 5417
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5418
    monitor-enter p0

    .line 5419
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5420
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_55

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5421
    return v1

    .line 5423
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_55

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5424
    return v1

    .line 5426
    :cond_1a
    :try_start_1a
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5427
    const/16 v1, 0xf

    .line 5426
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_21
    .catchall {:try_start_1a .. :try_end_21} :catchall_55

    monitor-exit p0

    .line 5429
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setBluetoothScanMode, mode : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 5430
    const-string/jumbo v2, " (0:CONNECTABLE, 1:DISCOVERABLE, 2:NONE)"

    .line 5429
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 5430
    const-string/jumbo v2, ", duration : "

    .line 5429
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5431
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setBluetoothScanMode(III)Z

    move-result v0

    return v0

    .line 5418
    :catchall_55
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setBluetoothSearchedDeviceType(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "nDeviceType"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 867
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 868
    monitor-enter p0

    .line 869
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 870
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 871
    return-void

    .line 873
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 874
    return-void

    .line 876
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 877
    const/16 v1, 0xf

    .line 876
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 878
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMBluetoothController:Lcom/lge/mdm/controller/LGMDMBluetoothController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMBluetoothController;->setBluetoothSearchedDeviceType(Landroid/content/ComponentName;II)V

    .line 879
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 880
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setBluetoothSearchedDeviceType : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 866
    return-void

    .line 868
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setCameraPid(II)V
    .registers 4
    .param p1, "pid"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 1767
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1768
    monitor-enter p0

    .line 1769
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCameraController;->setCameraPid(II)V
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_d

    monitor-exit p0

    .line 1766
    return-void

    .line 1768
    :catchall_d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setCameraStatus(ZI)V
    .registers 4
    .param p1, "isRunning"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 1753
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1754
    monitor-enter p0

    .line 1755
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCameraController:Lcom/lge/mdm/controller/LGMDMCameraController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCameraController;->setCameraStatus(ZI)V
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_d

    monitor-exit p0

    .line 1752
    return-void

    .line 1754
    :catchall_d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setCommonCriteriaMode(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "mode"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 8031
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8032
    monitor-enter p0

    .line 8033
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8034
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 8035
    return-void

    .line 8037
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 8038
    return-void

    .line 8040
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 8041
    return-void

    .line 8043
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8044
    const/16 v1, 0x31

    .line 8043
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8045
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMCCModeController;->setCommonCriteriaMode(Landroid/content/ComponentName;II)V

    .line 8046
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8047
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setCommonCriteriaMode, mode : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, " (0:NONE, 1:DISABLED, 2:ENABLED)"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_1d .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 8030
    return-void

    .line 8032
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setCurrIMEPackage(Ljava/lang/String;I)V
    .registers 4
    .param p1, "id"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 1492
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1493
    monitor-enter p0

    .line 1494
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setCurrIMEPackage(Ljava/lang/String;I)V
    :try_end_b
    .catchall {:try_start_6 .. :try_end_b} :catchall_d

    monitor-exit p0

    .line 1491
    return-void

    .line 1493
    :catchall_d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setDebugMode(ZI)V
    .registers 8
    .param p1, "debug"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 504
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v2

    if-nez v2, :cond_f

    .line 505
    new-instance v2, Ljava/lang/SecurityException;

    const-string/jumbo v3, "No active admin "

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 508
    :cond_f
    monitor-enter p0

    .line 509
    :try_start_10
    invoke-static {p1}, Lcom/lge/mdm/util/MDMLog;->setDebugmode(Z)V

    .line 510
    invoke-static {}, Lcom/lge/mdm/util/MDMLog;->saveDebugmode()V
    :try_end_16
    .catchall {:try_start_10 .. :try_end_16} :catchall_48

    monitor-exit p0

    .line 512
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 514
    .local v0, "identity":J
    :try_start_1b
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v3

    const-string/jumbo v4, "mdmlog"

    if-eqz p1, :cond_4b

    const/4 v2, 0x1

    :goto_27
    invoke-static {v3, v4, v2, p2}, Landroid/provider/Settings$System;->putIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)Z

    .line 516
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setDebugMode : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_44
    .catchall {:try_start_1b .. :try_end_44} :catchall_4d

    .line 518
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 503
    return-void

    .line 508
    .end local v0    # "identity":J
    :catchall_48
    move-exception v2

    monitor-exit p0

    throw v2

    .line 514
    .restart local v0    # "identity":J
    :cond_4b
    const/4 v2, 0x0

    goto :goto_27

    .line 517
    :catchall_4d
    move-exception v2

    .line 518
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 517
    throw v2
.end method

.method public setEmergencyCallStatus(ZI)V
    .registers 6
    .param p1, "status"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 7790
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7792
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v0

    if-nez v0, :cond_1c

    .line 7793
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e9

    if-eq v0, v1, :cond_1c

    .line 7794
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "No active admin "

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7798
    :cond_1c
    monitor-enter p0

    .line 7799
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->setEmergencyCallStatus(ZI)V
    :try_end_22
    .catchall {:try_start_1d .. :try_end_22} :catchall_3e

    monitor-exit p0

    .line 7801
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEmergencyCallStatus : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 7789
    return-void

    .line 7798
    :catchall_3e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEncryptionPolicy(Landroid/content/ComponentName;II)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 3158
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3159
    const/4 v1, 0x0

    .line 3160
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 3161
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMCryptoController;->getEncryptionPolicy(Landroid/content/ComponentName;I)I

    move-result v3

    .line 3162
    .local v3, "oldGlobalPolicy":I
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3163
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_9d

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 3164
    return-void

    .line 3166
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_9d

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 3167
    return-void

    .line 3169
    :cond_21
    if-eqz p3, :cond_25

    monitor-exit p0

    .line 3170
    return-void

    .line 3172
    :cond_25
    :try_start_25
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v4}, Lcom/lge/mdm/util/LGMDMConfig;->isDefaultDeviceEncryptionModel(Landroid/content/Context;)Z
    :try_end_2a
    .catchall {:try_start_25 .. :try_end_2a} :catchall_9d

    move-result v4

    if-eqz v4, :cond_39

    .line 3173
    const/4 v4, 0x1

    if-eq p2, v4, :cond_33

    .line 3174
    const/4 v4, 0x5

    if-ne p2, v4, :cond_35

    :cond_33
    monitor-exit p0

    .line 3175
    return-void

    .line 3176
    :cond_35
    const/4 v4, 0x3

    if-ne p2, v4, :cond_96

    .line 3177
    const/4 p2, 0x2

    .line 3183
    :cond_39
    :goto_39
    :try_start_39
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3184
    const/4 v5, 0x7

    .line 3183
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3185
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v4, p1, p2}, Lcom/lge/mdm/controller/LGMDMCryptoController;->setEncryptionPolicy(Landroid/content/ComponentName;I)V

    .line 3186
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_general_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3188
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMCryptoController;->getEncryptionPolicy(Landroid/content/ComponentName;I)I
    :try_end_52
    .catchall {:try_start_39 .. :try_end_52} :catchall_9d

    move-result v2

    .line 3189
    .local v2, "newGlobalPolicy":I
    if-eq v3, v2, :cond_9b

    const/4 v1, 0x1

    :goto_56
    monitor-exit p0

    .line 3191
    if-eqz v1, :cond_95

    .line 3192
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v4, p2, p3}, Lcom/lge/mdm/controller/LGMDMCryptoController;->handleSetEncryptionPolicy(II)V

    .line 3194
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_ENCRYPTION"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3195
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 3196
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setEncryptionPolicy : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string/jumbo v6, " (0:NONE, 1:DEVICE, 2:STORAGE, 3:DEVICE_AND_STORAGE,"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 3197
    const-string/jumbo v6, "4:DEVICE_DISABLED, 5:DISABLED, 6:DEVICE_AND_STORAGE_DISABLED)"

    .line 3196
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3157
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_95
    return-void

    .line 3178
    .end local v2    # "newGlobalPolicy":I
    :cond_96
    const/4 v4, 0x6

    if-ne p2, v4, :cond_39

    .line 3179
    const/4 p2, 0x0

    goto :goto_39

    .line 3189
    .restart local v2    # "newGlobalPolicy":I
    :cond_9b
    const/4 v1, 0x0

    goto :goto_56

    .line 3160
    .end local v2    # "newGlobalPolicy":I
    .end local v3    # "oldGlobalPolicy":I
    :catchall_9d
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setEncryptionPolicyForEas(Landroid/content/ComponentName;II)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 3212
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3213
    monitor-enter p0

    .line 3214
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3215
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_64

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3216
    return-void

    .line 3218
    :cond_11
    if-eqz p3, :cond_15

    monitor-exit p0

    .line 3219
    return-void

    .line 3221
    :cond_15
    :try_start_15
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-static {v0}, Lcom/lge/mdm/util/LGMDMConfig;->isDefaultDeviceEncryptionModel(Landroid/content/Context;)Z
    :try_end_1a
    .catchall {:try_start_15 .. :try_end_1a} :catchall_64

    move-result v0

    if-eqz v0, :cond_29

    .line 3222
    const/4 v0, 0x1

    if-eq p2, v0, :cond_23

    .line 3223
    const/4 v0, 0x5

    if-ne p2, v0, :cond_25

    :cond_23
    monitor-exit p0

    .line 3224
    return-void

    .line 3225
    :cond_25
    const/4 v0, 0x3

    if-ne p2, v0, :cond_5f

    .line 3226
    const/4 p2, 0x2

    .line 3231
    :cond_29
    :goto_29
    :try_start_29
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3232
    const/4 v1, 0x7

    .line 3231
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3233
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCryptoController;->setEncryptionPolicyForEas(Landroid/content/ComponentName;I)V

    .line 3234
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3235
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEncryptionPolicyForEas : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3236
    const-string/jumbo v2, " (0:NONE, 1:DEVICE, 2:STORAGE, 3:DEVICE_AND_STORAGE, 4:DISABLED)"

    .line 3235
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_5d
    .catchall {:try_start_29 .. :try_end_5d} :catchall_64

    monitor-exit p0

    .line 3211
    return-void

    .line 3227
    :cond_5f
    const/4 v0, 0x6

    if-ne p2, v0, :cond_29

    .line 3228
    const/4 p2, 0x0

    goto :goto_29

    .line 3213
    :catchall_64
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEnforceAirplaneMode(Landroid/content/ComponentName;ZI)V
    .registers 13
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "userHandle"    # I

    .prologue
    const/4 v8, 0x0

    .line 5221
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5222
    const/4 v3, 0x0

    .line 5223
    .local v3, "needChangeIntent":Z
    const/4 v1, -0x1

    .line 5224
    .local v1, "airplane_mode":I
    monitor-enter p0

    .line 5225
    :try_start_9
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    const/4 v7, 0x0

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getEnforceAirplaneMode(Landroid/content/ComponentName;I)Z

    move-result v5

    .line 5228
    .local v5, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5229
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_16
    .catchall {:try_start_9 .. :try_end_16} :catchall_7b

    move-result v6

    if-nez v6, :cond_1b

    monitor-exit p0

    .line 5230
    return-void

    .line 5232
    :cond_1b
    :try_start_1b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1e
    .catchall {:try_start_1b .. :try_end_1e} :catchall_7b

    move-result v6

    if-nez v6, :cond_23

    monitor-exit p0

    .line 5233
    return-void

    .line 5235
    :cond_23
    :try_start_23
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5236
    const/16 v7, 0x2f

    .line 5235
    invoke-virtual {v6, p1, v7}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 5237
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    invoke-virtual {v6, v0, p2, p3}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->setEnforceAirplaneMode(Lcom/lge/mdm/admin/LGMDMadminlist;ZI)I

    move-result v1

    .line 5239
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v7, "lgmdm_general_policies.xml"

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 5241
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    const/4 v7, 0x0

    invoke-virtual {v6, v7, p3}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->getEnforceAirplaneMode(Landroid/content/ComponentName;I)Z
    :try_end_3f
    .catchall {:try_start_23 .. :try_end_3f} :catchall_7b

    move-result v4

    .line 5243
    .local v4, "newGlobalPolicy":Z
    if-eq v5, v4, :cond_79

    const/4 v3, 0x1

    :goto_43
    monitor-exit p0

    .line 5245
    iget-object v6, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMAirplaneModeController:Lcom/lge/mdm/controller/LGMDMAirplaneModeController;

    invoke-virtual {p0, v8, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowAirplaneModeOn(Landroid/content/ComponentName;I)Z

    move-result v7

    invoke-virtual {v6, v7, v1}, Lcom/lge/mdm/controller/LGMDMAirplaneModeController;->changeAirplaneMode(ZI)V

    .line 5248
    if-eqz v3, :cond_78

    .line 5250
    new-instance v2, Landroid/content/Intent;

    const-string/jumbo v6, "com.lge.mdm.intent.action.AIRPLANE_MODE_ON_POLICY_CHANGE"

    invoke-direct {v2, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5251
    .local v2, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v6

    invoke-virtual {v6, v2}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 5252
    const-string/jumbo v6, "LGMDMDevicePolicyManagerService"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v8, "setEnforceAirplaneMode : "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5220
    .end local v2    # "intent":Landroid/content/Intent;
    :cond_78
    return-void

    .line 5243
    :cond_79
    const/4 v3, 0x0

    goto :goto_43

    .line 5224
    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v4    # "newGlobalPolicy":Z
    .end local v5    # "oldGlobalPolicy":Z
    :catchall_7b
    move-exception v6

    monitor-exit p0

    throw v6
.end method

.method public setEnforceAlertMobileDataUsage(Landroid/content/ComponentName;ZJI)V
    .registers 23
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "warn"    # J
    .param p5, "userHandle"    # I

    .prologue
    .line 7546
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    move/from16 v0, p5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7547
    const/4 v14, 0x0

    .line 7548
    .local v14, "needChangeIntent":Z
    const/4 v15, 0x1

    .line 7549
    .local v15, "newGlobalPolicy":Z
    const-wide/16 v12, 0x0

    .line 7550
    .local v12, "minimumValueInfo":J
    monitor-enter p0

    .line 7551
    :try_start_e
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    move/from16 v0, p5

    invoke-virtual {v5, v6, v0}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceAlertMobileDataUsage(Landroid/content/ComponentName;I)Z

    move-result v10

    .line 7553
    .local v10, "oldGlobalPolicy":Z
    invoke-direct/range {p0 .. p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7554
    invoke-virtual/range {p0 .. p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_1f
    .catchall {:try_start_e .. :try_end_1f} :catchall_bd

    move-result v5

    if-nez v5, :cond_24

    monitor-exit p0

    .line 7555
    return-void

    .line 7557
    :cond_24
    :try_start_24
    invoke-direct/range {p0 .. p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_27
    .catchall {:try_start_24 .. :try_end_27} :catchall_bd

    move-result v5

    if-nez v5, :cond_2c

    monitor-exit p0

    .line 7558
    return-void

    .line 7560
    :cond_2c
    :try_start_2c
    invoke-direct/range {p0 .. p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v5

    if-eqz v5, :cond_3d

    .line 7561
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v6, "can not control data policy becase of wifi only model"

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3b
    .catchall {:try_start_2c .. :try_end_3b} :catchall_bd

    monitor-exit p0

    .line 7562
    return-void

    .line 7564
    :cond_3d
    if-eqz p5, :cond_41

    monitor-exit p0

    .line 7565
    return-void

    .line 7567
    :cond_41
    :try_start_41
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7568
    const/16 v6, 0x2c

    .line 7567
    move-object/from16 v0, p1

    invoke-virtual {v5, v0, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7569
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    move-object/from16 v6, p1

    move/from16 v7, p2

    move-wide/from16 v8, p3

    move/from16 v11, p5

    invoke-virtual/range {v5 .. v11}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setEnforceAlertMobileDataUsage(Landroid/content/ComponentName;ZJZI)V

    .line 7571
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    move/from16 v0, p5

    invoke-virtual {v5, v6, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7573
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 7574
    const/4 v6, 0x2

    .line 7573
    move-wide/from16 v0, p3

    move/from16 v2, p5

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getMinimumValueInfo(IJI)J

    move-result-wide v12

    .line 7575
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    move/from16 v0, p5

    invoke-virtual {v5, v6, v0}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceAlertMobileDataUsage(Landroid/content/ComponentName;I)Z
    :try_end_7e
    .catchall {:try_start_41 .. :try_end_7e} :catchall_bd

    move-result v15

    .line 7577
    .local v15, "newGlobalPolicy":Z
    if-eq v10, v15, :cond_bb

    const/4 v14, 0x1

    :goto_82
    monitor-exit p0

    .line 7580
    if-eqz v14, :cond_ba

    .line 7581
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x2

    invoke-virtual {v5, v6, v15, v12, v13}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setMobileDataUsageInfo(IZJ)V

    .line 7584
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.ACTION_ENFORCE_MOBILE_DATAUSAGE_WARN"

    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7585
    .local v4, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v4}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7586
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setEnforceAlertMobileDataUsage : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p2

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-static {v5, v6, v0}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7545
    .end local v4    # "intent":Landroid/content/Intent;
    :cond_ba
    return-void

    .line 7577
    :cond_bb
    const/4 v14, 0x0

    goto :goto_82

    .line 7550
    .end local v10    # "oldGlobalPolicy":Z
    .local v15, "newGlobalPolicy":Z
    :catchall_bd
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setEnforceBackgroundDataRestricted(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6477
    const/4 v6, 0x0

    .line 6478
    .local v6, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6479
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v1}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getRestrictBackground()Z

    move-result v7

    .line 6480
    .local v7, "restrictBackgroundValue":Z
    monitor-enter p0

    .line 6481
    :try_start_d
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 6482
    const/4 v2, 0x0

    .line 6481
    invoke-virtual {v1, v2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceBackgroundDataRestricted(Landroid/content/ComponentName;I)Z
    :try_end_13
    .catchall {:try_start_d .. :try_end_13} :catchall_6c

    move-result v3

    .line 6484
    .local v3, "oldGlobalPolicy":Z
    if-ne v3, p2, :cond_18

    monitor-exit p0

    .line 6485
    return-void

    .line 6487
    :cond_18
    :try_start_18
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6488
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_1e
    .catchall {:try_start_18 .. :try_end_1e} :catchall_6c

    move-result v1

    if-nez v1, :cond_23

    monitor-exit p0

    .line 6489
    return-void

    .line 6491
    :cond_23
    :try_start_23
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_26
    .catchall {:try_start_23 .. :try_end_26} :catchall_6c

    move-result v1

    if-nez v1, :cond_2b

    monitor-exit p0

    .line 6492
    return-void

    .line 6494
    :cond_2b
    :try_start_2b
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v1

    if-eqz v1, :cond_3c

    .line 6495
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v2, "can not control data policy becase of wifi only model"

    invoke-static {v1, v2}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3a
    .catchall {:try_start_2b .. :try_end_3a} :catchall_6c

    monitor-exit p0

    .line 6496
    return-void

    .line 6499
    :cond_3c
    :try_start_3c
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6500
    const/16 v2, 0xe

    .line 6499
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6502
    new-instance v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$2;

    move-object v1, p0

    move v2, p3

    move v4, p2

    move-object v5, p1

    invoke-direct/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService$2;-><init>(Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;IZZLandroid/content/ComponentName;)V

    .line 6514
    .local v0, "afterAction":Ljava/lang/Runnable;
    if-nez p2, :cond_53

    .line 6515
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v1, p2, v0}, Lcom/lge/mdm/controller/LGMDMNetworkController;->enforceBackgroundDataRestricted(ZLjava/lang/Runnable;)V

    .line 6518
    :cond_53
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v1, p1, p2, p3, v7}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setEnforceBackgroundDataRestricted(Landroid/content/ComponentName;ZIZ)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v6

    .line 6520
    .local v6, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_general_policies.xml"

    invoke-virtual {v1, v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6522
    if-eqz p2, :cond_6a

    .line 6523
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 6524
    iget-boolean v2, v6, Lcom/lge/mdm/admin/LGMDMadminlist;->preStateBackgroundDataRestricted:Z

    .line 6523
    invoke-virtual {v1, p3, v2, v0}, Lcom/lge/mdm/controller/LGMDMNetworkController;->retoreBackgroundDataRestricted(IZLjava/lang/Runnable;)V
    :try_end_6a
    .catchall {:try_start_3c .. :try_end_6a} :catchall_6c

    :cond_6a
    monitor-exit p0

    .line 6476
    return-void

    .line 6480
    .end local v0    # "afterAction":Ljava/lang/Runnable;
    .end local v3    # "oldGlobalPolicy":Z
    .end local v6    # "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    :catchall_6c
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setEnforceEmergencyCallOnly(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6091
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6092
    monitor-enter p0

    .line 6093
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6094
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 6095
    return-void

    .line 6097
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 6098
    return-void

    .line 6100
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6101
    const/16 v1, 0x23

    .line 6100
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6102
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setEnforceEmergencyCallOnly(Landroid/content/ComponentName;ZI)V

    .line 6103
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6104
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEnforceEmergencyCallOnly : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6090
    return-void

    .line 6092
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEnforceGPSLocationEnabled(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1226
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1227
    const/4 v1, 0x0

    .line 1228
    .local v1, "needChangeIntent":Z
    const/4 v4, -0x1

    .line 1229
    .local v4, "value":I
    monitor-enter p0

    .line 1230
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getEnforceGPSLocationEnabled(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 1232
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1233
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_75

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 1234
    return-void

    .line 1236
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_75

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 1237
    return-void

    .line 1239
    :cond_22
    :try_start_22
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1240
    const/16 v6, 0x1c

    .line 1239
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1241
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->setEnforceGPSLocationEnabled(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 1242
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_hardware_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1244
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->getEnforceGPSLocationEnabled(Landroid/content/ComponentName;I)Z
    :try_end_3d
    .catchall {:try_start_22 .. :try_end_3d} :catchall_75

    move-result v2

    .line 1246
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_73

    const/4 v1, 0x1

    :goto_41
    monitor-exit p0

    .line 1248
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->settingGPSLocation(II)V

    .line 1249
    if-eqz v1, :cond_72

    .line 1251
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.LOCATION_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 1252
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 1253
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setEnforceGPSLocationEnabled : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 1225
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_72
    return-void

    .line 1246
    :cond_73
    const/4 v1, 0x0

    goto :goto_41

    .line 1229
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_75
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setEnforceLimitMobileDataUsage(Landroid/content/ComponentName;ZJI)V
    .registers 23
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "limit"    # J
    .param p5, "userHandle"    # I

    .prologue
    .line 7489
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    move/from16 v0, p5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7490
    const/4 v14, 0x0

    .line 7491
    .local v14, "needChangeIntent":Z
    const/4 v15, 0x1

    .line 7492
    .local v15, "newGlobalPolicy":Z
    const-wide/16 v12, 0x0

    .line 7493
    .local v12, "minimumValueInfo":J
    monitor-enter p0

    .line 7494
    :try_start_e
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    move/from16 v0, p5

    invoke-virtual {v5, v6, v0}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceLimitMobileDataUsage(Landroid/content/ComponentName;I)Z

    move-result v10

    .line 7496
    .local v10, "oldGlobalPolicy":Z
    invoke-direct/range {p0 .. p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7497
    invoke-virtual/range {p0 .. p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_1f
    .catchall {:try_start_e .. :try_end_1f} :catchall_bd

    move-result v5

    if-nez v5, :cond_24

    monitor-exit p0

    .line 7498
    return-void

    .line 7500
    :cond_24
    :try_start_24
    invoke-direct/range {p0 .. p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_27
    .catchall {:try_start_24 .. :try_end_27} :catchall_bd

    move-result v5

    if-nez v5, :cond_2c

    monitor-exit p0

    .line 7501
    return-void

    .line 7503
    :cond_2c
    :try_start_2c
    invoke-direct/range {p0 .. p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v5

    if-eqz v5, :cond_3d

    .line 7504
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v6, "can not control data policy becase of wifi only model"

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_3b
    .catchall {:try_start_2c .. :try_end_3b} :catchall_bd

    monitor-exit p0

    .line 7505
    return-void

    .line 7507
    :cond_3d
    if-eqz p5, :cond_41

    monitor-exit p0

    .line 7508
    return-void

    .line 7510
    :cond_41
    :try_start_41
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7511
    const/16 v6, 0x2c

    .line 7510
    move-object/from16 v0, p1

    invoke-virtual {v5, v0, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7512
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    move-object/from16 v6, p1

    move/from16 v7, p2

    move-wide/from16 v8, p3

    move/from16 v11, p5

    invoke-virtual/range {v5 .. v11}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setEnforceLimitMobileDataUsage(Landroid/content/ComponentName;ZJZI)V

    .line 7514
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    move/from16 v0, p5

    invoke-virtual {v5, v6, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7516
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    .line 7517
    const/4 v6, 0x1

    .line 7516
    move-wide/from16 v0, p3

    move/from16 v2, p5

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getMinimumValueInfo(IJI)J

    move-result-wide v12

    .line 7518
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    move/from16 v0, p5

    invoke-virtual {v5, v6, v0}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceLimitMobileDataUsage(Landroid/content/ComponentName;I)Z
    :try_end_7e
    .catchall {:try_start_41 .. :try_end_7e} :catchall_bd

    move-result v15

    .line 7520
    .local v15, "newGlobalPolicy":Z
    if-eq v10, v15, :cond_bb

    const/4 v14, 0x1

    :goto_82
    monitor-exit p0

    .line 7523
    if-eqz v14, :cond_ba

    .line 7524
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x1

    invoke-virtual {v5, v6, v15, v12, v13}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setMobileDataUsageInfo(IZJ)V

    .line 7527
    new-instance v4, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.ACTION_ENFORCE_MOBILE_DATAUSAGE_LIMIT"

    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7528
    .local v4, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v4}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7529
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setEnforceLimitMobileDataUsage : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p2

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-static {v5, v6, v0}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7488
    .end local v4    # "intent":Landroid/content/Intent;
    :cond_ba
    return-void

    .line 7520
    :cond_bb
    const/4 v14, 0x0

    goto :goto_82

    .line 7493
    .end local v10    # "oldGlobalPolicy":Z
    .local v15, "newGlobalPolicy":Z
    :catchall_bd
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setEnforceMobileNetworkEnabled(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 2822
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2823
    const/4 v2, 0x0

    .line 2824
    .local v2, "needChangeIntent":Z
    const/4 v1, 0x0

    .line 2825
    .local v1, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    monitor-enter p0

    .line 2826
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceMobileNetworkEnabled(Landroid/content/ComponentName;I)Z

    move-result v4

    .line 2829
    .local v4, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2830
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_86

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 2831
    return-void

    .line 2833
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_86

    move-result v5

    if-nez v5, :cond_22

    monitor-exit p0

    .line 2834
    return-void

    .line 2836
    :cond_22
    :try_start_22
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v5

    if-eqz v5, :cond_33

    .line 2837
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v6, "can not control data policy becase of wifi only model"

    invoke-static {v5, v6}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_31
    .catchall {:try_start_22 .. :try_end_31} :catchall_86

    monitor-exit p0

    .line 2838
    return-void

    .line 2841
    :cond_33
    :try_start_33
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2842
    const/16 v6, 0x1c

    .line 2841
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2843
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->setEnforceMobileNetworkEnabled(Landroid/content/ComponentName;ZI)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v1

    .line 2845
    .local v1, "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_general_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2846
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->getEnforceMobileNetworkEnabled(Landroid/content/ComponentName;I)Z
    :try_end_4e
    .catchall {:try_start_33 .. :try_end_4e} :catchall_86

    move-result v3

    .line 2848
    .local v3, "newGlobalPolicy":Z
    if-eq v4, v3, :cond_84

    const/4 v2, 0x1

    :goto_52
    monitor-exit p0

    .line 2851
    if-eqz v2, :cond_83

    .line 2852
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v5, p1, p2, p3, v1}, Lcom/lge/mdm/controller/LGMDMNetworkController;->settingEnforceMobileNetworkEnabled(Landroid/content/ComponentName;ZILcom/lge/mdm/admin/LGMDMadminlist;)V

    .line 2855
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.MOBILE_NETWORK_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 2856
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 2857
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setEnforceMobileNetworkEnabled : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 2821
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_83
    return-void

    .line 2848
    :cond_84
    const/4 v2, 0x0

    goto :goto_52

    .line 2825
    .end local v1    # "mAdmin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v3    # "newGlobalPolicy":Z
    .end local v4    # "oldGlobalPolicy":Z
    :catchall_86
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setEnforceMuteDuringCall(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8083
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8084
    monitor-enter p0

    .line 8085
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8086
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_49

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 8087
    return-void

    .line 8089
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_49

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 8090
    return-void

    .line 8092
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8093
    const/16 v1, 0x17

    .line 8092
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8094
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setEnforceMuteDuringCall(Landroid/content/ComponentName;ZI)V

    .line 8095
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8096
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEnforceMuteDuringCall : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_19 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 8082
    return-void

    .line 8084
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEnforcePasswordChange(ZI)V
    .registers 6
    .param p1, "enforcePassword"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 3313
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3315
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v0

    if-nez v0, :cond_14

    .line 3316
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "No active admin "

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3319
    :cond_14
    monitor-enter p0

    .line 3320
    :try_start_15
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_18
    .catchall {:try_start_15 .. :try_end_18} :catchall_46

    move-result v0

    if-nez v0, :cond_1d

    monitor-exit p0

    .line 3321
    return-void

    .line 3323
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setEnforcePasswordChange(ZI)V

    .line 3324
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3325
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEnforcePasswordChange : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_44
    .catchall {:try_start_1d .. :try_end_44} :catchall_46

    monitor-exit p0

    .line 3312
    return-void

    .line 3319
    :catchall_46
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEnforcePowerButtonLocks(Landroid/content/ComponentName;ZI)V
    .registers 11
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 7926
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v4, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7927
    const/4 v1, 0x0

    .line 7928
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 7929
    :try_start_7
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getEnforcePowerButtonLocks(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 7932
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7933
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_14
    .catchall {:try_start_7 .. :try_end_14} :catchall_6d

    move-result v4

    if-nez v4, :cond_19

    monitor-exit p0

    .line 7934
    return-void

    .line 7936
    :cond_19
    :try_start_19
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1c
    .catchall {:try_start_19 .. :try_end_1c} :catchall_6d

    move-result v4

    if-nez v4, :cond_21

    monitor-exit p0

    .line 7937
    return-void

    .line 7940
    :cond_21
    :try_start_21
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7941
    const/4 v5, 0x3

    .line 7940
    invoke-virtual {v4, p1, v5}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7942
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v4, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->setEnforcePowerButtonLocks(Landroid/content/ComponentName;ZI)V

    .line 7943
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_application_policies.xml"

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 7945
    iget-object v4, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getEnforcePowerButtonLocks(Landroid/content/ComponentName;I)Z
    :try_end_3a
    .catchall {:try_start_21 .. :try_end_3a} :catchall_6d

    move-result v2

    .line 7947
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_6b

    const/4 v1, 0x1

    :goto_3e
    monitor-exit p0

    .line 7950
    if-eqz v1, :cond_6a

    .line 7952
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v4, "com.lge.mdm.intent.action.ACTION_POWER_BUTTON_LOCKS_POLICY_CHANGE"

    invoke-direct {v0, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7953
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v4

    invoke-virtual {v4, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7954
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setEnforcePowerButtonLocks : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7925
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_6a
    return-void

    .line 7947
    :cond_6b
    const/4 v1, 0x0

    goto :goto_3e

    .line 7928
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_6d
    move-exception v4

    monitor-exit p0

    throw v4
.end method

.method public setEnforceRecoveryPassword(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "password"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3287
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3288
    monitor-enter p0

    .line 3289
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3290
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_32

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3291
    return-void

    .line 3297
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p2, p3}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setEnforceRecoveryPassword(Ljava/lang/String;I)V

    .line 3298
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEnforceRecoveryPassword : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_30
    .catchall {:try_start_11 .. :try_end_30} :catchall_32

    monitor-exit p0

    .line 3286
    return-void

    .line 3288
    :catchall_32
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setEnforceUsbModeAsNone(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enforce"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8123
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8124
    monitor-enter p0

    .line 8125
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8126
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_41

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 8127
    return-void

    .line 8129
    :cond_11
    :try_start_11
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8130
    const/16 v1, 0x13

    .line 8129
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8131
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMUsbController:Lcom/lge/mdm/controller/LGMDMUsbController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMUsbController;->setEnforceUsbModeAsNone(Landroid/content/ComponentName;ZI)V

    .line 8132
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 8133
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setEnforceUsbModeAsNone : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3f
    .catchall {:try_start_11 .. :try_end_3f} :catchall_41

    monitor-exit p0

    .line 8122
    return-void

    .line 8124
    :catchall_41
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setGrant(Ljava/lang/String;ZI)Z
    .registers 7
    .param p1, "alias"    # Ljava/lang/String;
    .param p2, "status"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 8317
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8319
    const-string/jumbo v0, "com.lge.exchange"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {p0, v1, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkPackageNameFromPID(II)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_30

    .line 8320
    const-string/jumbo v0, "com.lge.email"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {p0, v1, p3}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkPackageNameFromPID(II)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_30

    .line 8321
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "No active admin "

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8324
    :cond_30
    monitor-enter p0

    .line 8325
    :try_start_31
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setGrant : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", alias : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 8326
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMCertificateController;->setGrant(Ljava/lang/String;Z)Z
    :try_end_5b
    .catchall {:try_start_31 .. :try_end_5b} :catchall_5e

    move-result v0

    monitor-exit p0

    return v0

    .line 8324
    :catchall_5e
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setGranularControlOnCCMode(Landroid/content/ComponentName;II)Z
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "function"    # I
    .param p3, "userHandle"    # I

    .prologue
    const/4 v2, 0x0

    .line 8060
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 8061
    const/4 v0, 0x0

    .line 8062
    .local v0, "ret":Z
    monitor-enter p0

    .line 8063
    :try_start_8
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 8064
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_e
    .catchall {:try_start_8 .. :try_end_e} :catchall_2e

    move-result v1

    if-nez v1, :cond_13

    monitor-exit p0

    .line 8065
    return v2

    .line 8067
    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_16
    .catchall {:try_start_13 .. :try_end_16} :catchall_2e

    move-result v1

    if-nez v1, :cond_1b

    monitor-exit p0

    .line 8068
    return v2

    .line 8070
    :cond_1b
    if-eqz p3, :cond_1f

    monitor-exit p0

    .line 8071
    return v2

    .line 8073
    :cond_1f
    :try_start_1f
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 8074
    const/16 v2, 0x31

    .line 8073
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 8075
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCCModeController:Lcom/lge/mdm/controller/LGMDMCCModeController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMCCModeController;->setGranularControlOnCCMode(Landroid/content/ComponentName;II)Z
    :try_end_2b
    .catchall {:try_start_1f .. :try_end_2b} :catchall_2e

    move-result v0

    .local v0, "ret":Z
    monitor-exit p0

    .line 8078
    return v0

    .line 8062
    .local v0, "ret":Z
    :catchall_2e
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setLockoutNow(Landroid/content/ComponentName;ILjava/lang/String;Ljava/lang/String;I)Z
    .registers 14
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "level"    # I
    .param p3, "str"    # Ljava/lang/String;
    .param p4, "recoveryKey"    # Ljava/lang/String;
    .param p5, "userHandle"    # I

    .prologue
    const/4 v7, 0x1

    const/4 v6, 0x0

    .line 3391
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3392
    monitor-enter p0

    .line 3393
    :try_start_8
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3394
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_e
    .catchall {:try_start_8 .. :try_end_e} :catchall_77

    move-result v0

    if-nez v0, :cond_13

    monitor-exit p0

    .line 3395
    return v6

    .line 3397
    :cond_13
    :try_start_13
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_16
    .catchall {:try_start_13 .. :try_end_16} :catchall_77

    move-result v0

    if-nez v0, :cond_1b

    monitor-exit p0

    .line 3398
    return v6

    .line 3400
    :cond_1b
    :try_start_1b
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3401
    const/4 v1, 0x3

    .line 3400
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3402
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    move-object v1, p1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setLockoutNow(Landroid/content/ComponentName;ILjava/lang/String;Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_75

    .line 3403
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3404
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    const/4 v1, 0x1

    invoke-virtual {v0, p1, v1, p5}, Lcom/lge/mdm/controller/LGMDMDeviceController;->deviceMode(Landroid/content/ComponentName;II)V

    .line 3405
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setLockoutNow, level : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3406
    const-string/jumbo v2, " (0:UNLOCKOUT_STATE, 1:stUnlockoutNow(ComponentName), 2:LOCKOUT_STATE)"

    .line 3405
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3407
    const-string/jumbo v2, ", str : "

    .line 3405
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3407
    const-string/jumbo v2, ", recoveryKey : "

    .line 3405
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_73
    .catchall {:try_start_1b .. :try_end_73} :catchall_77

    monitor-exit p0

    .line 3408
    return v7

    :cond_75
    monitor-exit p0

    .line 3410
    return v6

    .line 3392
    :catchall_77
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setManualSyncWhenRoaming(Landroid/content/ComponentName;ZI)V
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 4380
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v5, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4381
    const/4 v4, -0x1

    .line 4382
    .local v4, "retValue":I
    const/4 v1, 0x0

    .line 4383
    .local v1, "needChangeIntent":Z
    monitor-enter p0

    .line 4384
    :try_start_8
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->getManualSyncWhenRoaming(Landroid/content/ComponentName;I)Z

    move-result v3

    .line 4387
    .local v3, "oldGlobalPolicy":Z
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 4388
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_8 .. :try_end_15} :catchall_76

    move-result v5

    if-nez v5, :cond_1a

    monitor-exit p0

    .line 4389
    return-void

    .line 4391
    :cond_1a
    :try_start_1a
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 4392
    const/16 v6, 0xb

    .line 4391
    invoke-virtual {v5, p1, v6}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 4393
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v5, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setManualSyncWhenRoaming(Landroid/content/ComponentName;ZI)I

    move-result v4

    .line 4394
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v6, "lgmdm_application_policies.xml"

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 4396
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    const/4 v6, 0x0

    invoke-virtual {v5, v6, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->getManualSyncWhenRoaming(Landroid/content/ComponentName;I)Z
    :try_end_35
    .catchall {:try_start_1a .. :try_end_35} :catchall_76

    move-result v2

    .line 4398
    .local v2, "newGlobalPolicy":Z
    if-eq v3, v2, :cond_74

    const/4 v1, 0x1

    :goto_39
    monitor-exit p0

    .line 4400
    const/4 v5, 0x2

    if-ne v4, v5, :cond_43

    .line 4401
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v5, p1, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->setManualSyncWhenRoaming(Landroid/content/ComponentName;I)I

    move-result v4

    .line 4404
    :cond_43
    iget-object v5, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMEmailController:Lcom/lge/mdm/controller/LGMDMEmailController;

    invoke-virtual {v5, v4, p3}, Lcom/lge/mdm/controller/LGMDMEmailController;->handleSetManualSyncWhenRoaming(II)V

    .line 4406
    if-eqz v1, :cond_73

    .line 4408
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v5, "com.lge.mdm.intent.action.MANUAL_SYNC_POLICY_CHANGE"

    invoke-direct {v0, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 4409
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v5

    invoke-virtual {v5, v0, p3}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcastAsUser(Landroid/content/Intent;I)V

    .line 4410
    const-string/jumbo v5, "LGMDMDevicePolicyManagerService"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v7, "setManualSyncWhenRoaming : "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 4379
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_73
    return-void

    .line 4398
    :cond_74
    const/4 v1, 0x0

    goto :goto_39

    .line 4383
    .end local v2    # "newGlobalPolicy":Z
    .end local v3    # "oldGlobalPolicy":Z
    :catchall_76
    move-exception v5

    monitor-exit p0

    throw v5
.end method

.method public setMicrophonePackage(Ljava/lang/String;ZI)V
    .registers 7
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "bSpeech"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 1469
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1470
    monitor-enter p0

    .line 1471
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setMicrophonePackage(Ljava/lang/String;ZI)V

    .line 1472
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setMicrophonePackage : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", packageName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_30
    .catchall {:try_start_6 .. :try_end_30} :catchall_32

    monitor-exit p0

    .line 1468
    return-void

    .line 1470
    :catchall_32
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setMicrophoneWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p4, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Z",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 1415
    .local p3, "list":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 1416
    monitor-enter p0

    .line 1417
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 1418
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_54

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 1419
    return-void

    .line 1421
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_54

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 1422
    return-void

    .line 1424
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 1425
    const/16 v1, 0x17

    .line 1424
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 1426
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMMicrophoneController:Lcom/lge/mdm/controller/LGMDMMicrophoneController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMMicrophoneController;->setMicrophoneWhitelist(Landroid/content/ComponentName;ZLjava/util/List;I)V

    .line 1427
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_hardware_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 1428
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setMicrophoneWhitelist : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_52
    .catchall {:try_start_19 .. :try_end_52} :catchall_54

    monitor-exit p0

    .line 1414
    return-void

    .line 1416
    :catchall_54
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setNotifyRemoveGoogleAccountDisabled(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 6768
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 6769
    monitor-enter p0

    .line 6770
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 6771
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 6772
    const/16 v1, 0x20

    .line 6771
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 6773
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_13
    .catchall {:try_start_6 .. :try_end_13} :catchall_49

    move-result v0

    if-nez v0, :cond_18

    monitor-exit p0

    .line 6774
    return-void

    .line 6776
    :cond_18
    :try_start_18
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1b
    .catchall {:try_start_18 .. :try_end_1b} :catchall_49

    move-result v0

    if-nez v0, :cond_20

    monitor-exit p0

    .line 6777
    return-void

    .line 6779
    :cond_20
    :try_start_20
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setNotifyRemoveGoogleAccountDisabled(Landroid/content/ComponentName;ZI)V

    .line 6780
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 6781
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setNotifyRemoveGoogleAccountDisabled : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_47
    .catchall {:try_start_20 .. :try_end_47} :catchall_49

    monitor-exit p0

    .line 6767
    return-void

    .line 6769
    :catchall_49
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setOwnerInfo(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "str"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 7191
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7192
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v1}, Lcom/lge/mdm/controller/LGMDMGeneralController;->getLockSettings()Lcom/android/internal/widget/ILockSettings;

    move-result-object v1

    if-nez v1, :cond_e

    .line 7193
    return-void

    .line 7195
    :cond_e
    monitor-enter p0

    .line 7196
    :try_start_f
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 7197
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_15
    .catchall {:try_start_f .. :try_end_15} :catchall_59

    move-result v1

    if-nez v1, :cond_1a

    monitor-exit p0

    .line 7198
    return-void

    .line 7200
    :cond_1a
    :try_start_1a
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_1d
    .catchall {:try_start_1a .. :try_end_1d} :catchall_59

    move-result v1

    if-nez v1, :cond_22

    monitor-exit p0

    .line 7201
    return-void

    .line 7203
    :cond_22
    :try_start_22
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7204
    const/16 v2, 0x28

    .line 7203
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7205
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setOwnerInfo(Landroid/content/ComponentName;Ljava/lang/String;I)V
    :try_end_2e
    .catchall {:try_start_22 .. :try_end_2e} :catchall_59

    monitor-exit p0

    .line 7208
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.OWNER_INFO_STRING_CHANGE"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 7209
    .local v0, "intent":Landroid/content/Intent;
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 7210
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setOwnerInfo, str : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7190
    return-void

    .line 7195
    .end local v0    # "intent":Landroid/content/Intent;
    :catchall_59
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setPasswordMinimumChange(Landroid/content/ComponentName;II)V
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "number"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 3128
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3129
    monitor-enter p0

    .line 3130
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3131
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_4c

    move-result v2

    if-nez v2, :cond_11

    monitor-exit p0

    .line 3132
    return-void

    .line 3134
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_4c

    move-result v2

    if-nez v2, :cond_19

    monitor-exit p0

    .line 3135
    return-void

    .line 3137
    :cond_19
    :try_start_19
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3139
    const/4 v3, 0x0

    .line 3137
    invoke-virtual {v2, p1, v3}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v0

    .line 3140
    .local v0, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v2, v0, p2, p3}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setPasswordMinimumChange(Lcom/lge/mdm/admin/LGMDMadminlist;II)Z

    move-result v1

    .line 3142
    .local v1, "changed":Z
    if-eqz v1, :cond_4a

    .line 3143
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v3, "lgmdm_general_policies.xml"

    invoke-virtual {v2, v3, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3144
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setPasswordMinimumChange : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_4a
    .catchall {:try_start_19 .. :try_end_4a} :catchall_4c

    :cond_4a
    monitor-exit p0

    .line 3127
    return-void

    .line 3129
    .end local v0    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v1    # "changed":Z
    :catchall_4c
    move-exception v2

    monitor-exit p0

    throw v2
.end method

.method public setPasswordRecoveryEnabled(Landroid/content/ComponentName;ZZI)Ljava/lang/String;
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "enable"    # Z
    .param p3, "isEas"    # Z
    .param p4, "userHandle"    # I

    .prologue
    .line 3254
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3255
    monitor-enter p0

    .line 3256
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3257
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_52

    move-result v1

    if-nez v1, :cond_12

    .line 3258
    const/4 v1, 0x0

    monitor-exit p0

    return-object v1

    .line 3260
    :cond_12
    :try_start_12
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3261
    const/4 v2, 0x0

    .line 3260
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3262
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v1, p1, p2, p4}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setPasswordRecoveryEnabled(Landroid/content/ComponentName;ZI)Ljava/lang/String;

    move-result-object v0

    .line 3264
    .local v0, "mPasswordrecovery":Ljava/lang/String;
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->setPasswordRecoveryByEas(ZI)V

    .line 3265
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_general_policies.xml"

    invoke-virtual {v1, v2, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3266
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setPasswordRecoveryEnabled : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, ", isEas : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_50
    .catchall {:try_start_12 .. :try_end_50} :catchall_52

    monitor-exit p0

    .line 3267
    return-object v0

    .line 3255
    .end local v0    # "mPasswordrecovery":Ljava/lang/String;
    :catchall_52
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public setRecentApplicationToastView(ZI)V
    .registers 6
    .param p1, "check"    # Z
    .param p2, "userHandle"    # I

    .prologue
    .line 7776
    monitor-enter p0

    .line 7777
    :try_start_1
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->setRecentApplicationToastView(ZI)V

    .line 7778
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setRecentApplicationToastView : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_20
    .catchall {:try_start_1 .. :try_end_20} :catchall_22

    monitor-exit p0

    .line 7775
    return-void

    .line 7776
    :catchall_22
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setRuntimePermissionGrantState(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;II)Z
    .registers 25
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "permission"    # Ljava/lang/String;
    .param p4, "grantState"    # I
    .param p5, "userHandle"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 537
    const/4 v11, 0x0

    .line 538
    .local v11, "checkPreCondi":Z
    const/16 v17, 0x0

    .line 539
    .local v17, "retSet":Z
    const/4 v14, 0x0

    .line 540
    .local v14, "oldPolicy":I
    const/4 v12, 0x0

    .line 541
    .local v12, "curState":I
    const/4 v15, 0x0

    .line 542
    .local v15, "oldPreState":I
    const/16 v16, 0x0

    .line 543
    .local v16, "preState":I
    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v18

    .line 544
    .local v18, "user":Landroid/os/UserHandle;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    move/from16 v0, p5

    invoke-virtual {v4, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 545
    const/4 v4, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v4}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkMDMpermission(Landroid/content/ComponentName;Z)Z

    move-result v4

    if-nez v4, :cond_22

    .line 546
    const/4 v4, 0x0

    return v4

    .line 548
    :cond_22
    invoke-direct/range {p0 .. p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getDevicePolicyManager()Landroid/app/admin/DevicePolicyManager;

    move-result-object v13

    .line 549
    .local v13, "dpm":Landroid/app/admin/DevicePolicyManager;
    move/from16 v0, p5

    invoke-virtual {v13, v0}, Landroid/app/admin/DevicePolicyManager;->getProfileOwnerAsUser(I)Landroid/content/ComponentName;

    move-result-object v4

    if-nez v4, :cond_34

    invoke-virtual {v13}, Landroid/app/admin/DevicePolicyManager;->getDeviceOwner()Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_3f

    .line 550
    :cond_34
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v5, "setRuntimePermissionGrantState AFW is activated."

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 551
    const/4 v4, 0x0

    return v4

    .line 553
    :cond_3f
    monitor-enter p0

    .line 555
    :try_start_40
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move-object/from16 v2, p3

    move/from16 v3, p5

    invoke-virtual {v4, v0, v1, v2, v3}, Lcom/lge/mdm/controller/LGMDMPermissionController;->checkRuntimePermissionGrantStateLocked(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)Z

    move-result v11

    .line 557
    .local v11, "checkPreCondi":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    .line 558
    const/4 v9, 0x1

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v8, p5

    .line 557
    invoke-virtual/range {v4 .. v9}, Lcom/lge/mdm/controller/LGMDMPermissionController;->getRuntimePermissionAdminValueLocked(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;IZ)I

    move-result v14

    .line 559
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    .line 560
    const/4 v9, 0x0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v8, p5

    .line 559
    invoke-virtual/range {v4 .. v9}, Lcom/lge/mdm/controller/LGMDMPermissionController;->getRuntimePermissionAdminValueLocked(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;IZ)I
    :try_end_71
    .catchall {:try_start_40 .. :try_end_71} :catchall_103

    move-result v15

    monitor-exit p0

    .line 562
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    move-object/from16 v2, p3

    invoke-virtual {v4, v0, v1, v2}, Lcom/lge/mdm/controller/LGMDMPermissionController;->getRuntimePermissionGrantState(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)I

    move-result v12

    .line 564
    if-eqz v11, :cond_106

    move/from16 v0, p4

    if-eq v12, v0, :cond_106

    .line 565
    if-eqz p4, :cond_109

    .line 567
    if-nez v14, :cond_11d

    .line 568
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-object/from16 v0, p2

    move-object/from16 v1, p3

    move-object/from16 v2, v18

    invoke-virtual {v4, v0, v1, v2}, Lcom/lge/mdm/controller/LGMDMPermissionController;->getAppPermissionState(Ljava/lang/String;Ljava/lang/String;Landroid/os/UserHandle;)I

    move-result v9

    .line 572
    .end local v16    # "preState":I
    .local v9, "preState":I
    :goto_99
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-object/from16 v0, p2

    move-object/from16 v1, p3

    move/from16 v2, p4

    move-object/from16 v3, v18

    invoke-virtual {v4, v0, v1, v2, v3}, Lcom/lge/mdm/controller/LGMDMPermissionController;->setPackagePermissionState(Ljava/lang/String;Ljava/lang/String;ILandroid/os/UserHandle;)Z

    move-result v17

    .line 579
    .end local v17    # "retSet":Z
    :goto_a9
    if-eqz v17, :cond_102

    .line 580
    monitor-enter p0

    .line 582
    :try_start_ac
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v8, p4

    move/from16 v10, p5

    invoke-virtual/range {v4 .. v10}, Lcom/lge/mdm/controller/LGMDMPermissionController;->updateLGMDMAdminListLocked(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;III)V

    .line 585
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v5, "lgmdm_application_policies.xml"

    move/from16 v0, p5

    invoke-virtual {v4, v5, v0}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_c9
    .catchall {:try_start_ac .. :try_end_c9} :catchall_11a

    monitor-exit p0

    .line 587
    const-string/jumbo v4, "LGMDMDevicePolicyManagerService"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v6, "setRuntimePermissionGrantState : package : "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 588
    const-string/jumbo v6, "permission : "

    .line 587
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p3

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    .line 588
    const-string/jumbo v6, "grantState : "

    .line 587
    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p4

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-static {v4, v5, v0}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 590
    :cond_102
    return v17

    .line 553
    .end local v9    # "preState":I
    .end local v11    # "checkPreCondi":Z
    .restart local v16    # "preState":I
    .restart local v17    # "retSet":Z
    :catchall_103
    move-exception v4

    monitor-exit p0

    throw v4

    .restart local v11    # "checkPreCondi":Z
    :cond_106
    move/from16 v9, v16

    .line 564
    .end local v16    # "preState":I
    .restart local v9    # "preState":I
    goto :goto_a9

    .line 575
    .end local v9    # "preState":I
    .restart local v16    # "preState":I
    :cond_109
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPermissionController:Lcom/lge/mdm/controller/LGMDMPermissionController;

    move-object/from16 v0, p2

    move-object/from16 v1, p3

    move-object/from16 v2, v18

    invoke-virtual {v4, v0, v1, v15, v2}, Lcom/lge/mdm/controller/LGMDMPermissionController;->restorePermissionState(Ljava/lang/String;Ljava/lang/String;ILandroid/os/UserHandle;)Z

    move-result v17

    .local v17, "retSet":Z
    move/from16 v9, v16

    .end local v16    # "preState":I
    .restart local v9    # "preState":I
    goto :goto_a9

    .line 580
    .end local v17    # "retSet":Z
    :catchall_11a
    move-exception v4

    monitor-exit p0

    throw v4

    .end local v9    # "preState":I
    .restart local v16    # "preState":I
    .local v17, "retSet":Z
    :cond_11d
    move/from16 v9, v16

    .end local v16    # "preState":I
    .restart local v9    # "preState":I
    goto/16 :goto_99
.end method

.method public setStorageEncryption(Landroid/content/ComponentName;ZILjava/lang/String;I)I
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "encrypt"    # Z
    .param p3, "flags"    # I
    .param p4, "password"    # Ljava/lang/String;
    .param p5, "userHandle"    # I

    .prologue
    .line 4602
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4604
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v0

    if-nez v0, :cond_25

    .line 4605
    const-string/jumbo v0, "com.android.systemui"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {p0, v1, p5}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkPackageNameFromPID(II)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_25

    .line 4607
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "No active admin "

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4611
    :cond_25
    monitor-enter p0

    .line 4612
    if-eqz p5, :cond_2b

    .line 4613
    const/4 v0, -0x1

    monitor-exit p0

    return v0

    .line 4615
    :cond_2b
    :try_start_2b
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setStorageEncryption : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", flags : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", password : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 4616
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCryptoController:Lcom/lge/mdm/controller/LGMDMCryptoController;

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMCryptoController;->setStorageEncryption(Landroid/content/ComponentName;ZILjava/lang/String;I)I
    :try_end_65
    .catchall {:try_start_2b .. :try_end_65} :catchall_68

    move-result v0

    monitor-exit p0

    return v0

    .line 4611
    :catchall_68
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setTrueRepartValue(Landroid/content/ComponentName;Ljava/lang/String;I)I
    .registers 9
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "val"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    const/4 v4, 0x0

    .line 7716
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 7718
    sget-object v3, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->SYNC_ATCLIENT:Ljava/lang/Object;

    monitor-enter v3

    .line 7719
    :try_start_9
    const-string/jumbo v2, "ro.build.target_operator"

    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v0

    .line 7720
    .local v0, "mTargetOperator":Ljava/lang/String;
    const-string/jumbo v2, "SKT"

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_16
    .catchall {:try_start_9 .. :try_end_16} :catchall_4c

    move-result v2

    if-nez v2, :cond_1b

    monitor-exit v3

    .line 7721
    return v4

    .line 7724
    :cond_1b
    const/4 v2, 0x1

    :try_start_1c
    invoke-virtual {p0, p1, v2}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkMDMpermission(Landroid/content/ComponentName;Z)Z
    :try_end_1f
    .catchall {:try_start_1c .. :try_end_1f} :catchall_4c

    move-result v2

    if-nez v2, :cond_24

    monitor-exit v3

    .line 7725
    return v4

    .line 7728
    :cond_24
    :try_start_24
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 7729
    const/4 v4, 0x0

    .line 7728
    invoke-virtual {v2, p1, v4}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 7731
    iget-object v2, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMSKTSSMController:Lcom/lge/mdm/controller/LGMDMSKTSSMController;

    invoke-virtual {v2, p2}, Lcom/lge/mdm/controller/LGMDMSKTSSMController;->setATClientTrueRepartValue(Ljava/lang/String;)I
    :try_end_2f
    .catchall {:try_start_24 .. :try_end_2f} :catchall_4c

    move-result v1

    .local v1, "result":I
    monitor-exit v3

    .line 7733
    const-string/jumbo v2, "LGMDMDevicePolicyManagerService"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v4, "setTrueRepartValue, val : "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 7734
    return v1

    .line 7718
    .end local v0    # "mTargetOperator":Ljava/lang/String;
    .end local v1    # "result":I
    :catchall_4c
    move-exception v2

    monitor-exit v3

    throw v2
.end method

.method public setUnlockoutNow(Landroid/content/ComponentName;I)V
    .registers 5
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "userHandle"    # I

    .prologue
    .line 3415
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3416
    monitor-enter p0

    .line 3417
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3418
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_3d

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3419
    return-void

    .line 3421
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_3d

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3422
    return-void

    .line 3424
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3425
    const/4 v1, 0x3

    .line 3424
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3426
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMPasswordController:Lcom/lge/mdm/controller/LGMDMPasswordController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMPasswordController;->setUnlockoutNow(Landroid/content/ComponentName;I)V

    .line 3427
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3428
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMDeviceController:Lcom/lge/mdm/controller/LGMDMDeviceController;

    const/4 v1, 0x2

    invoke-virtual {v0, p1, v1, p2}, Lcom/lge/mdm/controller/LGMDMDeviceController;->deviceMode(Landroid/content/ComponentName;II)V

    .line 3429
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "setUnlockoutNow"

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_3b
    .catchall {:try_start_19 .. :try_end_3b} :catchall_3d

    monitor-exit p0

    .line 3414
    return-void

    .line 3416
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setWarningMsg(Landroid/content/ComponentName;ZLjava/lang/String;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "str"    # Ljava/lang/String;
    .param p4, "userHandle"    # I

    .prologue
    .line 3344
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3345
    monitor-enter p0

    .line 3346
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3347
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_53

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3348
    return-void

    .line 3350
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_53

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3351
    return-void

    .line 3353
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3354
    const/4 v1, 0x3

    .line 3353
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLockedForNativePolicy(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 3355
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMGeneralController;->setWarningMsg(Landroid/content/ComponentName;ZLjava/lang/String;I)V

    .line 3356
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 3357
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "setWarningMsg : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", str : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V
    :try_end_51
    .catchall {:try_start_19 .. :try_end_51} :catchall_53

    monitor-exit p0

    .line 3343
    return-void

    .line 3345
    :catchall_53
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public setWiFiSecurityLevel(Landroid/content/ComponentName;II)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "policy"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 5339
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5340
    const/4 v0, 0x0

    .line 5341
    .local v0, "needUpdateConfig":Z
    monitor-enter p0

    .line 5342
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5343
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_59

    move-result v1

    if-nez v1, :cond_12

    monitor-exit p0

    .line 5344
    return-void

    .line 5346
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_59

    move-result v1

    if-nez v1, :cond_1a

    monitor-exit p0

    .line 5347
    return-void

    .line 5349
    :cond_1a
    :try_start_1a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5350
    const/16 v2, 0x12

    .line 5349
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5351
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->setWiFiSecurityLevel(Landroid/content/ComponentName;II)Z

    move-result v0

    .line 5352
    .local v0, "needUpdateConfig":Z
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v2, "lgmdm_hardware_policies.xml"

    invoke-virtual {v1, v2, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V
    :try_end_2f
    .catchall {:try_start_1a .. :try_end_2f} :catchall_59

    monitor-exit p0

    .line 5354
    if-eqz v0, :cond_58

    .line 5355
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v1, p2, p3}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateConfiguredNetworks(II)V

    .line 5356
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "setWiFiSecurityLevel : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string/jumbo v3, " (0:NONE, 1:WEP, 2:WPA, 3:EAP)"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5338
    :cond_58
    return-void

    .line 5341
    .end local v0    # "needUpdateConfig":Z
    :catchall_59
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public startApplication(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;II)V
    .registers 13
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "subInfo"    # Ljava/lang/String;
    .param p4, "type"    # I
    .param p5, "userHandle"    # I

    .prologue
    .line 3878
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3879
    monitor-enter p0

    .line 3880
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3881
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_5d

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3882
    return-void

    .line 3884
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_5d

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3885
    return-void

    .line 3887
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3888
    const/16 v1, 0x1b

    .line 3887
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_20
    .catchall {:try_start_19 .. :try_end_20} :catchall_5d

    monitor-exit p0

    .line 3890
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v5, 0x1

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v6, p5

    invoke-virtual/range {v0 .. v6}, Lcom/lge/mdm/controller/LGMDMApplicationController;->startApplication(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;IZI)V

    .line 3891
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "startApplication, packageName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3892
    const-string/jumbo v2, ", subInfo : "

    .line 3891
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 3892
    const-string/jumbo v2, ", type : "

    .line 3891
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3893
    return-void

    .line 3879
    :catchall_5d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public startDeclawingPolicies(I)J
    .registers 4
    .param p1, "userHandle"    # I

    .prologue
    .line 8455
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mPriviligedUserController:Lcom/lge/mdm/controller/LGMDMPriviligedUserController;

    invoke-virtual {v0, p1}, Lcom/lge/mdm/controller/LGMDMPriviligedUserController;->startDeclawingPolicies(I)J

    move-result-wide v0

    return-wide v0
.end method

.method public startLockdownApps(I)Z
    .registers 12
    .param p1, "userHandle"    # I

    .prologue
    const/4 v9, 0x0

    .line 3930
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v8, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3931
    const/4 v4, 0x0

    .line 3932
    .local v4, "result":Z
    const/4 v0, 0x0

    .line 3933
    .local v0, "activity":Ljava/lang/String;
    const/4 v2, 0x0

    .line 3934
    .local v2, "packageName":Ljava/lang/String;
    const/4 v1, 0x0

    .line 3935
    .local v1, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    const/4 v7, 0x0

    .line 3936
    .local v7, "who":Landroid/content/ComponentName;
    const/4 v6, 0x0

    .line 3937
    .local v6, "runningApplicationMaxCrashNum":I
    const/4 v5, 0x0

    .line 3939
    .local v5, "runningApplicationCrashNum":I
    monitor-enter p0

    .line 3940
    :try_start_e
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v8, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getLastLockdownAppsCompnentName(I)Landroid/content/ComponentName;
    :try_end_13
    .catchall {:try_start_e .. :try_end_13} :catchall_2c

    move-result-object v7

    .line 3941
    .local v7, "who":Landroid/content/ComponentName;
    if-nez v7, :cond_18

    monitor-exit p0

    .line 3942
    return v9

    .line 3944
    :cond_18
    :try_start_18
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v8, v7, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminUncheckedLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    move-result-object v1

    .line 3945
    .local v1, "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    if-eqz v1, :cond_28

    .line 3946
    iget-object v0, v1, Lcom/lge/mdm/admin/LGMDMadminlist;->runningapplicationactivity:Ljava/lang/String;

    .line 3947
    .local v0, "activity":Ljava/lang/String;
    iget-object v2, v1, Lcom/lge/mdm/admin/LGMDMadminlist;->runningapplicationpackage:Ljava/lang/String;

    .line 3948
    .local v2, "packageName":Ljava/lang/String;
    iget v6, v1, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationMaxCrashNum:I

    .line 3949
    iget v5, v1, Lcom/lge/mdm/admin/LGMDMadminlist;->runningApplicationReportCrashNum:I
    :try_end_28
    .catchall {:try_start_18 .. :try_end_28} :catchall_2c

    .end local v0    # "activity":Ljava/lang/String;
    .end local v2    # "packageName":Ljava/lang/String;
    :cond_28
    monitor-exit p0

    .line 3953
    if-gt v6, v5, :cond_2f

    .line 3954
    return v9

    .line 3939
    .end local v1    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .end local v7    # "who":Landroid/content/ComponentName;
    :catchall_2c
    move-exception v8

    monitor-exit p0

    throw v8

    .line 3957
    .restart local v1    # "admin":Lcom/lge/mdm/admin/LGMDMadminlist;
    .restart local v7    # "who":Landroid/content/ComponentName;
    :cond_2f
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mContext:Landroid/content/Context;

    invoke-direct {p0, v8, v2, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->getAllowMDMAplicationPolicy(Landroid/content/Context;Ljava/lang/String;I)Z

    move-result v8

    invoke-static {v8}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v3

    .line 3958
    .local v3, "policystate":Ljava/lang/Boolean;
    invoke-virtual {v3}, Ljava/lang/Boolean;->booleanValue()Z

    move-result v8

    if-eqz v8, :cond_4e

    .line 3959
    iget-object v8, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v8, v7, v2, v0, p1}, Lcom/lge/mdm/controller/LGMDMApplicationController;->startLockdownApps(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)Z

    move-result v4

    .line 3960
    .local v4, "result":Z
    const-string/jumbo v8, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v9, "startLockdownApps"

    invoke-static {v8, v9}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 3962
    .end local v4    # "result":Z
    :cond_4e
    return v4
.end method

.method public stopApplication(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3905
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3906
    monitor-enter p0

    .line 3907
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3908
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_28

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3909
    return-void

    .line 3911
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_28

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3912
    return-void

    .line 3914
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3915
    const/16 v1, 0x1b

    .line 3914
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_20
    .catchall {:try_start_19 .. :try_end_20} :catchall_28

    monitor-exit p0

    .line 3918
    invoke-virtual {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAppControlCheck()Z

    move-result v0

    if-eqz v0, :cond_2b

    .line 3919
    return-void

    .line 3906
    :catchall_28
    move-exception v0

    monitor-exit p0

    throw v0

    .line 3922
    :cond_2b
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->stopApplication(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 3923
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "stopApplication, packageNAme : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3904
    return-void
.end method

.method public systemReady()V
    .registers 1

    .prologue
    .line 4630
    monitor-enter p0

    monitor-exit p0

    .line 4629
    return-void
.end method

.method public turnOn3G4GDataNetwork(Landroid/content/ComponentName;ZI)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "allow"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 5393
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5394
    monitor-enter p0

    .line 5395
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5396
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_31

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 5397
    return-void

    .line 5399
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_31

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 5400
    return-void

    .line 5402
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5403
    const/16 v1, 0x1c

    .line 5402
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_20
    .catchall {:try_start_19 .. :try_end_20} :catchall_31

    monitor-exit p0

    .line 5405
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isWifiOnly()Z

    move-result v0

    if-eqz v0, :cond_34

    .line 5406
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v1, "can not control data policy becase of wifi only model"

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMLog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 5407
    return-void

    .line 5394
    :catchall_31
    move-exception v0

    monitor-exit p0

    throw v0

    .line 5409
    :cond_34
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMNetworkController:Lcom/lge/mdm/controller/LGMDMNetworkController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMNetworkController;->turnOn3G4GDataNetwork(Landroid/content/ComponentName;ZI)V

    .line 5410
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "turnOn3G4GGataNetwork : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5392
    return-void
.end method

.method public turnOnOffGPS(Landroid/content/ComponentName;ZI)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "turningOn"    # Z
    .param p3, "userHandle"    # I

    .prologue
    .line 5371
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5372
    const/4 v0, -0x1

    .line 5373
    .local v0, "value":I
    monitor-enter p0

    .line 5374
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5375
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_48

    move-result v1

    if-nez v1, :cond_12

    monitor-exit p0

    .line 5376
    return-void

    .line 5378
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_48

    move-result v1

    if-nez v1, :cond_1a

    monitor-exit p0

    .line 5379
    return-void

    .line 5381
    :cond_1a
    :try_start_1a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5382
    const/16 v2, 0x1c

    .line 5381
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5383
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->turnOnOffGPS(Landroid/content/ComponentName;ZI)I
    :try_end_26
    .catchall {:try_start_1a .. :try_end_26} :catchall_48

    move-result v0

    monitor-exit p0

    .line 5385
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGpsController:Lcom/lge/mdm/controller/LGMDMGpsController;

    invoke-virtual {v1, v0, p3}, Lcom/lge/mdm/controller/LGMDMGpsController;->settingGPSLocation(II)V

    .line 5386
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "turnOnOffGPS : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5370
    return-void

    .line 5373
    :catchall_48
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public unInstallLGVpnCertificate(Landroid/content/ComponentName;Ljava/lang/String;I)I
    .registers 6
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 2233
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2234
    monitor-enter p0

    .line 2235
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2236
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2237
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2239
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2240
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2242
    :cond_25
    if-eqz p3, :cond_2f

    .line 2243
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2245
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2246
    const/4 v1, 0x7

    .line 2245
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2247
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMVpnController;->unInstallLGVpnCertificate(Landroid/content/ComponentName;Ljava/lang/String;I)I
    :try_end_3a
    .catchall {:try_start_2f .. :try_end_3a} :catchall_3d

    move-result v0

    monitor-exit p0

    return v0

    .line 2234
    :catchall_3d
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public uninstallApplication(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3626
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3627
    monitor-enter p0

    .line 3628
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3629
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_44

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3630
    return-void

    .line 3632
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_44

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3633
    return-void

    .line 3635
    :cond_19
    if-eqz p3, :cond_1d

    monitor-exit p0

    .line 3636
    return-void

    .line 3638
    :cond_1d
    :try_start_1d
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3639
    const/4 v1, 0x0

    .line 3638
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_23
    .catchall {:try_start_1d .. :try_end_23} :catchall_44

    monitor-exit p0

    .line 3641
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->uninstallApplication(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 3642
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "uninstallApplication, packageName : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3625
    return-void

    .line 3627
    :catchall_44
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public uninstallCertificate(Landroid/content/ComponentName;Ljava/lang/String;II)Z
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "certificateId"    # Ljava/lang/String;
    .param p3, "useType"    # I
    .param p4, "userHandle"    # I

    .prologue
    const/4 v1, 0x0

    .line 5061
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p4}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 5062
    monitor-enter p0

    .line 5063
    :try_start_7
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 5064
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_d
    .catchall {:try_start_7 .. :try_end_d} :catchall_46

    move-result v0

    if-nez v0, :cond_12

    monitor-exit p0

    .line 5065
    return v1

    .line 5067
    :cond_12
    :try_start_12
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_15
    .catchall {:try_start_12 .. :try_end_15} :catchall_46

    move-result v0

    if-nez v0, :cond_1a

    monitor-exit p0

    .line 5068
    return v1

    .line 5070
    :cond_1a
    if-eqz p4, :cond_1e

    monitor-exit p0

    .line 5071
    return v1

    .line 5073
    :cond_1e
    :try_start_1e
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 5074
    const/4 v1, 0x6

    .line 5073
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 5075
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "uninstallCertificate, certificateId : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 5076
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMCertificateController:Lcom/lge/mdm/controller/LGMDMCertificateController;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/lge/mdm/controller/LGMDMCertificateController;->uninstallCertificate(Landroid/content/ComponentName;Ljava/lang/String;II)Z
    :try_end_43
    .catchall {:try_start_1e .. :try_end_43} :catchall_46

    move-result v0

    monitor-exit p0

    return v0

    .line 5062
    :catchall_46
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public uninstallSignatureApp(Landroid/content/ComponentName;Ljava/util/List;I)V
    .registers 7
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p3, "userHandle"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/ComponentName;",
            "Ljava/util/List",
            "<",
            "Ljava/lang/String;",
            ">;I)V"
        }
    .end annotation

    .prologue
    .line 3830
    .local p2, "packagelist":Ljava/util/List;, "Ljava/util/List<Ljava/lang/String;>;"
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3831
    monitor-enter p0

    .line 3832
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3833
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_40

    move-result v0

    if-nez v0, :cond_11

    monitor-exit p0

    .line 3834
    return-void

    .line 3836
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_40

    move-result v0

    if-nez v0, :cond_19

    monitor-exit p0

    .line 3837
    return-void

    .line 3839
    :cond_19
    :try_start_19
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3840
    const/4 v1, 0x0

    .line 3839
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_1f
    .catchall {:try_start_19 .. :try_end_1f} :catchall_40

    monitor-exit p0

    .line 3842
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->uninstallSignatureApp(Landroid/content/ComponentName;Ljava/util/List;I)V

    .line 3843
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "uninstallSignatureApp, list : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3829
    return-void

    .line 3831
    :catchall_40
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public updateLGVpnCertificate(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I
    .registers 12
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "newCertName"    # Ljava/lang/String;
    .param p3, "newPassword"    # Ljava/lang/String;
    .param p4, "oldCertName"    # Ljava/lang/String;
    .param p5, "userHandle"    # I

    .prologue
    .line 2252
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p5}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2253
    monitor-enter p0

    .line 2254
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 2255
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_17

    .line 2256
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_14
    .catchall {:try_start_6 .. :try_end_14} :catchall_42

    move-result v0

    monitor-exit p0

    return v0

    .line 2258
    :cond_17
    :try_start_17
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_25

    .line 2259
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_22
    .catchall {:try_start_17 .. :try_end_22} :catchall_42

    move-result v0

    monitor-exit p0

    return v0

    .line 2261
    :cond_25
    if-eqz p5, :cond_2f

    .line 2262
    :try_start_27
    sget-object v0, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->UNKNOWN:Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;

    invoke-virtual {v0}, Lcom/lge/mdm/config/LGMDMLgVpnProfile$LGVPN_DM_CERTIFICATE_RESULT;->getCode()I
    :try_end_2c
    .catchall {:try_start_27 .. :try_end_2c} :catchall_42

    move-result v0

    monitor-exit p0

    return v0

    .line 2264
    :cond_2f
    :try_start_2f
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 2265
    const/4 v1, 0x7

    .line 2264
    invoke-virtual {v0, p1, v1}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;

    .line 2266
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMVpnController:Lcom/lge/mdm/controller/LGMDMVpnController;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/lge/mdm/controller/LGMDMVpnController;->updateLGVpnCertificate(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)I
    :try_end_3f
    .catchall {:try_start_2f .. :try_end_3f} :catchall_42

    move-result v0

    monitor-exit p0

    return v0

    .line 2253
    :catchall_42
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public updateNetwork(Lcom/lge/mdm/config/LGMDMWifiConfiguration;I)I
    .registers 6
    .param p1, "config"    # Lcom/lge/mdm/config/LGMDMWifiConfiguration;
    .param p2, "userHandle"    # I

    .prologue
    const/4 v1, -0x1

    .line 4881
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4882
    const/4 v0, 0x0

    invoke-virtual {p0, v0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z

    move-result v0

    if-nez v0, :cond_e

    .line 4883
    return v1

    .line 4885
    :cond_e
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z

    move-result v0

    if-nez v0, :cond_15

    .line 4886
    return v1

    .line 4888
    :cond_15
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "updateNetwork, config : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4889
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMWifiController:Lcom/lge/mdm/controller/LGMDMWifiController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMWifiController;->updateNetwork(Lcom/lge/mdm/config/LGMDMWifiConfiguration;I)I

    move-result v0

    return v0
.end method

.method public updateWatcherAndKeeper(I)V
    .registers 5
    .param p1, "userHandle"    # I

    .prologue
    .line 4256
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p1}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4258
    const-string/jumbo v0, ""

    .line 4259
    .local v0, "lockDownPackage":Ljava/lang/String;
    monitor-enter p0

    .line 4260
    :try_start_9
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    const/4 v2, 0x0

    invoke-virtual {v1, v2, p1}, Lcom/lge/mdm/controller/LGMDMApplicationController;->getLockdownAppsPackage(Landroid/content/ComponentName;I)Ljava/lang/String;
    :try_end_f
    .catchall {:try_start_9 .. :try_end_f} :catchall_20

    move-result-object v0

    monitor-exit p0

    .line 4262
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, v0, p1}, Lcom/lge/mdm/controller/LGMDMApplicationController;->realStartApplication(Ljava/lang/String;I)V

    .line 4263
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    const-string/jumbo v2, "updateWatcherAndKeeper"

    invoke-static {v1, v2}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V

    .line 4255
    return-void

    .line 4259
    :catchall_20
    move-exception v1

    monitor-exit p0

    throw v1
.end method

.method public updateWatcherAndKeeperExceptionList([Ljava/lang/String;II)V
    .registers 7
    .param p1, "packages"    # [Ljava/lang/String;
    .param p2, "type"    # I
    .param p3, "userHandle"    # I

    .prologue
    .line 4239
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 4241
    monitor-enter p0

    .line 4242
    :try_start_6
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v0, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->updateWatcherAndKeeperExceptionList([Ljava/lang/String;II)V

    .line 4244
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "updateWatcherAndKeeperExceptionList, packages : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string/jumbo v2, ", type : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_30
    .catchall {:try_start_6 .. :try_end_30} :catchall_32

    monitor-exit p0

    .line 4238
    return-void

    .line 4241
    :catchall_32
    move-exception v0

    monitor-exit p0

    throw v0
.end method

.method public wipeApplicationCache(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3521
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3522
    monitor-enter p0

    .line 3523
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3524
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_27

    move-result v1

    if-nez v1, :cond_11

    monitor-exit p0

    .line 3525
    return-void

    .line 3527
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_27

    move-result v1

    if-nez v1, :cond_19

    monitor-exit p0

    .line 3528
    return-void

    .line 3530
    :cond_19
    :try_start_19
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3531
    const/4 v2, 0x3

    .line 3530
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_1f
    .catchall {:try_start_19 .. :try_end_1f} :catchall_27

    monitor-exit p0

    .line 3534
    invoke-virtual {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAppControlCheck()Z

    move-result v1

    if-eqz v1, :cond_2a

    .line 3535
    return-void

    .line 3522
    :catchall_27
    move-exception v1

    monitor-exit p0

    throw v1

    .line 3537
    :cond_2a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->wipeApplicationCache(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 3538
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.package.disabled"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3539
    .local v0, "intent":Landroid/content/Intent;
    const-string/jumbo v1, "package"

    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 3540
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 3541
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "wipeApplicationCache, packageName : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3520
    return-void
.end method

.method public wipeApplicationData(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3496
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3497
    monitor-enter p0

    .line 3498
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3499
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_27

    move-result v1

    if-nez v1, :cond_11

    monitor-exit p0

    .line 3500
    return-void

    .line 3502
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_27

    move-result v1

    if-nez v1, :cond_19

    monitor-exit p0

    .line 3503
    return-void

    .line 3505
    :cond_19
    :try_start_19
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3506
    const/4 v2, 0x3

    .line 3505
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_1f
    .catchall {:try_start_19 .. :try_end_1f} :catchall_27

    monitor-exit p0

    .line 3509
    invoke-virtual {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAppControlCheck()Z

    move-result v1

    if-eqz v1, :cond_2a

    .line 3510
    return-void

    .line 3497
    :catchall_27
    move-exception v1

    monitor-exit p0

    throw v1

    .line 3513
    :cond_2a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->wipeApplicationData(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 3514
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.package.disabled"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3515
    .local v0, "intent":Landroid/content/Intent;
    const-string/jumbo v1, "package"

    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 3516
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 3517
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "wipeApplicationData, packageName : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3495
    return-void
.end method

.method public wipeApplicationDefault(Landroid/content/ComponentName;Ljava/lang/String;I)V
    .registers 8
    .param p1, "who"    # Landroid/content/ComponentName;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "userHandle"    # I

    .prologue
    .line 3545
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v1, p3}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 3546
    monitor-enter p0

    .line 3547
    :try_start_6
    invoke-direct {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->checkComponentName(Landroid/content/ComponentName;)V

    .line 3548
    invoke-virtual {p0, p1}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isSuccessAuthCheck(Landroid/content/ComponentName;)Z
    :try_end_c
    .catchall {:try_start_6 .. :try_end_c} :catchall_27

    move-result v1

    if-nez v1, :cond_11

    monitor-exit p0

    .line 3549
    return-void

    .line 3551
    :cond_11
    :try_start_11
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAPILevelAllFeature()Z
    :try_end_14
    .catchall {:try_start_11 .. :try_end_14} :catchall_27

    move-result v1

    if-nez v1, :cond_19

    monitor-exit p0

    .line 3552
    return-void

    .line 3554
    :cond_19
    :try_start_19
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    .line 3555
    const/4 v2, 0x3

    .line 3554
    invoke-virtual {v1, p1, v2}, Lcom/lge/mdm/admin/LGMDMadministrator;->getActiveAdminForCallerLocked(Landroid/content/ComponentName;I)Lcom/lge/mdm/admin/LGMDMadminlist;
    :try_end_1f
    .catchall {:try_start_19 .. :try_end_1f} :catchall_27

    monitor-exit p0

    .line 3558
    invoke-virtual {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAppControlCheck()Z

    move-result v1

    if-eqz v1, :cond_2a

    .line 3559
    return-void

    .line 3546
    :catchall_27
    move-exception v1

    monitor-exit p0

    throw v1

    .line 3561
    :cond_2a
    iget-object v1, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMApplicationCotroller:Lcom/lge/mdm/controller/LGMDMApplicationController;

    invoke-virtual {v1, p1, p2, p3}, Lcom/lge/mdm/controller/LGMDMApplicationController;->wipeApplicationDefault(Landroid/content/ComponentName;Ljava/lang/String;I)V

    .line 3562
    new-instance v0, Landroid/content/Intent;

    const-string/jumbo v1, "com.lge.mdm.intent.action.package.disabled"

    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 3563
    .local v0, "intent":Landroid/content/Intent;
    const-string/jumbo v1, "package"

    invoke-virtual {v0, v1, p2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 3564
    invoke-static {}, Lcom/lge/mdm/controller/LGMDMHandler;->getInstance()Lcom/lge/mdm/controller/LGMDMHandler;

    move-result-object v1

    invoke-virtual {v1, v0}, Lcom/lge/mdm/controller/LGMDMHandler;->sendBroadcast(Landroid/content/Intent;)V

    .line 3565
    const-string/jumbo v1, "LGMDMDevicePolicyManagerService"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v3, "wipeApplicationDefault, packageName : "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2, p1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;)V

    .line 3544
    return-void
.end method

.method public wipeData(II)V
    .registers 6
    .param p1, "flags"    # I
    .param p2, "userHandle"    # I

    .prologue
    .line 2947
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->enforceCrossUserPermission(I)V

    .line 2949
    invoke-direct {p0}, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->isAuthorizedCaller()Z

    move-result v0

    if-nez v0, :cond_14

    .line 2950
    new-instance v0, Ljava/lang/SecurityException;

    const-string/jumbo v1, "No active admin "

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2953
    :cond_14
    monitor-enter p0

    .line 2954
    :try_start_15
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->setWipeDataPolicy(II)V

    .line 2955
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMadministrator:Lcom/lge/mdm/admin/LGMDMadministrator;

    const-string/jumbo v1, "lgmdm_general_policies.xml"

    invoke-virtual {v0, v1, p2}, Lcom/lge/mdm/admin/LGMDMadministrator;->saveSettingsLocked(Ljava/lang/String;I)V

    .line 2956
    iget-object v0, p0, Lcom/lge/mdm/controller/LGMDMDevicePolicyManagerService;->mLGMDMGeneralController:Lcom/lge/mdm/controller/LGMDMGeneralController;

    invoke-virtual {v0, p1, p2}, Lcom/lge/mdm/controller/LGMDMGeneralController;->wipeData(II)V

    .line 2957
    const-string/jumbo v0, "LGMDMDevicePolicyManagerService"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string/jumbo v2, "wipeData, flags : "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 2958
    const-string/jumbo v2, " (0:FACTORY RESET, 1:SD card Erase + Factory Reset"

    .line 2957
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    .line 2959
    const-string/jumbo v2, "2:SIM card(Contact info) Erase + SD card Erase + Factory Reset)"

    .line 2957
    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Lcom/lge/mdm/util/MDMCClog;->i(Ljava/lang/String;Ljava/lang/String;)V
    :try_end_4f
    .catchall {:try_start_15 .. :try_end_4f} :catchall_51

    monitor-exit p0

    .line 2946
    return-void

    .line 2953
    :catchall_51
    move-exception v0

    monitor-exit p0

    throw v0
.end method
